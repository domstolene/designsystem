{"version":3,"file":"Feedback.stories-fed0b497.js","sources":["../../../../packages/components/src/components/Feedback/FlexContainer.tsx","../../../../packages/components/src/components/Feedback/RatingComponent.tsx","../../../../packages/components/src/components/Feedback/CommentComponent.tsx","../../../../packages/components/src/components/Feedback/Feedback.tsx"],"sourcesContent":["import { CSSProperties } from 'react';\nimport styled, { css } from 'styled-components';\nimport { ddsBaseTokens } from '@norges-domstoler/dds-design-tokens';\n\ntype FlexContainerProps = {\n  flexDirection: CSSProperties['flexDirection'];\n};\n\nexport const FlexContainer = styled.div<FlexContainerProps>`\n  display: flex;\n  ${({ flexDirection }) => css`\n    flex-direction: ${flexDirection};\n    gap: ${ddsBaseTokens.spacing.SizesDdsSpacingLocalX1};\n  `};\n`;\n","import styled, { css } from 'styled-components';\nimport { ddsBaseTokens } from '@norges-domstoler/dds-design-tokens';\nimport { Thumbup, Thumbdown } from '@norges-domstoler/dds-icons';\nimport { Label } from '@norges-domstoler/dds-typography';\n\nimport { Layout, Rating } from './Feedback.types';\nimport { Spinner } from '../Spinner';\nimport { Tooltip } from '../Tooltip';\nimport { Button } from '../Button';\nimport { FlexContainer } from './FlexContainer';\n\ntype RatingContainerProps = {\n  layout: Layout;\n};\n\nconst RatingContainer = styled.div<RatingContainerProps>`\n  display: flex;\n  gap: ${ddsBaseTokens.spacing.SizesDdsSpacingLocalX1};\n  ${({ layout }) => css`\n    flex-direction: ${layout === 'horizontal' ? 'row' : 'column'};\n    align-items: ${layout === 'horizontal' ? 'center' : 'start'};\n  `}\n`;\n\nconst RatingButton = styled(Button)`\n  padding: 0px;\n  color: ${ddsBaseTokens.colors.DdsColorNeutralsGray7};\n`;\n\ntype RatingComponentType = {\n  layout: Layout;\n  ratingLabel: string;\n  loading: boolean;\n  thumbUpTooltip: string;\n  thumbDownTooltip: string;\n  handleRatingChange: (rating: Rating) => void;\n};\n\nexport const RatingComponent = ({\n  layout,\n  ratingLabel,\n  loading,\n  thumbUpTooltip,\n  thumbDownTooltip,\n  handleRatingChange,\n}: RatingComponentType) => {\n  return (\n    <RatingContainer layout={layout}>\n      <Label>{ratingLabel}</Label>\n      {loading ? (\n        <Spinner tooltip=\"Laster opp tilbakemelding ...\" />\n      ) : (\n        <FlexContainer flexDirection=\"row\">\n          <Tooltip text={thumbUpTooltip}>\n            <RatingButton\n              htmlProps={{ 'aria-label': thumbUpTooltip }}\n              icon={Thumbup}\n              appearance=\"borderless\"\n              onClick={() => handleRatingChange('positive')}\n              size=\"large\"\n            />\n          </Tooltip>\n          <Tooltip text={thumbDownTooltip}>\n            <div>\n              <RatingButton\n                htmlProps={{ 'aria-label': thumbDownTooltip }}\n                icon={Thumbdown}\n                appearance=\"borderless\"\n                onClick={() => handleRatingChange('negative')}\n                size=\"large\"\n              />\n            </div>\n          </Tooltip>\n        </FlexContainer>\n      )}\n    </RatingContainer>\n  );\n};\n","import styled from 'styled-components';\nimport { ddsBaseTokens } from '@norges-domstoler/dds-design-tokens';\nimport {\n  ThumbupFilled,\n  ThumbdownFilled,\n  Icon,\n} from '@norges-domstoler/dds-icons';\nimport { Paragraph } from '@norges-domstoler/dds-typography';\n\nimport { FlexContainer } from './FlexContainer';\nimport { Button } from '../Button';\nimport { Rating } from './Feedback.types';\nimport { TextArea } from '../TextArea';\n\nconst IconLabelSpan = styled.span`\n  display: inline-flex;\n  align-items: center;\n  gap: ${ddsBaseTokens.spacing.SizesDdsSpacingLocalX05};\n`;\n\ntype CommentComponentType = {\n  rating: Rating | null;\n  feedbackText: string | undefined;\n  positiveFeedbackLabel: string;\n  negativeFeedbackLabel: string;\n  ratingSubmittedTitle: string;\n  loading: boolean;\n  handleSubmit: () => void;\n  handleFeedbackTextChange: (newText: string) => void;\n};\n\nexport const CommentComponent = ({\n  rating,\n  feedbackText,\n  positiveFeedbackLabel,\n  negativeFeedbackLabel,\n  ratingSubmittedTitle,\n  loading,\n  handleSubmit,\n  handleFeedbackTextChange,\n}: CommentComponentType) => {\n  return (\n    <FlexContainer flexDirection=\"column\">\n      <IconLabelSpan>\n        <Icon\n          icon={rating === 'positive' ? ThumbupFilled : ThumbdownFilled}\n          color={ddsBaseTokens.colors.DdsColorInteractiveBase}\n        />\n        <Paragraph>{ratingSubmittedTitle} </Paragraph>\n      </IconLabelSpan>\n      <TextArea\n        value={feedbackText}\n        onChange={(e: React.ChangeEvent<HTMLTextAreaElement>) =>\n          handleFeedbackTextChange(e.target.value)\n        }\n        label={\n          rating === 'positive' ? positiveFeedbackLabel : negativeFeedbackLabel\n        }\n        tip=\"Ikke send inn personopplysninger eller annen sensitiv informasjon\"\n      />\n\n      <Button\n        label=\"Send inn\"\n        purpose=\"secondary\"\n        size=\"small\"\n        onClick={handleSubmit}\n        loading={loading}\n      />\n    </FlexContainer>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { FeedbackProps, Rating } from './Feedback.types';\nimport { Paragraph } from '@norges-domstoler/dds-typography';\nimport { RatingComponent } from './RatingComponent';\nimport { CommentComponent } from './CommentComponent';\n\nexport const Feedback = ({\n  layout = 'vertical',\n  ratingLabel = 'Hva syns du om tjenesten?',\n  positiveFeedbackLabel = 'Hva kan vi forbedre? (valgfritt)',\n  negativeFeedbackLabel = 'Hva kan vi forbedre? (valgfritt)',\n  ratingSubmittedTitle = 'Tusen takk! Tilbakemeldingen din hjelper oss å forbedre løsningen',\n  submittedTitle = 'Tusen takk! Tilbakemeldingen din hjelper oss å forbedre løsningen',\n  ratingValue: ratingProp,\n  feedbackTextValue: feedbackTextProp,\n  thumbUpTooltip = 'Bra',\n  thumbDownTooltip = 'Dårlig',\n  feedbackTextAreaExcluded = false,\n  loading = false,\n  isSubmitted: isSubmittedProp,\n  onRating,\n  onFeedbackTextChange,\n  onSubmit,\n}: FeedbackProps) => {\n  const [rating, setRating] = useState<Rating | null>(null);\n  const [feedbackText, setFeedbackText] = useState<string>();\n  const [isFeedbackSubmitted, setIsFeedbackSubmitted] =\n    useState<boolean>(false);\n\n  useEffect(() => {\n    ratingProp !== undefined && setRating(ratingProp);\n  }, [ratingProp]);\n\n  useEffect(() => {\n    feedbackTextProp !== undefined && setFeedbackText(feedbackTextProp);\n  }, [feedbackTextProp]);\n\n  useEffect(() => {\n    isSubmittedProp !== undefined && setIsFeedbackSubmitted(isSubmittedProp);\n  }, [isSubmittedProp]);\n\n  const handleRatingChange = (newRating: Rating) => {\n    onRating && onRating(newRating);\n    onSubmit && feedbackTextAreaExcluded && onSubmit(newRating, '');\n\n    ratingProp === undefined && setRating(newRating);\n  };\n\n  const handleFeedbackTextChange = (newFeedbackText: string) => {\n    onFeedbackTextChange && onFeedbackTextChange(newFeedbackText);\n    feedbackTextProp === undefined && setFeedbackText(newFeedbackText);\n  };\n\n  const handleSubmit = () => {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion -- Ved submit er rating alltid satt\n    onSubmit && onSubmit(rating!, feedbackText ?? '');\n    isSubmittedProp === undefined && setIsFeedbackSubmitted(true);\n  };\n\n  if (rating === null && !isFeedbackSubmitted) {\n    return (\n      <RatingComponent\n        layout={layout}\n        ratingLabel={ratingLabel}\n        loading={loading}\n        thumbUpTooltip={thumbUpTooltip}\n        thumbDownTooltip={thumbDownTooltip}\n        handleRatingChange={handleRatingChange}\n      />\n    );\n  }\n\n  if (!feedbackTextAreaExcluded && !isFeedbackSubmitted) {\n    return (\n      <CommentComponent\n        rating={rating}\n        feedbackText={feedbackText}\n        positiveFeedbackLabel={positiveFeedbackLabel}\n        negativeFeedbackLabel={negativeFeedbackLabel}\n        ratingSubmittedTitle={ratingSubmittedTitle}\n        loading={loading}\n        handleSubmit={handleSubmit}\n        handleFeedbackTextChange={handleFeedbackTextChange}\n      />\n    );\n  }\n\n  return <Paragraph>{submittedTitle}</Paragraph>;\n};\n"],"names":["FlexContainer","styled","flexDirection","css","ddsBaseTokens","RatingContainer","layout","RatingButton","Button","RatingComponent","ratingLabel","loading","thumbUpTooltip","thumbDownTooltip","handleRatingChange","jsxs","jsx","Label","Spinner","Tooltip","Thumbup","Thumbdown","IconLabelSpan","CommentComponent","rating","feedbackText","positiveFeedbackLabel","negativeFeedbackLabel","ratingSubmittedTitle","handleSubmit","handleFeedbackTextChange","Icon","ThumbupFilled","ThumbdownFilled","Paragraph","TextArea","e","Feedback","submittedTitle","ratingProp","feedbackTextProp","feedbackTextAreaExcluded","isSubmittedProp","onRating","onFeedbackTextChange","onSubmit","setRating","useState","setFeedbackText","isFeedbackSubmitted","setIsFeedbackSubmitted","useEffect","newRating","newFeedbackText"],"mappings":"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"}