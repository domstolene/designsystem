{"version":3,"file":"Tabs.stories-6e1ee0a2.js","sources":["../../../../packages/components/src/components/Tabs/Tabs.context.tsx","../../../../packages/components/src/components/Tabs/Tabs.tsx","../../../../packages/components/src/components/Tabs/Tabs.tokens.tsx","../../../../packages/components/src/components/Tabs/Tab.tsx","../../../../packages/components/src/components/Tabs/TabList.tsx","../../../../packages/components/src/components/Tabs/TabPanel.tsx","../../../../packages/components/src/components/Tabs/TabPanels.tsx"],"sourcesContent":["import { createContext, RefObject, useContext } from 'react';\nimport { Direction } from '../../types';\n\ntype Tabs = {\n  activeTab: number;\n  tabsId: string;\n  handleTabChange: (index: number) => void;\n  tabListRef: RefObject<HTMLDivElement> | null;\n  tabPanelsRef: RefObject<HTMLDivElement> | null;\n  hasTabFocus: boolean;\n  setHasTabFocus: (hasFocus: boolean) => void;\n  tabContentDirection: Direction;\n};\n\nexport const TabsContext = createContext<Tabs>({\n  activeTab: 0,\n  tabsId: '',\n  handleTabChange: () => null,\n  tabListRef: null,\n  tabPanelsRef: null,\n  hasTabFocus: false,\n  setHasTabFocus: () => null,\n  tabContentDirection: 'row',\n});\nexport const useTabsContext = () => useContext(TabsContext);\n","import styled, { css } from 'styled-components';\nimport {\n  forwardRef,\n  HTMLAttributes,\n  useEffect,\n  useId,\n  useRef,\n  useState,\n} from 'react';\nimport {\n  BaseComponentPropsWithChildren,\n  Direction,\n  getBaseHTMLProps,\n} from '../../types';\nimport { TabsContext } from './Tabs.context';\nimport { Property } from 'csstype';\n\ntype ContainerProps = {\n  width?: Property.Width;\n};\n\nconst Container = styled.div<ContainerProps>`\n  ${({ width }) =>\n    width &&\n    css`\n      width: ${width};\n    `};\n`;\n\nexport type TabsProps = BaseComponentPropsWithChildren<\n  HTMLDivElement,\n  {\n    /** Indeksen til den aktive fanen. **OBS!** Ved 책 sette denne vil brukere aldri kunne endre tab uten at du ogs책 registrerer en `onChange`-lytter for 책 ta vare p책 aktiv tab utenfor komponenten. */\n    activeTab?: number;\n    /** Ekstra logikk ved endring av aktiv fane. */\n    onChange?: (index: number) => void;\n    /** Retningen ikon og tekst vises i `<Tab />`-elementer. */\n    tabContentDirection?: Direction;\n    /**Bredde for hele komponenten. */\n    width?: Property.Width;\n  },\n  Omit<HTMLAttributes<HTMLDivElement>, 'onChange'>\n>;\n\nexport const Tabs = forwardRef<HTMLDivElement, TabsProps>((props, ref) => {\n  const {\n    id,\n    activeTab,\n    onChange,\n    tabContentDirection = 'row',\n    width,\n    children,\n    className,\n    htmlProps,\n    ...rest\n  } = props;\n\n  const generatedId = useId();\n  const uniqueId = id ?? `${generatedId}-tabs`;\n\n  const [thisActiveTab, setActiveTab] = useState(activeTab || 0);\n  const [hasTabFocus, setHasTabFocus] = useState(false);\n  const tabListRef = useRef<HTMLDivElement>(null);\n  const tabPanelsRef = useRef<HTMLDivElement>(null);\n\n  const handleTabChange = (index: number) => {\n    setActiveTab(index);\n    onChange && onChange(index);\n  };\n\n  useEffect(() => {\n    if (activeTab !== undefined && activeTab !== thisActiveTab) {\n      setActiveTab(activeTab);\n    }\n  }, [activeTab, thisActiveTab]);\n\n  const containerProps = {\n    ...getBaseHTMLProps(uniqueId, className, htmlProps, rest),\n    ref,\n  };\n\n  return (\n    <TabsContext.Provider\n      value={{\n        tabsId: uniqueId,\n        activeTab: thisActiveTab,\n        handleTabChange,\n        tabListRef,\n        tabPanelsRef,\n        hasTabFocus,\n        setHasTabFocus,\n        tabContentDirection,\n      }}\n    >\n      <Container {...containerProps} width={width}>\n        {children}\n      </Container>\n    </TabsContext.Provider>\n  );\n});\n\nTabs.displayName = 'Tabs';\n","import { ddsBaseTokens } from '@norges-domstoler/dds-design-tokens';\n\nconst { border, spacing, colors } = ddsBaseTokens;\n\nconst tabList = {\n  borderBottom: `${border.BordersDdsBorderStyleLightStrokeWeight} solid ${border.BordersDdsBorderStyleLightStroke}`,\n};\nconst tab = {\n  base: {\n    borderBottom: `${border.BordersDdsBorderStyleLightStrokeWeight} solid transparent`,\n    color: colors.DdsColorNeutralsGray7,\n    padding: spacing.SizesDdsSpacingLocalX05,\n  },\n  row: {\n    gap: spacing.SizesDdsSpacingLocalX05,\n  },\n  column: {\n    gap: spacing.SizesDdsSpacingLocalX025,\n  },\n  active: {\n    backgroundColor: colors.DdsColorInteractiveLightest,\n    color: colors.DdsColorInteractiveDarkest,\n    boxShadow: `inset 0 -2px 0 0 ${colors.DdsColorInteractiveDarker}`,\n    borderColor: colors.DdsColorInteractiveDarker,\n  },\n  hover: {\n    color: colors.DdsColorInteractiveDarkest,\n    boxShadow: `inset 0 -2px 0 0 ${colors.DdsColorInteractiveDarker}`,\n    borderColor: colors.DdsColorInteractiveDarker,\n  },\n};\n\nconst panel = {\n  padding: spacing.SizesDdsSpacingLocalX025,\n};\n\nexport const tabsTokens = {\n  tabList,\n  tab,\n  panel,\n};\n","import {\n  ButtonHTMLAttributes,\n  Dispatch,\n  forwardRef,\n  SetStateAction,\n  useCallback,\n  useEffect,\n  MouseEvent,\n  useRef,\n  KeyboardEvent,\n} from 'react';\nimport styled, { css } from 'styled-components';\nimport { Icon } from '../Icon';\nimport { tabsTokens as tokens } from './Tabs.tokens';\nimport { useCombinedRef, useOnKeyDown } from '../../hooks';\nimport { useTabsContext } from './Tabs.context';\nimport {\n  BaseComponentPropsWithChildren,\n  Direction,\n  getBaseHTMLProps,\n} from '../../types';\nimport {\n  focusVisible,\n  focusVisibleTransitionValue,\n  normalizeButton,\n  removeButtonStyling,\n} from '../../helpers/styling';\nimport { SvgIcon } from '../../icons/utils';\nimport {\n  getFontStyling,\n  defaultTypographyType,\n} from '../Typography/Typography.utils';\n\nconst { tab } = tokens;\n\ntype ButtonProps = {\n  active: boolean;\n  direction: Direction;\n};\n\nconst Button = styled.button<ButtonProps>`\n  ${normalizeButton}\n  ${removeButtonStyling}\n  user-select: text;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-bottom: ${tab.base.borderBottom};\n  color: ${tab.base.color};\n  padding: ${tab.base.padding};\n  ${getFontStyling(defaultTypographyType)}\n\n  @media (prefers-reduced-motion: no-preference) {\n    transition: box-shadow 0.2s, border-bottom 0.2s, color 0.2s,\n      ${focusVisibleTransitionValue};\n  }\n\n  ${({ direction }) => css`\n    flex-direction: ${direction};\n    gap: ${tab[direction].gap};\n  `};\n\n  ${({ active }) =>\n    active &&\n    css`\n      background-color: ${tab.active.backgroundColor};\n      border-color: ${tab.active.borderColor};\n      color: ${tab.active.color};\n      box-shadow: ${tab.active.boxShadow};\n    `}\n\n  &:focus-visible {\n    ${focusVisible}\n    outline-offset: -1px;\n  }\n\n  &:hover {\n    border-color: ${tab.hover.borderColor};\n    color: ${tab.hover.color};\n    box-shadow: ${tab.hover.boxShadow};\n  }\n`;\n\nexport type TabProps = BaseComponentPropsWithChildren<\n  HTMLButtonElement,\n  {\n    /**Spesifiserer om fanen er aktiv. */\n    active?: boolean;\n    /** Ikon. */\n    icon?: SvgIcon;\n    /** Spesifiserer om `<Tab />` skal ha fokus. **OBS!** settes automatisk av forelder.*/\n    focus?: boolean;\n    /**  Callback som setter fokus. **OBS!** settes automatisk av forelder.*/\n    setFocus?: Dispatch<SetStateAction<number>>;\n    /** Indeksen til `<Tab />`. **OBS!** settes automatisk av forelder.*/\n    index?: number;\n  } & Pick<ButtonHTMLAttributes<HTMLButtonElement>, 'onClick' | 'onKeyDown'>,\n  Omit<ButtonHTMLAttributes<HTMLButtonElement>, 'onClick' | 'onKeyDown'>\n>;\n\nexport const Tab = forwardRef<HTMLButtonElement, TabProps>((props, ref) => {\n  const {\n    active = false,\n    icon,\n    children,\n    focus,\n    setFocus,\n    index,\n    onClick,\n    onKeyDown,\n    id,\n    className,\n    htmlProps,\n    ...rest\n  } = props;\n\n  const itemRef = useRef<HTMLAnchorElement | HTMLButtonElement>(null);\n  const combinedRef = useCombinedRef(ref, itemRef);\n  const { tabPanelsRef, setHasTabFocus, tabContentDirection } =\n    useTabsContext();\n\n  useEffect(() => {\n    if (focus) {\n      itemRef.current?.focus();\n      setHasTabFocus(true);\n    }\n  }, [focus]);\n\n  useOnKeyDown('Tab', () => {\n    setHasTabFocus(false);\n    tabPanelsRef?.current?.focus();\n  });\n\n  const handleSelect = useCallback(() => {\n    if (setFocus && index) {\n      setFocus(index);\n    }\n  }, [index, setFocus]);\n\n  const handleOnClick = (e: MouseEvent<HTMLButtonElement>) => {\n    handleSelect();\n    onClick && onClick(e);\n  };\n\n  const handleOnKeyDown = (\n    e: KeyboardEvent<HTMLAnchorElement> & KeyboardEvent<HTMLButtonElement>\n  ) => {\n    handleSelect();\n    onKeyDown && onKeyDown(e);\n  };\n\n  const buttonProps = {\n    ...getBaseHTMLProps(id, className, htmlProps, rest),\n    ref: combinedRef,\n    'aria-selected': active,\n    role: 'tab',\n    active,\n    direction: tabContentDirection,\n    onClick: handleOnClick,\n    onKeyDown: handleOnKeyDown,\n    tabIndex: focus ? 0 : -1,\n  };\n  return (\n    <Button {...buttonProps}>\n      {icon && <Icon icon={icon} iconSize=\"inherit\" />}\n      <span>{children}</span>\n    </Button>\n  );\n});\n\nTab.displayName = 'Tab';\n","import {\n  forwardRef,\n  HTMLAttributes,\n  Children,\n  isValidElement,\n  cloneElement,\n  FocusEvent,\n  ReactElement,\n} from 'react';\nimport styled from 'styled-components';\nimport { tabsTokens as tokens } from './Tabs.tokens';\nimport {\n  useCombinedRef,\n  useOnClickOutside,\n  useOnKeyDown,\n  useRoveFocus,\n} from '../../hooks';\nimport { useTabsContext } from './Tabs.context';\nimport { scrollbarStyling } from '../ScrollableContainer';\nimport {\n  focusVisible,\n  focusVisibleTransitionValue,\n} from '../../helpers/styling';\n\nconst { tabList } = tokens;\n\nconst TabRow = styled.div`\n  border-bottom: ${tabList.borderBottom};\n  display: grid;\n  grid-auto-flow: column;\n  grid-auto-columns: 1fr;\n  overflow-x: auto;\n  ${scrollbarStyling.webkit}\n  ${scrollbarStyling.firefox}\n  scroll-snap-type: x mandatory;\n  @media (prefers-reduced-motion: no-preference) {\n    scroll-behavior: smooth;\n    transition: ${focusVisibleTransitionValue};\n  }\n  &:focus-visible {\n    ${focusVisible}\n  }\n  &:focus-visible button {\n    outline: none;\n  }\n`;\n\nexport type TabListProps = HTMLAttributes<HTMLDivElement>;\n\nexport const TabList = forwardRef<HTMLDivElement, TabListProps>(\n  ({ children, id, onFocus, ...rest }, ref) => {\n    const {\n      activeTab,\n      tabsId,\n      handleTabChange,\n      tabListRef,\n      hasTabFocus,\n      tabPanelsRef,\n      setHasTabFocus,\n    } = useTabsContext();\n\n    const uniqueId = id ?? `${tabsId}-tablist`;\n    const childrenArray = Children.toArray(children).length;\n    const [focus, setFocus] = useRoveFocus(childrenArray, !hasTabFocus, 'row');\n    const combinedRef = useCombinedRef(ref, tabListRef);\n\n    const tabListChildren = Children.map(children, (child, index) => {\n      return (\n        isValidElement(child) &&\n        cloneElement(child as ReactElement, {\n          id: `${tabsId}-tab-${index}`,\n          'aria-controls': `${tabsId}-panel-${index}`,\n          active: activeTab === index,\n          index,\n          focus: focus === index && hasTabFocus,\n          setFocus,\n          onClick: () => handleTabChange(index),\n        })\n      );\n    });\n\n    useOnKeyDown('Tab', () => {\n      setHasTabFocus(false);\n      tabPanelsRef?.current?.focus();\n    });\n\n    useOnClickOutside((tabListRef?.current as HTMLElement) || null, () => {\n      setHasTabFocus(false);\n    });\n\n    const handleOnFocus = (event: FocusEvent<HTMLDivElement, Element>) => {\n      setHasTabFocus(true);\n      onFocus && onFocus(event);\n    };\n\n    const tabListProps = {\n      ...rest,\n      ref: combinedRef,\n      role: 'tablist',\n      'aria-label': 'Bruk venste og h첩yre piltast for 책 bla',\n      id: uniqueId,\n      tabIndex: 0,\n      onFocus: handleOnFocus,\n    };\n\n    return <TabRow {...tabListProps}>{tabListChildren}</TabRow>;\n  }\n);\n\nTabList.displayName = 'TabList';\n","import { forwardRef } from 'react';\nimport styled, { css } from 'styled-components';\nimport {\n  focusVisible,\n  focusVisibleTransitionValue,\n} from '../../helpers/styling';\nimport { BaseComponentPropsWithChildren, getBaseHTMLProps } from '../../types';\nimport { tabsTokens as tokens } from './Tabs.tokens';\n\nconst { panel } = tokens;\n\ntype PanelProps = {\n  active: boolean;\n};\n\nconst Panel = styled.div<PanelProps>`\n  padding: ${panel.padding};\n  @media (prefers-reduced-motion: no-preference) {\n    transition: ${focusVisibleTransitionValue};\n  }\n\n  ${({ active }) =>\n    !active &&\n    css`\n      display: none;\n    `}\n  &:focus-visible {\n    ${focusVisible}\n  }\n`;\n\nexport type TabPanelProps = BaseComponentPropsWithChildren<\n  HTMLDivElement,\n  {\n    /** Spesifiserer om panelet skal vises basert p책 aktiv fane. */\n    active?: boolean;\n  }\n>;\n\nexport const TabPanel = forwardRef<HTMLDivElement, TabPanelProps>(\n  ({ active = false, children, id, className, htmlProps, ...rest }, ref) => {\n    const panelProps = {\n      ...getBaseHTMLProps(id, className, htmlProps, rest),\n      ref,\n      tabIndex: 0,\n      role: 'tabpanel',\n      active,\n    };\n    return <Panel {...panelProps}>{children}</Panel>;\n  }\n);\n\nTabPanel.displayName = 'TabPanel';\n","import {\n  forwardRef,\n  HTMLAttributes,\n  Children,\n  cloneElement,\n  isValidElement,\n  ReactElement,\n} from 'react';\nimport { useCombinedRef } from '../../hooks';\nimport { useTabsContext } from './Tabs.context';\n\nexport type TabPanelsProps = HTMLAttributes<HTMLDivElement>;\n\nexport const TabPanels = forwardRef<HTMLDivElement, TabPanelsProps>(\n  ({ children, ...rest }, ref) => {\n    const { activeTab, tabsId, tabPanelsRef } = useTabsContext();\n    const combinedRef = useCombinedRef(ref, tabPanelsRef);\n\n    const panelChildren = Children.map(children, (child, index) => {\n      const active = index === activeTab;\n      return (\n        isValidElement(child) &&\n        cloneElement(child as ReactElement, {\n          id: `${tabsId}-panel-${index}`,\n          'aria-labelledby': `${tabsId}-tab-${index}`,\n          active,\n          'aria-expanded': active,\n        })\n      );\n    });\n\n    return (\n      <div ref={combinedRef} {...rest}>\n        {panelChildren}\n      </div>\n    );\n  }\n);\n\nTabPanels.displayName = 'TabPanels';\n"],"names":["TabsContext","createContext","useTabsContext","useContext","Container","styled","width","css","Tabs","forwardRef","props","ref","id","activeTab","onChange","tabContentDirection","children","className","htmlProps","rest","generatedId","useId","uniqueId","thisActiveTab","setActiveTab","useState","hasTabFocus","setHasTabFocus","tabListRef","useRef","tabPanelsRef","handleTabChange","index","useEffect","containerProps","getBaseHTMLProps","jsx","border","spacing","colors","ddsBaseTokens","tabList","tab","panel","tabsTokens","tokens","Button","normalizeButton","removeButtonStyling","getFontStyling","defaultTypographyType","focusVisibleTransitionValue","direction","active","focusVisible","Tab","icon","focus","setFocus","onClick","onKeyDown","itemRef","combinedRef","useCombinedRef","_a","useOnKeyDown","handleSelect","useCallback","handleOnClick","e","handleOnKeyDown","buttonProps","jsxs","Icon","TabRow","scrollbarStyling","TabList","onFocus","tabsId","childrenArray","Children","useRoveFocus","tabListChildren","child","isValidElement","cloneElement","useOnClickOutside","tabListProps","event","Panel","TabPanel","panelProps","TabPanels","panelChildren"],"mappings":"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"}