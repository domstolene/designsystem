{"version":3,"file":"InlineEditTextArea-869e6b76.js","sources":["../../../../packages/components/src/components/InlineEdit/InlineTextArea.tsx","../../../../packages/components/src/components/InlineEdit/InlineEditTextArea.tsx"],"sourcesContent":["import { forwardRef, TextareaHTMLAttributes, useId, useRef } from 'react';\nimport { EditIcon } from '@norges-domstoler/dds-icons';\nimport { Icon } from '@norges-domstoler/dds-icons';\nimport {\n  derivativeIdGenerator,\n  spaceSeparatedIdListGenerator,\n} from '@norges-domstoler/dds-core';\nimport {\n  IconWrapper,\n  defaultWidth,\n  StyledInlineTextArea,\n} from './InlineEdit.styles';\nimport { BaseInlineInputProps } from './InlineEdit.types';\nimport { inlineEditVisuallyHidden } from './InlineEdit.utils';\nimport { useCombinedRef } from '@norges-domstoler/dds-core';\nimport { renderInputMessage } from '../../utils/renderInputMessage';\nimport {\n  OuterInputContainer,\n  InputContainer,\n} from '@norges-domstoler/dds-form';\n\nexport type InlineTextAreaProps = BaseInlineInputProps &\n  TextareaHTMLAttributes<HTMLTextAreaElement>;\n\nexport const InlineTextArea = forwardRef<\n  HTMLTextAreaElement,\n  InlineTextAreaProps\n>((props, ref) => {\n  const {\n    id,\n    error,\n    errorMessage,\n    isEditing,\n    width = defaultWidth,\n    'aria-describedby': ariaDescribedby,\n    emptiable,\n    hideIcon,\n    ...rest\n  } = props;\n\n  const genereatedId = useId();\n  const uniqueId = id ?? `${genereatedId}-InlineTextArea`;\n  const hasErrorMessage = !!errorMessage;\n  const errorMessageId = derivativeIdGenerator(uniqueId, 'errorMessage');\n  const descId = derivativeIdGenerator(uniqueId, 'desc');\n\n  const inputRef = useRef<HTMLTextAreaElement>(null);\n  const combinedRef = useCombinedRef(ref, inputRef);\n\n  return (\n    <OuterInputContainer width={width}>\n      <InputContainer>\n        {!isEditing && !hideIcon && (\n          <IconWrapper\n            onClick={() => {\n              inputRef.current?.focus();\n            }}\n          >\n            <Icon icon={EditIcon} iconSize=\"small\" />\n          </IconWrapper>\n        )}\n        <StyledInlineTextArea\n          {...rest}\n          as=\"textarea\"\n          id={uniqueId}\n          ref={combinedRef}\n          hasErrorMessage={!!error || hasErrorMessage}\n          isEditing={isEditing}\n          hideIcon={hideIcon}\n          aria-describedby={spaceSeparatedIdListGenerator([\n            hasErrorMessage ? errorMessageId : undefined,\n            descId,\n            ariaDescribedby,\n          ])}\n        />\n      </InputContainer>\n      {inlineEditVisuallyHidden(descId, emptiable)}\n      {renderInputMessage(undefined, undefined, errorMessage, errorMessageId)}\n    </OuterInputContainer>\n  );\n});\n\nInlineTextArea.displayName = 'InlineTextArea';\n","import { forwardRef, useRef } from 'react';\nimport { InlineEdit } from './InlineEdit';\nimport { useCombinedRef } from '@norges-domstoler/dds-core';\nimport { InlineEditTextAreaProps } from './InlineEdit.types';\nimport { InlineTextArea } from './InlineTextArea';\n\nexport const InlineEditTextArea = forwardRef<\n  HTMLTextAreaElement,\n  InlineEditTextAreaProps\n>((props, ref) => {\n  const { onSetValue, emptiable, value, onFocus, onChange, onBlur, ...rest } =\n    props;\n  const textareaRef = useRef<HTMLTextAreaElement>(null);\n  const combinedRef = useCombinedRef(ref, textareaRef);\n  return (\n    <InlineEdit\n      onSetValue={onSetValue}\n      emptiable={emptiable}\n      inputRef={textareaRef}\n      value={value}\n      onFocus={onFocus}\n      onChange={onChange}\n      onBlur={onBlur}\n    >\n      <InlineTextArea ref={combinedRef} {...rest} />\n    </InlineEdit>\n  );\n});\n"],"names":["InlineTextArea","forwardRef","props","ref","id","error","errorMessage","isEditing","width","defaultWidth","ariaDescribedby","emptiable","hideIcon","rest","genereatedId","useId","uniqueId","hasErrorMessage","errorMessageId","derivativeIdGenerator","descId","inputRef","useRef","combinedRef","useCombinedRef","jsxs","OuterInputContainer","InputContainer","jsx","IconWrapper","_a","Icon","EditIcon","StyledInlineTextArea","spaceSeparatedIdListGenerator","inlineEditVisuallyHidden","renderInputMessage","InlineEditTextArea","onSetValue","value","onFocus","onChange","onBlur","textareaRef","InlineEdit"],"mappings":"4XAwBO,MAAMA,EAAiBC,EAAA,WAG5B,CAACC,EAAOC,IAAQ,CACV,KAAA,CACJ,GAAAC,EACA,MAAAC,EACA,aAAAC,EACA,UAAAC,EACA,MAAAC,EAAQC,EACR,mBAAoBC,EACpB,UAAAC,EACA,SAAAC,EACA,GAAGC,CACD,EAAAX,EAEEY,EAAeC,EAAAA,QACfC,EAAWZ,GAAM,GAAGU,mBACpBG,EAAkB,CAAC,CAACX,EACpBY,EAAiBC,EAAsBH,EAAU,cAAc,EAC/DI,EAASD,EAAsBH,EAAU,MAAM,EAE/CK,EAAWC,SAA4B,IAAI,EAC3CC,EAAcC,EAAerB,EAAKkB,CAAQ,EAG9C,OAAAI,EAACC,GAAoB,MAAAlB,EACnB,SAAA,CAAAiB,EAACE,EACE,CAAA,SAAA,CAAC,CAAApB,GAAa,CAACK,GACdgB,EAACC,EAAA,CACC,QAAS,IAAM,QACbC,EAAAT,EAAS,UAAT,MAAAS,EAAkB,OACpB,EAEA,SAACF,EAAAG,EAAA,CAAK,KAAMC,EAAU,SAAS,QAAQ,CAAA,CACzC,EAEFJ,EAACK,EAAA,CACE,GAAGpB,EACJ,GAAG,WACH,GAAIG,EACJ,IAAKO,EACL,gBAAiB,CAAC,CAAClB,GAASY,EAC5B,UAAAV,EACA,SAAAK,EACA,mBAAkBsB,EAA8B,CAC9CjB,EAAkBC,EAAiB,OACnCE,EACAV,CAAA,CACD,CAAA,CACH,CAAA,EACF,EACCyB,EAAyBf,EAAQT,CAAS,EAC1CyB,EAAmB,OAAW,OAAW9B,EAAcY,CAAc,CACxE,CAAA,CAAA,CAEJ,CAAC,EAEDlB,EAAe,YAAc,iBC5EtB,MAAMqC,EAAqBpC,EAAA,WAGhC,CAACC,EAAOC,IAAQ,CACV,KAAA,CAAE,WAAAmC,EAAY,UAAA3B,EAAW,MAAA4B,EAAO,QAAAC,EAAS,SAAAC,EAAU,OAAAC,EAAQ,GAAG7B,CAClE,EAAAX,EACIyC,EAAcrB,SAA4B,IAAI,EAC9CC,EAAcC,EAAerB,EAAKwC,CAAW,EAEjD,OAAAf,EAACgB,EAAA,CACC,WAAAN,EACA,UAAA3B,EACA,SAAUgC,EACV,MAAAJ,EACA,QAAAC,EACA,SAAAC,EACA,OAAAC,EAEA,SAACd,EAAA5B,EAAA,CAAe,IAAKuB,EAAc,GAAGV,EAAM,CAAA,CAAA,CAGlD,CAAC"}