{"version":3,"file":"AppShell.stories-7dcd267c.js","sources":["../../../../packages/components/src/components/AppShell/AppShell.tokens.ts","../../../../packages/components/src/components/AppShell/Navigation/NavigationItem.tsx","../../../../packages/components/src/components/AppShell/Navigation/EmbeteIcon.tsx","../../../../packages/components/src/components/AppShell/Navigation/NavigationLogo.tsx","../../../../packages/components/src/components/AppShell/Navigation/TopBar.tsx","../../../../packages/components/src/components/AppShell/Navigation/Navigation.tsx","../../../../packages/components/src/components/AppShell/AppShell.tsx","../../../../packages/components/src/components/AppShell/index.ts"],"sourcesContent":["import { ddsBaseTokens } from '@norges-domstoler/dds-design-tokens';\nconst { colors, spacing, fontPackages, borderRadius, breakpoints } =\n  ddsBaseTokens;\n\nconst navigationItems = {\n  gap: spacing.SizesDdsSpacingLocalX05,\n  item: {\n    ...fontPackages.body_sans_02.base,\n    color: colors.DdsColorNeutralsGray1,\n    borderRadius: borderRadius.RadiiDdsBorderRadius3Radius,\n    padding: spacing.SizesDdsSpacingLocalX075,\n    gap: spacing.SizesDdsSpacingLocalX05,\n    external: {\n      ...fontPackages.body_sans_01.base,\n    },\n    hover: {\n      backgroundColor: colors.DdsColorPrimaryDark,\n    },\n    active: {\n      color: colors.DdsColorNeutralsWhite,\n      backgroundColor: colors.DdsColorPrimaryDarker,\n    },\n  },\n};\n\nconst logoAndVersion = {\n  padding: '36px 24px',\n  color: colors.DdsColorNeutralsWhite,\n  logo: {\n    ...fontPackages.heading_sans_05.base,\n    fontWeight: 700,\n    small: {\n      ...fontPackages.heading_sans_03.base,\n      fontWeight: 600,\n    },\n  },\n  version: {\n    ...fontPackages.supportingStyle_tiny_01.base,\n  },\n};\n\nconst topBar = {\n  padding: spacing.SizesDdsSpacingLocalX025,\n  height: `calc(${spacing.SizesDdsSpacingLayoutX3} + 2 * ${spacing.SizesDdsSpacingLocalX025})`,\n  buttonTextColor: colors.DdsColorNeutralsGray3,\n  gap: spacing.SizesDdsSpacingLocalX025,\n};\n\nconst navigation = {\n  navigationItems,\n  logoAndVersion,\n  topBar,\n\n  color: colors.DdsColorNeutralsGray1,\n  backgroundColor: colors.DdsColorPrimaryBase,\n  gap: spacing.SizesDdsSpacingLocalX05,\n  dividerColor: colors.DdsColorPrimaryLight,\n  padding: spacing.SizesDdsSpacingLocalX1,\n  width: '264px',\n\n  mobile: {\n    breakpoint: breakpoints.DdsBreakpointSm,\n    iconColors: colors.DdsColorNeutralsGray3,\n  },\n};\n\nconst floatingActionButtons = {\n  gap: spacing.SizesDdsSpacingLocalX1,\n  textColor: colors.DdsColorNeutralsGray7,\n  backgroundColor: colors.DdsColorNeutralsWhite,\n  borderRadius: borderRadius.RadiiDdsBorderRadius3Radius,\n};\n\nexport const appShellTokens = { navigation, floatingActionButtons };\n","import styled from 'styled-components';\nimport { type PropsOf, type As } from '@norges-domstoler/dds-core';\nimport {\n  Icon,\n  SvgIcon,\n  ChevronRightIcon,\n  OpenExternalIcon,\n} from '@norges-domstoler/dds-icons';\n\nimport { appShellTokens } from '../AppShell.tokens';\n\nconst { navigation: navTokens } = appShellTokens;\n\nconst navItemTokens = navTokens.navigationItems.item;\n\nconst IconContainer = styled.div`\n  grid-area: icon;\n  display: flex;\n  align-items: center;\n`;\n\nconst TextContainer = styled.span`\n  grid-area: text;\n`;\n\nconst ChevronContainer = styled.div`\n  display: flex;\n  align-items: center;\n  opacity: 0;\n  grid-area: chevron;\n`;\n\nconst BaseLink = styled.a`\n  padding: ${navItemTokens.padding};\n  gap: ${navItemTokens.gap};\n  border-radius: ${navItemTokens.borderRadius};\n\n  text-decoration: none;\n  color: ${navItemTokens.color};\n  font-size: ${navItemTokens.fontSize};\n  font-style: ${navItemTokens.fontStyle};\n  font-family: ${navItemTokens.fontFamily};\n  font-weight: ${navItemTokens.fontWeight};\n  line-height: ${navItemTokens.lineHeight};\n  letter-spacing: ${navItemTokens.letterSpacing};\n\n  :hover:not(.active) {\n    background-color: ${navItemTokens.hover.backgroundColor};\n  }\n\n  &.active {\n    color: ${navItemTokens.active.color};\n    background-color: ${navItemTokens.active.backgroundColor};\n  }\n`;\n\nconst InternalNavItem = styled(BaseLink)`\n  display: grid;\n  align-items: center;\n  grid-template-areas: 'icon text chevron';\n  grid-template-columns: min-content 1fr min-content;\n\n  &.active ${ChevronContainer} {\n    opacity: 1;\n  }\n`;\n\nconst ExternalNavItem = styled(BaseLink)`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n\n  font-size: ${navItemTokens.external.fontSize};\n  font-style: ${navItemTokens.external.fontStyle};\n  font-family: ${navItemTokens.external.fontFamily};\n  font-weight: ${navItemTokens.external.fontWeight};\n  line-height: ${navItemTokens.external.lineHeight};\n  letter-spacing: ${navItemTokens.external.letterSpacing};\n`;\n\ntype BaseNavigationItemProps =\n  | {\n      icon: SvgIcon;\n      active?: boolean;\n      external?: undefined | false;\n    }\n  | { external: true; active?: undefined | false; icon?: undefined };\n\ntype NavigationItemProps<T extends As = 'a'> = PropsOf<T> &\n  BaseNavigationItemProps;\n\nexport const NavigationItem = <T extends As = 'a'>({\n  as: _as,\n  active,\n  icon,\n  external,\n  children,\n  ...rest\n}: NavigationItemProps<T>) => {\n  const Comp = _as ?? 'a';\n  if (external) {\n    return (\n      <ExternalNavItem as={Comp} {...rest}>\n        {children}\n        <Icon icon={OpenExternalIcon} iconSize=\"inherit\" />\n      </ExternalNavItem>\n    );\n  }\n\n  return (\n    <InternalNavItem as={Comp} {...rest} className={active ? 'active' : ''}>\n      <IconContainer>{icon && <Icon icon={icon} />}</IconContainer>\n      <TextContainer>{children}</TextContainer>\n      <ChevronContainer>\n        <Icon icon={ChevronRightIcon} />\n      </ChevronContainer>\n    </InternalNavItem>\n  );\n};\n\nNavigationItem.displayName = 'AppShell.NavItem';\n","import {\n  JordskifterettIcon,\n  LagmannsrettIcon,\n  PersonIcon,\n  SvgProps,\n  TingrettIcon,\n} from '@norges-domstoler/dds-icons';\n\nexport type EmbeteType =\n  | 'jordskifterett'\n  | 'tingrett'\n  | 'lagmannsrett'\n  | 'høyesterett';\n\ntype EmbeteIconProps = {\n  type?: EmbeteType;\n} & SvgProps;\n\nexport const EmbeteIcon = ({ type, ...rest }: EmbeteIconProps) => {\n  switch (type) {\n    case 'jordskifterett':\n      return <JordskifterettIcon {...rest} />;\n    case 'tingrett':\n      return <TingrettIcon {...rest} />;\n    case 'lagmannsrett':\n      return <LagmannsrettIcon {...rest} />;\n    case 'høyesterett':\n    case undefined:\n      return <PersonIcon {...rest} />;\n  }\n};\n","import styled from 'styled-components';\n\nimport { appShellTokens } from '../AppShell.tokens';\nconst { navigation: navTokens } = appShellTokens;\n\nconst fontPackage = (small?: boolean) => {\n  if (small) {\n    return navTokens.logoAndVersion.logo.small;\n  }\n\n  return navTokens.logoAndVersion.logo;\n};\n\nexport const NavigationLogo = styled.a<{ small?: boolean }>`\n  font-size: ${({ small }) => fontPackage(small).fontSize};\n  font-style: ${({ small }) => fontPackage(small).fontStyle};\n  font-family: ${({ small }) => fontPackage(small).fontFamily};\n  font-weight: ${({ small }) => fontPackage(small).fontWeight};\n  line-height: ${({ small }) => fontPackage(small).lineHeight};\n  letter-spacing: ${({ small }) => fontPackage(small).letterSpacing};\n  text-align: middle;\n`;\n","import styled from 'styled-components';\nimport { MenuIcon, CloseIcon, SvgProps } from '@norges-domstoler/dds-icons';\n\nimport { EmbeteIcon, EmbeteType } from './EmbeteIcon';\nimport { appShellTokens } from '../AppShell.tokens';\nimport { NavigationLogo } from './NavigationLogo';\nimport { Button } from '../../Button';\nimport {\n  OverflowMenu,\n  OverflowMenuGroup,\n  OverflowMenuProps,\n} from '../../OverflowMenu';\n\nconst { navigation: navTokens, floatingActionButtons } = appShellTokens;\n\nconst LogoBurgerGroup = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${navTokens.topBar.gap};\n`;\n\nconst ActionButtonGroup = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${navTokens.topBar.gap};\n`;\n\nconst IconButton = styled(Button).attrs({\n  appearance: 'borderless',\n  purpose: 'secondary',\n})`\n  color: ${navTokens.topBar.buttonTextColor};\n  > :first-child {\n    font-size: 1.65rem;\n  }\n  @media (max-width: ${navTokens.mobile.breakpoint}) {\n    border: 0;\n    box-shadow: none;\n    padding: 12px;\n    &:hover,\n    &:active {\n      color: ${navTokens.topBar.buttonTextColor};\n      text-decoration-color: ${navTokens.topBar.buttonTextColor};\n      box-shadow: none;\n    }\n    gap: 0;\n  }\n`;\n\nconst IconButtonText = styled.span`\n  display: none; // Ikke vis tekst på mobil\n  width: 0;\n`;\n\nconst Bar = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: ${navTokens.topBar.gap};\n  width: 100vw;\n  height: ${navTokens.topBar.height};\n  color: ${navTokens.color};\n  background-color: ${navTokens.backgroundColor};\n  box-sizing: border-box;\n  z-index: 101;\n\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n\n  @media (min-width: ${navTokens.mobile.breakpoint}) {\n    justify-content: flex-end;\n    background-color: transparent;\n    margin-left: ${navTokens.width};\n    width: calc(100vw - ${navTokens.width});\n\n    ${LogoBurgerGroup} {\n      display: none;\n    }\n\n    ${ActionButtonGroup} {\n      padding-right: calc(2 * ${navTokens.topBar.gap});\n      gap: ${floatingActionButtons.gap};\n    }\n\n    ${IconButton} {\n      background-color: ${floatingActionButtons.backgroundColor};\n      color: ${floatingActionButtons.textColor};\n      box-shadow: 8px 16px 32px 0px rgba(0, 0, 0, 0.1);\n      border-radius: ${floatingActionButtons.borderRadius};\n\n      ${IconButtonText} {\n        display: unset;\n      }\n    }\n  }\n`;\n\ntype TopBarProps = {\n  user: User;\n  userMenuItems?: OverflowMenuProps['items'];\n  isNavigationOpen: boolean;\n  onNavigationOpenChange: (isOpen: boolean) => void;\n};\n\nexport type User = {\n  /**Brukerens fulle navn (for- og etternavn). */\n  name: string;\n  /**Det aktive embetet til brukeren. */\n  embete: Embete;\n};\n\nexport type Embete = {\n  /**Navnet på embetet. */\n  name: string;\n  /**Hvilken instans embetet er. */\n  type: EmbeteType;\n};\n\nexport const TopBar = ({\n  user,\n  userMenuItems,\n  isNavigationOpen,\n  onNavigationOpenChange,\n}: TopBarProps) => {\n  const Icon = (props: SvgProps) => (\n    <EmbeteIcon {...props} type={user.embete.type} />\n  );\n\n  return (\n    <Bar>\n      <LogoBurgerGroup>\n        <IconButton\n          icon={isNavigationOpen ? CloseIcon : MenuIcon}\n          onClick={() => onNavigationOpenChange(!isNavigationOpen)}\n        />\n        <NavigationLogo small>Lovisa</NavigationLogo>\n      </LogoBurgerGroup>\n      <ActionButtonGroup>\n        <OverflowMenuGroup>\n          <IconButton\n            icon={Icon}\n            label={<IconButtonText>{user.name}</IconButtonText>}\n          />\n          <OverflowMenu items={userMenuItems} />\n        </OverflowMenuGroup>\n      </ActionButtonGroup>\n    </Bar>\n  );\n};\n","import { Children, ReactElement, useEffect, useState } from 'react';\nimport styled from 'styled-components';\n\nimport { appShellTokens } from '../AppShell.tokens';\nimport { Divider } from '../../Divider';\nimport { NavigationItem } from './NavigationItem';\nimport { TopBar, User } from './TopBar';\nimport { NavigationLogo } from './NavigationLogo';\nimport { OverflowMenuProps } from '../../OverflowMenu';\n\nconst { navigation: navTokens } = appShellTokens;\n\nconst Sidebar = styled.div<{ isOpen: boolean }>`\n  display: flex;\n  flex-direction: column;\n  height: calc(100vh - ${navTokens.topBar.height});\n  width: 100vw;\n  padding: ${navTokens.padding};\n  color: ${navTokens.color};\n  background-color: ${navTokens.backgroundColor};\n  box-sizing: border-box;\n\n  position: fixed;\n  top: ${navTokens.topBar.height};\n  left: 0;\n  right: 0;\n  bottom: 0;\n  z-index: 100;\n\n  transition: transform 0.2s ease-in-out, opacity 0.2s ease-in-out;\n  transform: translateX(${({ isOpen }) => (isOpen ? '0' : '-100%')});\n  opacity: ${({ isOpen }) => (isOpen ? '1' : '0')};\n\n  @media (min-width: ${navTokens.mobile.breakpoint}) {\n    height: 100vh;\n    top: 0;\n    width: ${navTokens.width};\n    position: sticky;\n\n    transform: translateX(0);\n    opacity: 1;\n  }\n`;\n\nconst LogoAndVersionContainer = styled.div`\n  display: none;\n\n  @media (min-width: ${navTokens.mobile.breakpoint}) {\n    display: flex;\n    flex-direction: column;\n    color: ${navTokens.logoAndVersion.color};\n    padding: ${navTokens.logoAndVersion.padding};\n  }\n`;\n\nconst Version = styled.span`\n  font-size: ${navTokens.logoAndVersion.version.fontSize};\n  font-style: ${navTokens.logoAndVersion.version.fontStyle};\n  font-family: ${navTokens.logoAndVersion.version.fontFamily};\n  font-weight: ${navTokens.logoAndVersion.version.fontWeight};\n  line-height: ${navTokens.logoAndVersion.version.lineHeight};\n  letter-spacing: ${navTokens.logoAndVersion.version.letterSpacing};\n`;\n\nexport const NavigationItems = styled.nav`\n  display: flex;\n  flex-direction: column;\n  gap: ${navTokens.navigationItems.gap};\n`;\n\nconst DividerWrapper = styled.div`\n  padding-left: ${navTokens.navigationItems.item.padding};\n  padding-right: ${navTokens.navigationItems.item.padding};\n`;\nconst StyledDivider = styled(Divider)`\n  border-color: ${navTokens.dividerColor};\n`;\n\nexport type NavigationProps = {\n  version: string;\n  internal: ReactElement[];\n  external: ReactElement[];\n  user: User;\n  userMenuItems?: OverflowMenuProps['items'];\n};\n\nexport const Navigation = ({\n  version,\n  user,\n  userMenuItems,\n  internal,\n  external,\n}: NavigationProps) => {\n  const [isOpen, setOpen] = useState(false);\n\n  useEffect(() => {\n    const listener = (event: KeyboardEvent) => {\n      if (event.key === 'o') {\n        setOpen(prev => !prev);\n      }\n    };\n\n    window.addEventListener('keypress', listener);\n    return () => window.removeEventListener('keypress', listener);\n  });\n\n  return (\n    <div>\n      <TopBar\n        user={user}\n        userMenuItems={userMenuItems}\n        isNavigationOpen={isOpen}\n        onNavigationOpenChange={newOpen => setOpen(newOpen)}\n      />\n      <Sidebar isOpen={isOpen}>\n        <LogoAndVersionContainer>\n          <NavigationLogo>Lovisa</NavigationLogo>\n          {version !== '' && <Version>v {version}</Version>}\n        </LogoAndVersionContainer>\n        <NavigationItems>\n          {Children.map(internal, item => {\n            if (item.type !== NavigationItem) {\n              console.warn(\n                `Du bruker en React-komponent som ikke er tillat i AppShell-internal. Du kan kun bruke AppShell.NavItem i AppShell-internal.`\n              );\n              return null;\n            }\n            return item;\n          })}\n\n          {external.length > 0 && (\n            <DividerWrapper>\n              <StyledDivider />\n            </DividerWrapper>\n          )}\n\n          {Children.map(external, item => {\n            if (item.type !== NavigationItem) {\n              console.warn(\n                'Du bruker en React-komponent som ikke er tillat i AppShell-external. Du kan kun bruke AppShell.NavItem i AppShell-external.'\n              );\n              return null;\n            }\n            return item;\n          })}\n        </NavigationItems>\n      </Sidebar>\n    </div>\n  );\n};\n","import { PropsWithChildren, ReactElement } from 'react';\nimport styled from 'styled-components';\n\nimport { appShellTokens } from './AppShell.tokens';\nimport { Navigation } from './Navigation/Navigation';\nimport { User } from './Navigation/TopBar';\nimport { OverflowMenuProps } from '../OverflowMenu';\n\nexport type AppShellProps = PropsWithChildren<{\n  /**\n   * Versjon på appen på formatet 0.0.0\n   */\n  version?: string;\n  navigation: AppShellNavigationProps;\n  /**\n   * Den innloggede brukeren.\n   */\n  user: User;\n  /**\n   * Menyvalg som skal vises i OverflowMenu knyttet til \"bruker\"-knappen.\n   */\n  userMenuItems?: OverflowMenuProps['items'];\n}>;\n\nexport type AppShellNavigationProps = {\n  /**\n   * Interne lenker i navigasjonen.\n   */\n  internal?: ReactElement[];\n  /**\n   * Eksterne lenker i navigasjonen.\n   */\n  external?: ReactElement[];\n};\n\nconst AppShellContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  @media (min-width: ${appShellTokens.navigation.mobile.breakpoint}) {\n    flex-direction: row;\n  }\n`;\n\nconst MainContent = styled.main`\n  min-height: calc(100vh - ${appShellTokens.navigation.topBar.height});\n  margin-top: ${appShellTokens.navigation.topBar.height};\n  @media (min-width: ${appShellTokens.navigation.mobile.breakpoint}) {\n    min-height: unset;\n    margin-top: 0;\n    min-width: calc(100vw - ${appShellTokens.navigation.width});\n    max-width: calc(100vw - ${appShellTokens.navigation.width});\n  }\n`;\n\nexport const AppShell = ({\n  children,\n  version = '',\n  navigation: { internal = [], external = [] },\n  user,\n  userMenuItems,\n}: AppShellProps) => {\n  return (\n    <AppShellContainer>\n      <Navigation\n        user={user}\n        userMenuItems={userMenuItems}\n        version={version}\n        internal={internal}\n        external={external}\n      />\n      <MainContent>{children}</MainContent>\n    </AppShellContainer>\n  );\n};\n","import { AppShell as BaseAppShell, AppShellProps } from './AppShell';\nimport { NavigationItem } from './Navigation/NavigationItem';\n\ntype CompoundAppShell = typeof BaseAppShell & {\n  NavItem: typeof NavigationItem;\n};\n\nconst AppShell = BaseAppShell as CompoundAppShell;\nAppShell.NavItem = NavigationItem;\n\nexport { AppShell, type AppShellProps };\n"],"names":["colors","spacing","fontPackages","borderRadius","breakpoints","ddsBaseTokens","navigationItems","logoAndVersion","topBar","navigation","floatingActionButtons","appShellTokens","navTokens","navItemTokens","IconContainer","styled","TextContainer","ChevronContainer","BaseLink","InternalNavItem","ExternalNavItem","NavigationItem","_as","active","icon","external","children","rest","Comp","jsxs","jsx","Icon","OpenExternalIcon","ChevronRightIcon","EmbeteIcon","type","JordskifterettIcon","TingrettIcon","LagmannsrettIcon","PersonIcon","fontPackage","small","NavigationLogo","LogoBurgerGroup","ActionButtonGroup","IconButton","Button","IconButtonText","Bar","TopBar","user","userMenuItems","isNavigationOpen","onNavigationOpenChange","CloseIcon","MenuIcon","OverflowMenuGroup","props","OverflowMenu","Sidebar","isOpen","LogoAndVersionContainer","Version","NavigationItems","DividerWrapper","StyledDivider","Divider","Navigation","version","internal","setOpen","useState","useEffect","listener","event","prev","newOpen","Children","item","AppShellContainer","MainContent","AppShell","BaseAppShell"],"mappings":"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"}