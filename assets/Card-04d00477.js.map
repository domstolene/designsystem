{"version":3,"file":"Card-04d00477.js","sources":["../../../../packages/components/src/components/Card/Card.tokens.tsx","../../../../packages/components/src/components/Card/Card.tsx"],"sourcesContent":["import {\n  ddsBaseTokens,\n  ddsReferenceTokens,\n} from '@norges-domstoler/dds-design-tokens';\n\nconst { colors, border } = ddsBaseTokens;\nconst { textDefault } = ddsReferenceTokens;\n\nconst base = {\n  border: `${border.BordersDdsBorderStyleLightStrokeWeight} solid`,\n};\n\nconst cardColors = {\n  filledLight: {\n    backgroundColor: colors.DdsColorPrimaryLightest,\n    borderColor: colors.DdsColorPrimaryLightest,\n    color: textDefault.textColor,\n  },\n  filledDark: {\n    backgroundColor: colors.DdsColorPrimaryBase,\n    borderColor: colors.DdsColorPrimaryBase,\n    color: colors.DdsColorNeutralsWhite,\n  },\n  strokeDark: {\n    backgroundColor: colors.DdsColorNeutralsWhite,\n    borderColor: border.BordersDdsBorderStyleLightStroke,\n    color: textDefault.textColor,\n  },\n  strokeLight: {\n    backgroundColor: colors.DdsColorNeutralsWhite,\n    borderColor: border.BordersDdsBorderStyleLightStroke,\n    color: textDefault.textColor,\n  },\n};\n\nexport const cardTokens = {\n  base: base,\n  colors: cardColors,\n};\n","import { AnchorHTMLAttributes, RefObject } from 'react';\nimport styled, { css } from 'styled-components';\nimport { cardTokens as tokens } from './Card.tokens';\nimport {\n  BaseComponentPropsWithChildren,\n  getBaseHTMLProps,\n  selection,\n} from '@norges-domstoler/dds-core';\nimport {\n  getFontStyling,\n  defaultTypographyType,\n} from '@norges-domstoler/dds-typography';\nimport {\n  hoverWithBorder,\n  focusVisibleWithBorder,\n} from '@norges-domstoler/dds-form';\n\ntype ContainerProps = {\n  color: CardColor;\n  cardType: CardType;\n};\n\nconst Container = styled.div<ContainerProps>`\n  border: ${tokens.base.border};\n  ${getFontStyling(defaultTypographyType)};\n  &::selection,\n  *::selection {\n    ${selection}\n  }\n  @media (prefers-reduced-motion: no-preference) {\n    transition: box-shadow 0.2s, border-color 0.2s;\n  }\n  ${({ color }) =>\n    color &&\n    css`\n      color: ${tokens.colors[color].color};\n      background-color: ${tokens.colors[color].backgroundColor};\n      border-color: ${tokens.colors[color].borderColor};\n    `}\n  ${({ cardType }) =>\n    cardType === 'navigation'\n      ? css`\n          text-decoration: none;\n          &:hover {\n            ${hoverWithBorder}\n          }\n          &:focus {\n            ${focusVisibleWithBorder}\n          }\n        `\n      : cardType === 'expandable'\n      ? css`\n          width: 100%;\n          box-sizing: border-box;\n          &:not(:first-of-type) {\n            border-top: none;\n          }\n        `\n      : ''}\n`;\nexport type CardColor =\n  | 'filledDark'\n  | 'filledLight'\n  | 'strokeDark'\n  | 'strokeLight';\n\nexport type CardType = 'info' | 'navigation' | 'expandable';\n\ntype BaseCardProps<T extends HTMLElement> = BaseComponentPropsWithChildren<\n  T,\n  {\n    /** Fargepalett i komponenten. */\n    color?: CardColor;\n\n    /** Referanse til komponenten. */\n    cardRef?: RefObject<T>;\n  }\n>;\n\nexport type InfoCardProps = BaseCardProps<HTMLDivElement> & {\n  /** Spesifiserer funksjonalitet og formål med komponenten. **OBS!** ved `'navigation'` må `href` oppgis. Ved `'expandable'` må alle `<Card />` grupperte sammen ligge egen `<div>` container. */\n  cardType: 'info';\n};\n\nexport type NavigationCardProps = BaseCardProps<HTMLAnchorElement> & {\n  cardType: 'navigation';\n} & Pick<AnchorHTMLAttributes<HTMLAnchorElement>, 'href' | 'target'>;\n\nexport type ExpandableCardProps = BaseCardProps<HTMLDivElement> & {\n  cardType: 'expandable';\n};\n\nexport type CardProps =\n  | InfoCardProps\n  | NavigationCardProps\n  | ExpandableCardProps;\n\nexport const Card = (props: CardProps) => {\n  const {\n    color = 'filledLight',\n    cardType,\n    cardRef,\n    children,\n    id,\n    className,\n    htmlProps,\n    ...rest\n  } = props;\n\n  if (cardType === 'navigation') {\n    const { href, target } = props;\n\n    return (\n      <Container\n        {...getBaseHTMLProps(id, className, htmlProps, rest)}\n        cardType={cardType}\n        color={color}\n        as=\"a\"\n        ref={cardRef}\n        href={href}\n        target={target}\n      >\n        {children}\n      </Container>\n    );\n  }\n\n  return (\n    <Container\n      {...getBaseHTMLProps(id, className, htmlProps, rest)}\n      cardType={cardType}\n      color={color}\n      as=\"div\"\n      ref={cardRef}\n    >\n      {children}\n    </Container>\n  );\n};\n\nCard.displayName = 'Card';\n"],"names":["colors","border","ddsBaseTokens","textDefault","ddsReferenceTokens","base","cardColors","cardTokens","Container","styled","tokens","getFontStyling","defaultTypographyType","selection","color","css","cardType","hoverWithBorder","focusVisibleWithBorder","Card","props","cardRef","children","id","className","htmlProps","rest","href","target","jsx","getBaseHTMLProps"],"mappings":"8eAKA,KAAM,CAAE,OAAAA,EAAQ,OAAAC,CAAW,EAAAC,EACrB,CAAE,YAAAC,CAAgB,EAAAC,EAElBC,EAAO,CACX,OAAQ,GAAGJ,EAAO,8CACpB,EAEMK,EAAa,CACjB,YAAa,CACX,gBAAiBN,EAAO,wBACxB,YAAaA,EAAO,wBACpB,MAAOG,EAAY,SACrB,EACA,WAAY,CACV,gBAAiBH,EAAO,oBACxB,YAAaA,EAAO,oBACpB,MAAOA,EAAO,qBAChB,EACA,WAAY,CACV,gBAAiBA,EAAO,sBACxB,YAAaC,EAAO,iCACpB,MAAOE,EAAY,SACrB,EACA,YAAa,CACX,gBAAiBH,EAAO,sBACxB,YAAaC,EAAO,iCACpB,MAAOE,EAAY,SACrB,CACF,EAEaI,EAAa,CACxB,KAAAF,EACA,OAAQC,CACV,EChBAE,EAAAC,EAAA;AAAA,YAAyBC,EAAA,KAAA;AAAA,IACDC,EAAAC,CAAA;AAAA;AAAA;AAAA,MACgBC;AAAA;AAAA;AAAA;AAAA;AAAA,IAGlC,CAAA,CAAA,MAAAC,KAAAA,GAAAC;AAAAA,eAOFL,EAAA,OAAAI,CAAA,EAAA;AAAA,0BACgCJ,EAAA,OAAAI,CAAA,EAAA;AAAA,sBACWJ,EAAA,OAAAI,CAAA,EAAA;AAAA;AAAA,IACJ,CAAA,CAAA,SAAAE,CAAA,IAAAA,IAAA,aAAAD;AAAAA;AAAAA;AAAAA,cAInCE;AAAA;AAAA;AAAA,cAGMC;AAAA;AAAA,UAGAF,IAAA,aAAAD;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,UAIN;AAAA,EA8CDI,EAAAC,GAAA,CACL,KAAA,CAAM,MAAAN,EAAA,cACI,SAAAE,EACR,QAAAK,EACA,SAAAC,EACA,GAAAC,EACA,UAAAC,EACA,UAAAC,EACA,GAAAC,CACG,EAAAN,EAGL,GAAAJ,IAAA,aAAA,CACE,KAAA,CAAA,KAAAW,EAAA,OAAAC,CAAA,EAAAR,EAEA,OAAAS,EACErB,EAAC,CAAA,GAAAsB,EAAAP,EAAAC,EAAAC,EAAAC,CAAA,EACoD,SAAAV,EACnD,MAAAF,EACA,GAAA,IACG,IAAAO,EACE,KAAAM,EACL,OAAAC,EACA,SAAAN,CAEC,CAAA,EAKP,OAAAO,EACErB,EAAC,CAAA,GAAAsB,EAAAP,EAAAC,EAAAC,EAAAC,CAAA,EACoD,SAAAV,EACnD,MAAAF,EACA,GAAA,MACG,IAAAO,EACE,SAAAC,CAEJ,CAAA,CAGP,EAEAH,EAAA,YAAA"}