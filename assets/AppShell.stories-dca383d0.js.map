{"version":3,"file":"AppShell.stories-dca383d0.js","sources":["../../../../packages/components/src/components/AppShell/AppShell.tokens.ts","../../../../packages/components/src/components/AppShell/AppShellContext.tsx","../../../../packages/components/src/components/AppShell/Navigation/NavigationItem.tsx","../../../../packages/development-utils/src/EnvironmentBannerProvider/EnvironmentBanner.tsx","../../../../packages/development-utils/src/EnvironmentBannerProvider/EnvironmentBannerProvider.tsx","../../../../packages/components/src/components/AppShell/Navigation/EmbeteIcon.tsx","../../../../packages/components/src/components/AppShell/Navigation/NavigationLogo.tsx","../../../../packages/components/src/components/AppShell/Navigation/TopBar.tsx","../../../../packages/components/src/components/AppShell/Navigation/Navigation.tsx","../../../../packages/components/src/components/AppShell/AppShell.tsx","../../../../packages/components/src/components/AppShell/index.ts"],"sourcesContent":["import { ddsBaseTokens } from '@norges-domstoler/dds-design-tokens';\nconst { colors, spacing, fontPackages, borderRadius, breakpoints } =\n  ddsBaseTokens;\n\nconst navigationItems = {\n  gap: spacing.SizesDdsSpacingLocalX05,\n  item: {\n    ...fontPackages.body_sans_02.base,\n    color: colors.DdsColorNeutralsGray1,\n    borderRadius: borderRadius.RadiiDdsBorderRadius3Radius,\n    padding: spacing.SizesDdsSpacingLocalX075,\n    gap: spacing.SizesDdsSpacingLocalX05,\n    external: {\n      ...fontPackages.body_sans_01.base,\n    },\n    hover: {\n      backgroundColor: colors.DdsColorPrimaryDark,\n    },\n    active: {\n      color: colors.DdsColorNeutralsWhite,\n      backgroundColor: colors.DdsColorPrimaryDarker,\n    },\n  },\n};\n\nconst logoAndVersion = {\n  padding: '36px 24px',\n  color: colors.DdsColorNeutralsWhite,\n  logo: {\n    ...fontPackages.heading_sans_05.base,\n    fontWeight: 700,\n    small: {\n      ...fontPackages.heading_sans_03.base,\n      fontWeight: 600,\n    },\n  },\n  version: {\n    ...fontPackages.supportingStyle_tiny_01.base,\n  },\n};\n\nconst topBar = {\n  padding: spacing.SizesDdsSpacingLocalX025,\n  height: `calc(${spacing.SizesDdsSpacingLayoutX3} + 2 * ${spacing.SizesDdsSpacingLocalX025})`,\n  buttonTextColor: colors.DdsColorNeutralsGray3,\n  gap: spacing.SizesDdsSpacingLocalX025,\n};\n\nconst navigation = {\n  navigationItems,\n  logoAndVersion,\n  topBar,\n\n  color: colors.DdsColorNeutralsGray1,\n  backgroundColor: colors.DdsColorPrimaryBase,\n  gap: spacing.SizesDdsSpacingLocalX05,\n  dividerColor: colors.DdsColorPrimaryLight,\n  padding: spacing.SizesDdsSpacingLocalX1,\n  width: '264px',\n\n  mobile: {\n    breakpoint: breakpoints.DdsBreakpointSm,\n    iconColors: colors.DdsColorNeutralsGray3,\n  },\n};\n\nconst floatingActionButtons = {\n  gap: spacing.SizesDdsSpacingLocalX1,\n  textColor: colors.DdsColorNeutralsGray7,\n  backgroundColor: colors.DdsColorNeutralsWhite,\n  borderRadius: borderRadius.RadiiDdsBorderRadius3Radius,\n};\n\nexport const appShellTokens = { navigation, floatingActionButtons };\n","import {\n  type ReactNode,\n  type SetStateAction,\n  type Dispatch,\n  createContext,\n  useState,\n  useContext,\n} from 'react';\n\ntype AppShellContextValues = {\n  isOpen: boolean;\n  setOpen: Dispatch<SetStateAction<boolean>>;\n};\n\nconst AppShellContext = createContext<AppShellContextValues>({\n  isOpen: false,\n  setOpen: () => {},\n});\n\nexport const AppShellContextProvider = ({\n  children,\n}: {\n  children: ReactNode;\n}) => {\n  const [isOpen, setOpen] = useState(false);\n  return (\n    <AppShellContext.Provider value={{ isOpen, setOpen }}>\n      {children}\n    </AppShellContext.Provider>\n  );\n};\n\nexport const useAppShellContext = () => {\n  return useContext(AppShellContext);\n};\n","import styled from 'styled-components';\nimport { type PropsOf, type As } from '@norges-domstoler/dds-core';\nimport {\n  Icon,\n  SvgIcon,\n  ChevronRightIcon,\n  OpenExternalIcon,\n} from '@norges-domstoler/dds-icons';\nimport { type MouseEventHandler } from 'react';\n\nimport { appShellTokens } from '../AppShell.tokens';\nimport { useAppShellContext } from '../AppShellContext';\n\nconst { navigation: navTokens } = appShellTokens;\n\nconst navItemTokens = navTokens.navigationItems.item;\n\nconst IconContainer = styled.div`\n  grid-area: icon;\n  display: flex;\n  align-items: center;\n`;\n\nconst TextContainer = styled.span`\n  grid-area: text;\n`;\n\nconst ChevronContainer = styled.div`\n  display: flex;\n  align-items: center;\n  opacity: 0;\n  grid-area: chevron;\n`;\n\nconst BaseLink = styled.a`\n  padding: ${navItemTokens.padding};\n  gap: ${navItemTokens.gap};\n  border-radius: ${navItemTokens.borderRadius};\n\n  text-decoration: none;\n  color: ${navItemTokens.color};\n  font-size: ${navItemTokens.fontSize};\n  font-style: ${navItemTokens.fontStyle};\n  font-family: ${navItemTokens.fontFamily};\n  font-weight: ${navItemTokens.fontWeight};\n  line-height: ${navItemTokens.lineHeight};\n  letter-spacing: ${navItemTokens.letterSpacing};\n\n  :hover:not(.active) {\n    background-color: ${navItemTokens.hover.backgroundColor};\n  }\n\n  &.active {\n    color: ${navItemTokens.active.color};\n    background-color: ${navItemTokens.active.backgroundColor};\n  }\n`;\n\nconst InternalNavItem = styled(BaseLink)`\n  display: grid;\n  align-items: center;\n  grid-template-areas: 'icon text chevron';\n  grid-template-columns: min-content 1fr min-content;\n\n  &.active ${ChevronContainer} {\n    opacity: 1;\n  }\n`;\n\nconst ExternalNavItem = styled(BaseLink)`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n\n  font-size: ${navItemTokens.external.fontSize};\n  font-style: ${navItemTokens.external.fontStyle};\n  font-family: ${navItemTokens.external.fontFamily};\n  font-weight: ${navItemTokens.external.fontWeight};\n  line-height: ${navItemTokens.external.lineHeight};\n  letter-spacing: ${navItemTokens.external.letterSpacing};\n`;\n\ntype BaseNavigationItemProps = (\n  | {\n      icon: SvgIcon;\n      active?: boolean;\n      external?: undefined | false;\n    }\n  | { external: true; active?: undefined | false; icon?: undefined }\n) & { onClick?: MouseEventHandler };\n\ntype NavigationItemProps<T extends As = 'a'> = PropsOf<T> &\n  BaseNavigationItemProps;\n\nexport const NavigationItem = <T extends As = 'a'>({\n  as: _as,\n  active,\n  icon,\n  external,\n  children,\n  onClick: propOnClick,\n  ...rest\n}: NavigationItemProps<T>) => {\n  const { setOpen } = useAppShellContext();\n  const Comp = _as ?? 'a';\n\n  const onClick: MouseEventHandler = e => {\n    propOnClick?.(e);\n    setOpen(false);\n  };\n  if (external) {\n    return (\n      <ExternalNavItem as={Comp} {...rest} onClick={onClick}>\n        {children}\n        <Icon icon={OpenExternalIcon} iconSize=\"inherit\" />\n      </ExternalNavItem>\n    );\n  }\n\n  return (\n    <InternalNavItem\n      as={Comp}\n      {...rest}\n      onClick={onClick}\n      className={[active ? 'active' : '', rest.className].join(' ')}\n    >\n      <IconContainer>{icon && <Icon icon={icon} />}</IconContainer>\n      <TextContainer>{children}</TextContainer>\n      <ChevronContainer>\n        <Icon icon={ChevronRightIcon} />\n      </ChevronContainer>\n    </InternalNavItem>\n  );\n};\n\nNavigationItem.displayName = 'AppShell.NavItem';\n","import styled from 'styled-components';\n\nexport const environments = ['LOKAL', 'TEST', 'AT', 'KURS', 'PROD'] as const;\nexport type Environment = (typeof environments)[number];\ntype NonProdEnvironment = Exclude<Environment, 'PROD'>;\n\nexport type BannerPosition = 'fixed' | 'absolute';\n\nexport type EnvironmentBannerProps = {\n  /**\n   * Miljøet som applikasjonen kjører i.\n   * Hvis miljøet er PROD, vises ikke banneren.\n   */\n  environment: Environment;\n  /**\n   * @default 'fixed'\n   */\n  bannerPosition?: BannerPosition;\n};\n\nfunction getBannerColor(environment: NonProdEnvironment): {\n  background: string;\n  text: string;\n} {\n  switch (environment) {\n    case 'TEST':\n      return { background: '#F957A5', text: '#5E032F' };\n    case 'AT':\n      return { background: '#2CC3F2', text: '#064B60' };\n    case 'KURS':\n      return { background: '#7AB73D', text: '#2B4116' };\n    case 'LOKAL':\n      return { background: '#F2D32C', text: '#695B07' };\n  }\n}\n\nexport const ENVIRONMENT_BANNER_HEIGHT = '2rem';\n\nconst Banner = styled.div<{\n  environment: NonProdEnvironment;\n  position: 'fixed' | 'absolute';\n}>`\n  background-color: ${({ environment }) =>\n    getBannerColor(environment).background};\n  padding: 8px;\n  color: ${({ environment }) => getBannerColor(environment).text};\n  width: 100%;\n  height: ${ENVIRONMENT_BANNER_HEIGHT};\n  text-align: center;\n  font-weight: bolder;\n  letter-spacing: 0.15em;\n  z-index: 9999;\n\n  position: ${({ position }) => position};\n  top: 0;\n  left: 0;\n  right: 0;\n`;\n\nexport const EnvironmentBanner = ({\n  environment,\n  bannerPosition = 'fixed',\n}: EnvironmentBannerProps) => {\n  if (environment === 'PROD') {\n    return null;\n  }\n\n  return (\n    <Banner environment={environment} position={bannerPosition}>\n      {environment}\n    </Banner>\n  );\n};\n\nEnvironmentBanner.displayName = 'EnvironmentBanner';\n","import styled from 'styled-components';\nimport type { ReactNode } from 'react';\nimport {\n  BannerPosition,\n  ENVIRONMENT_BANNER_HEIGHT,\n  Environment,\n  EnvironmentBanner,\n} from './EnvironmentBanner';\n\nexport type EnvironmentBannerProviderProps = {\n  /**\n   * Miljøet som applikasjonen kjører i.\n   * Hvis miljøet er PROD, vises ikke banneren.\n   */\n  environment: Environment;\n  /**\n   * Applikasjonskoden din.\n   */\n  children: ReactNode;\n  /**\n   * @default 'fixed'\n   */\n  bannerPosition?: BannerPosition;\n};\n\nconst AppWrapper = styled.div`\n  padding-top: ${ENVIRONMENT_BANNER_HEIGHT};\n  position: relative;\n`;\n\n/**\n * Viser et banner med miljøet applikasjonen kjører i.\n */\nexport const EnvironmentBannerProvider = ({\n  environment,\n  children,\n  bannerPosition = 'fixed',\n}: EnvironmentBannerProviderProps) => {\n  if (environment === 'PROD') {\n    return <>{children}</>;\n  }\n\n  return (\n    <AppWrapper>\n      <EnvironmentBanner\n        environment={environment}\n        bannerPosition={bannerPosition}\n      />\n      {children}\n    </AppWrapper>\n  );\n};\n\nEnvironmentBannerProvider.displayName = 'EnvironmentBannerProvider';\n","import {\n  JordskifterettIcon,\n  LagmannsrettIcon,\n  PersonIcon,\n  SvgProps,\n  TingrettIcon,\n} from '@norges-domstoler/dds-icons';\n\nexport type EmbeteType =\n  | 'jordskifterett'\n  | 'tingrett'\n  | 'lagmannsrett'\n  | 'høyesterett';\n\ntype EmbeteIconProps = {\n  type?: EmbeteType;\n} & SvgProps;\n\nexport const EmbeteIcon = ({ type, ...rest }: EmbeteIconProps) => {\n  switch (type) {\n    case 'jordskifterett':\n      return <JordskifterettIcon {...rest} />;\n    case 'tingrett':\n      return <TingrettIcon {...rest} />;\n    case 'lagmannsrett':\n      return <LagmannsrettIcon {...rest} />;\n    case 'høyesterett':\n    case undefined:\n      return <PersonIcon {...rest} />;\n  }\n};\n","import styled from 'styled-components';\n\nimport { appShellTokens } from '../AppShell.tokens';\nconst { navigation: navTokens } = appShellTokens;\n\nconst fontPackage = (small?: boolean) => {\n  if (small) {\n    return navTokens.logoAndVersion.logo.small;\n  }\n\n  return navTokens.logoAndVersion.logo;\n};\n\nexport const NavigationLogo = styled.a<{ small?: boolean }>`\n  font-size: ${({ small }) => fontPackage(small).fontSize};\n  font-style: ${({ small }) => fontPackage(small).fontStyle};\n  font-family: ${({ small }) => fontPackage(small).fontFamily};\n  font-weight: ${({ small }) => fontPackage(small).fontWeight};\n  line-height: ${({ small }) => fontPackage(small).lineHeight};\n  letter-spacing: ${({ small }) => fontPackage(small).letterSpacing};\n  text-align: middle;\n`;\n","import styled from 'styled-components';\nimport { MenuIcon, CloseIcon, SvgProps } from '@norges-domstoler/dds-icons';\nimport { ENVIRONMENT_BANNER_HEIGHT } from '@norges-domstoler/development-utils';\n\nimport { EmbeteIcon, EmbeteType } from './EmbeteIcon';\nimport { appShellTokens } from '../AppShell.tokens';\nimport { NavigationLogo } from './NavigationLogo';\nimport { Button } from '../../Button';\nimport {\n  OverflowMenu,\n  OverflowMenuGroup,\n  OverflowMenuProps,\n} from '../../OverflowMenu';\n\nconst { navigation: navTokens, floatingActionButtons } = appShellTokens;\n\nconst LogoBurgerGroup = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${navTokens.topBar.gap};\n`;\n\nconst ActionButtonGroup = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${navTokens.topBar.gap};\n`;\n\nconst IconButton = styled(Button).attrs({\n  appearance: 'borderless',\n  purpose: 'secondary',\n})`\n  color: ${navTokens.topBar.buttonTextColor};\n  > :first-child {\n    font-size: 1.65rem;\n  }\n  @media (max-width: ${navTokens.mobile.breakpoint}) {\n    border: 0;\n    box-shadow: none;\n    padding: 12px;\n    &:hover,\n    &:active {\n      color: ${navTokens.topBar.buttonTextColor};\n      text-decoration-color: ${navTokens.topBar.buttonTextColor};\n      box-shadow: none;\n    }\n    gap: 0;\n  }\n`;\n\nconst IconButtonText = styled.span`\n  display: none; // Ikke vis tekst på mobil\n  width: 0;\n`;\n\nconst Bar = styled.div<{ environmentBannerActive: boolean }>`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: ${navTokens.topBar.gap};\n  width: 100vw;\n  height: ${navTokens.topBar.height};\n  color: ${navTokens.color};\n  background-color: ${navTokens.backgroundColor};\n  box-sizing: border-box;\n  z-index: 101;\n\n  position: fixed;\n  top: ${({ environmentBannerActive }) =>\n    environmentBannerActive ? ENVIRONMENT_BANNER_HEIGHT : '0'};\n  left: 0;\n  right: 0;\n\n  @media (min-width: ${navTokens.mobile.breakpoint}) {\n    justify-content: flex-end;\n    background-color: transparent;\n    margin-left: ${navTokens.width};\n    width: calc(100vw - ${navTokens.width});\n\n    pointer-events: none;\n    & > * {\n      pointer-events: initial;\n    }\n\n    ${LogoBurgerGroup} {\n      display: none;\n    }\n\n    ${ActionButtonGroup} {\n      padding-right: calc(2 * ${navTokens.topBar.gap});\n      gap: ${floatingActionButtons.gap};\n    }\n\n    ${IconButton} {\n      background-color: ${floatingActionButtons.backgroundColor};\n      color: ${floatingActionButtons.textColor};\n      box-shadow: 8px 16px 32px 0px rgba(0, 0, 0, 0.1);\n      border-radius: ${floatingActionButtons.borderRadius};\n\n      ${IconButtonText} {\n        display: unset;\n      }\n    }\n  }\n`;\n\ntype TopBarProps = {\n  user: User;\n  userMenuItems?: OverflowMenuProps['items'];\n  isNavigationOpen: boolean;\n  onNavigationOpenChange: (isOpen: boolean) => void;\n  environmentBannerActive: boolean;\n};\n\nexport type User = {\n  /**Brukerens fulle navn (for- og etternavn). */\n  name: string;\n  /**Det aktive embetet til brukeren. */\n  embete: Embete;\n};\n\nexport type Embete = {\n  /**Navnet på embetet. */\n  name: string;\n  /**Hvilken instans embetet er. */\n  type: EmbeteType;\n};\n\nexport const TopBar = ({\n  user,\n  userMenuItems,\n  isNavigationOpen,\n  onNavigationOpenChange,\n  environmentBannerActive,\n}: TopBarProps) => {\n  const Icon = (props: SvgProps) => (\n    <EmbeteIcon {...props} type={user.embete.type} />\n  );\n\n  return (\n    <Bar environmentBannerActive={environmentBannerActive}>\n      <LogoBurgerGroup>\n        <IconButton\n          icon={isNavigationOpen ? CloseIcon : MenuIcon}\n          onClick={() => onNavigationOpenChange(!isNavigationOpen)}\n        />\n        <NavigationLogo small>Lovisa</NavigationLogo>\n      </LogoBurgerGroup>\n      <ActionButtonGroup>\n        <OverflowMenuGroup>\n          <IconButton\n            icon={Icon}\n            label={<IconButtonText>{user.name}</IconButtonText>}\n          />\n          <OverflowMenu items={userMenuItems} />\n        </OverflowMenuGroup>\n      </ActionButtonGroup>\n    </Bar>\n  );\n};\n","import { Children, ReactElement, useEffect } from 'react';\nimport styled from 'styled-components';\n\nimport { appShellTokens } from '../AppShell.tokens';\nimport { Divider } from '../../Divider';\nimport { NavigationItem } from './NavigationItem';\nimport { TopBar, User } from './TopBar';\nimport { NavigationLogo } from './NavigationLogo';\nimport { OverflowMenuProps } from '../../OverflowMenu';\nimport { ENVIRONMENT_BANNER_HEIGHT } from '@norges-domstoler/development-utils';\nimport { useAppShellContext } from '../AppShellContext';\n\nconst { navigation: navTokens } = appShellTokens;\n\nconst Sidebar = styled.div<{\n  isOpen: boolean;\n  environmentBannerActive: boolean;\n}>`\n  display: flex;\n  flex-direction: column;\n  height: calc(100vh - ${navTokens.topBar.height});\n  width: 100vw;\n  padding: ${navTokens.padding};\n  color: ${navTokens.color};\n  background-color: ${navTokens.backgroundColor};\n  box-sizing: border-box;\n\n  position: fixed;\n  top: ${({ environmentBannerActive }) =>\n    environmentBannerActive\n      ? `calc(${ENVIRONMENT_BANNER_HEIGHT} + ${navTokens.topBar.height})`\n      : navTokens.topBar.height};\n  left: 0;\n  right: 0;\n  bottom: 0;\n  z-index: 100;\n\n  transition: transform 0.2s ease-in-out, opacity 0.2s ease-in-out;\n  transform: translateX(${({ isOpen }) => (isOpen ? '0' : '-100%')});\n  opacity: ${({ isOpen }) => (isOpen ? '1' : '0')};\n\n  @media (min-width: ${navTokens.mobile.breakpoint}) {\n    height: ${({ environmentBannerActive }) =>\n      environmentBannerActive\n        ? `calc(100vh - ${ENVIRONMENT_BANNER_HEIGHT})`\n        : '100vh'};\n    top: ${({ environmentBannerActive }) =>\n      environmentBannerActive ? ENVIRONMENT_BANNER_HEIGHT : 0};\n    width: ${navTokens.width};\n    position: fixed;\n\n    transform: translateX(0);\n    opacity: 1;\n  }\n`;\n\nconst LogoAndVersionContainer = styled.div`\n  display: none;\n\n  @media (min-width: ${navTokens.mobile.breakpoint}) {\n    display: flex;\n    flex-direction: column;\n    color: ${navTokens.logoAndVersion.color};\n    padding: ${navTokens.logoAndVersion.padding};\n  }\n`;\n\nconst Version = styled.span`\n  font-size: ${navTokens.logoAndVersion.version.fontSize};\n  font-style: ${navTokens.logoAndVersion.version.fontStyle};\n  font-family: ${navTokens.logoAndVersion.version.fontFamily};\n  font-weight: ${navTokens.logoAndVersion.version.fontWeight};\n  line-height: ${navTokens.logoAndVersion.version.lineHeight};\n  letter-spacing: ${navTokens.logoAndVersion.version.letterSpacing};\n`;\n\nexport const NavigationItems = styled.nav`\n  display: flex;\n  flex-direction: column;\n  gap: ${navTokens.navigationItems.gap};\n`;\n\nconst DividerWrapper = styled.div`\n  padding-left: ${navTokens.navigationItems.item.padding};\n  padding-right: ${navTokens.navigationItems.item.padding};\n`;\nconst StyledDivider = styled(Divider)`\n  border-color: ${navTokens.dividerColor};\n`;\n\nexport type NavigationProps = {\n  version: string;\n  internal: ReactElement[];\n  external: ReactElement[];\n  user: User;\n  userMenuItems?: OverflowMenuProps['items'];\n  environmentBannerActive: boolean;\n};\n\nexport const Navigation = ({\n  version,\n  user,\n  userMenuItems,\n  internal,\n  external,\n  environmentBannerActive,\n}: NavigationProps) => {\n  const { isOpen, setOpen } = useAppShellContext();\n\n  useEffect(() => {\n    const listener = (event: KeyboardEvent) => {\n      if (event.key === 'o') {\n        setOpen(prev => !prev);\n      }\n    };\n\n    window.addEventListener('keypress', listener);\n    return () => window.removeEventListener('keypress', listener);\n  });\n\n  return (\n    <div>\n      <TopBar\n        user={user}\n        userMenuItems={userMenuItems}\n        isNavigationOpen={isOpen}\n        onNavigationOpenChange={newOpen => setOpen(newOpen)}\n        environmentBannerActive={environmentBannerActive}\n      />\n      <Sidebar\n        isOpen={isOpen}\n        environmentBannerActive={environmentBannerActive}\n      >\n        <LogoAndVersionContainer>\n          <NavigationLogo>Lovisa</NavigationLogo>\n          {version !== '' && <Version>v {version}</Version>}\n        </LogoAndVersionContainer>\n        <NavigationItems>\n          {Children.map(internal, item => {\n            if (item.type !== NavigationItem) {\n              console.warn(\n                `Du bruker en React-komponent som ikke er tillat i AppShell-internal. Du kan kun bruke AppShell.NavItem i AppShell-internal.`\n              );\n              return null;\n            }\n            return item;\n          })}\n\n          {external.length > 0 && (\n            <DividerWrapper>\n              <StyledDivider />\n            </DividerWrapper>\n          )}\n\n          {Children.map(external, item => {\n            if (item.type !== NavigationItem) {\n              console.warn(\n                'Du bruker en React-komponent som ikke er tillat i AppShell-external. Du kan kun bruke AppShell.NavItem i AppShell-external.'\n              );\n              return null;\n            }\n            return item;\n          })}\n        </NavigationItems>\n      </Sidebar>\n    </div>\n  );\n};\n","import { PropsWithChildren, ReactElement } from 'react';\nimport styled from 'styled-components';\n\nimport { appShellTokens } from './AppShell.tokens';\nimport { Navigation } from './Navigation/Navigation';\nimport { User } from './Navigation/TopBar';\nimport { OverflowMenuProps } from '../OverflowMenu';\nimport {\n  Environment,\n  EnvironmentBanner,\n  ENVIRONMENT_BANNER_HEIGHT,\n} from '@norges-domstoler/development-utils';\nimport { AppShellContextProvider } from './AppShellContext';\n\nexport type AppShellProps = PropsWithChildren<{\n  /**\n   * Versjon på appen på formatet 0.0.0\n   */\n  version?: string;\n  navigation: AppShellNavigationProps;\n  /**\n   * Den innloggede brukeren.\n   */\n  user: User;\n  /**\n   * Menyvalg som skal vises i OverflowMenu knyttet til \"bruker\"-knappen.\n   */\n  userMenuItems?: OverflowMenuProps['items'];\n  /**\n   * `environment` brukes for å  vise en banner øverst i appen som viser hvilket miljø du er i.\n   * Når environment er undefined eller `\"PROD\"` så vises ikke banneret.\n   */\n  environment?: Environment;\n}>;\n\nexport type AppShellNavigationProps = {\n  /**\n   * Interne lenker i navigasjonen.\n   */\n  internal?: ReactElement[];\n  /**\n   * Eksterne lenker i navigasjonen.\n   */\n  external?: ReactElement[];\n};\n\nconst AppShellContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  @media (min-width: ${appShellTokens.navigation.mobile.breakpoint}) {\n    flex-direction: row;\n  }\n`;\n\nconst MainContent = styled.main<{ environmentBannerActive: boolean }>`\n  min-height: calc(100vh - ${appShellTokens.navigation.topBar.height});\n  margin-top: ${({ environmentBannerActive }) =>\n    environmentBannerActive\n      ? `calc(${ENVIRONMENT_BANNER_HEIGHT} + ${appShellTokens.navigation.topBar.height})`\n      : appShellTokens.navigation.topBar.height};\n  @media (min-width: ${appShellTokens.navigation.mobile.breakpoint}) {\n    min-height: unset;\n    margin-top: ${({ environmentBannerActive }) =>\n      environmentBannerActive ? ENVIRONMENT_BANNER_HEIGHT : 0};\n    margin-left: ${appShellTokens.navigation.width};\n    min-width: calc(100vw - ${appShellTokens.navigation.width});\n    max-width: calc(100vw - ${appShellTokens.navigation.width});\n  }\n`;\n\nexport const AppShell = ({\n  children,\n  version = '',\n  navigation: { internal = [], external = [] },\n  user,\n  userMenuItems,\n  environment = 'PROD',\n}: AppShellProps) => {\n  const environmentBannerActive = environment !== 'PROD';\n  return (\n    <AppShellContextProvider>\n      <AppShellContainer>\n        <EnvironmentBanner environment={environment} />\n        <Navigation\n          user={user}\n          userMenuItems={userMenuItems}\n          version={version}\n          internal={internal}\n          external={external}\n          environmentBannerActive={environmentBannerActive}\n        />\n        <MainContent environmentBannerActive={environmentBannerActive}>\n          {children}\n        </MainContent>\n      </AppShellContainer>\n    </AppShellContextProvider>\n  );\n};\n\nAppShell.displayName = 'AppShell';\n","import { AppShell as BaseAppShell, AppShellProps } from './AppShell';\nimport { NavigationItem } from './Navigation/NavigationItem';\n\ntype CompoundAppShell = typeof BaseAppShell & {\n  NavItem: typeof NavigationItem;\n};\n\nconst AppShell = BaseAppShell as CompoundAppShell;\nAppShell.NavItem = NavigationItem;\n\nexport { AppShell, type AppShellProps };\n"],"names":["colors","spacing","fontPackages","borderRadius","breakpoints","ddsBaseTokens","navigationItems","logoAndVersion","topBar","navigation","floatingActionButtons","appShellTokens","AppShellContext","createContext","AppShellContextProvider","children","isOpen","setOpen","useState","jsx","useAppShellContext","useContext","navTokens","navItemTokens","IconContainer","styled","TextContainer","ChevronContainer","BaseLink","InternalNavItem","ExternalNavItem","NavigationItem","_as","active","icon","external","propOnClick","rest","Comp","onClick","e","jsxs","Icon","OpenExternalIcon","ChevronRightIcon","getBannerColor","environment","ENVIRONMENT_BANNER_HEIGHT","Banner","position","EnvironmentBanner","bannerPosition","AppWrapper","EnvironmentBannerProvider","Fragment","EmbeteIcon","type","JordskifterettIcon","TingrettIcon","LagmannsrettIcon","PersonIcon","fontPackage","small","NavigationLogo","LogoBurgerGroup","ActionButtonGroup","IconButton","Button","IconButtonText","Bar","environmentBannerActive","TopBar","user","userMenuItems","isNavigationOpen","onNavigationOpenChange","CloseIcon","MenuIcon","OverflowMenuGroup","props","OverflowMenu","Sidebar","LogoAndVersionContainer","Version","NavigationItems","DividerWrapper","StyledDivider","Divider","Navigation","version","internal","useEffect","listener","event","prev","newOpen","Children","item","AppShellContainer","MainContent","AppShell","BaseAppShell"],"mappings":"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"}