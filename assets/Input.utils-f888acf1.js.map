{"version":3,"file":"Input.utils-f888acf1.js","sources":["../../../../packages/components/src/helpers/Input/Input.utils.tsx"],"sourcesContent":["import { IconSize } from '../../components/Icon';\nimport { InputMessage } from '../../components/InputMessage';\nimport { InputSize } from './Input.types';\n\nexport const getFormInputIconSize = (componentSize: InputSize): IconSize => {\n  switch (componentSize) {\n    case 'medium':\n      return 'medium';\n    case 'small':\n      return 'small';\n    case 'tiny':\n      return 'small';\n  }\n};\n\nexport function getDefaultText(\n  value?: string | number | readonly string[],\n  defaultValue?: string | number | readonly string[]\n): string {\n  if (typeof value === 'string') {\n    return value;\n  }\n\n  if (typeof defaultValue === 'string') {\n    return defaultValue;\n  }\n\n  return '';\n}\n\nexport const renderInputMessage = (\n  tip?: string,\n  tipId?: string,\n  errorMessage?: string,\n  errorMessageId?: string\n) => (\n  <>\n    {errorMessage && errorMessageId && (\n      <InputMessage\n        message={errorMessage}\n        messageType=\"error\"\n        id={errorMessageId}\n      />\n    )}\n    {tip && tipId && !errorMessage && (\n      <InputMessage message={tip} messageType=\"tip\" id={tipId} />\n    )}\n  </>\n);\n"],"names":["getFormInputIconSize","componentSize","getDefaultText","value","defaultValue","renderInputMessage","tip","tipId","errorMessage","errorMessageId","jsxs","Fragment","jsx","InputMessage"],"mappings":"6GAIa,MAAAA,EAAwBC,GAAuC,CAC1E,OAAQA,EAAe,CACrB,IAAK,SACI,MAAA,SACT,IAAK,QACI,MAAA,QACT,IAAK,OACI,MAAA,OACX,CACF,EAEgB,SAAAC,EACdC,EACAC,EACQ,CACJ,OAAA,OAAOD,GAAU,SACZA,EAGL,OAAOC,GAAiB,SACnBA,EAGF,EACT,CAEO,MAAMC,EAAqB,CAChCC,EACAC,EACAC,EACAC,IAGGC,EAAAC,EAAA,CAAA,SAAA,CAAAH,GAAgBC,GACfG,EAACC,EAAA,CACC,QAASL,EACT,YAAY,QACZ,GAAIC,CAAA,CACN,EAEDH,GAAOC,GAAS,CAACC,GAChBI,EAACC,EAAa,CAAA,QAASP,EAAK,YAAY,MAAM,GAAIC,CAAO,CAAA,CAAA,CAE7D,CAAA"}