{"version":3,"file":"Tabs.stories-fa423e03.js","sources":["../../../../packages/components/src/components/Tabs/Tabs.context.tsx","../../../../packages/components/src/components/Tabs/Tabs.tsx","../../../../packages/components/src/components/Tabs/Tabs.tokens.tsx","../../../../packages/components/src/components/Tabs/Tab.tsx","../../../../packages/components/src/components/Tabs/TabList.tsx","../../../../packages/components/src/components/Tabs/TabPanel.tsx","../../../../packages/components/src/components/Tabs/TabPanels.tsx"],"sourcesContent":["import { createContext, RefObject, useContext } from 'react';\nimport { Direction } from '@norges-domstoler/dds-core';\n\ntype Tabs = {\n  activeTab: number;\n  tabsId: string;\n  handleTabChange: (index: number) => void;\n  tabListRef: RefObject<HTMLDivElement> | null;\n  tabPanelsRef: RefObject<HTMLDivElement> | null;\n  hasTabFocus: boolean;\n  setHasTabFocus: (hasFocus: boolean) => void;\n  tabContentDirection: Direction;\n};\n\nexport const TabsContext = createContext<Tabs>({\n  activeTab: 0,\n  tabsId: '',\n  handleTabChange: () => null,\n  tabListRef: null,\n  tabPanelsRef: null,\n  hasTabFocus: false,\n  setHasTabFocus: () => null,\n  tabContentDirection: 'row',\n});\nexport const useTabsContext = () => useContext(TabsContext);\n","import styled, { css } from 'styled-components';\nimport {\n  forwardRef,\n  HTMLAttributes,\n  useEffect,\n  useId,\n  useRef,\n  useState,\n} from 'react';\nimport {\n  BaseComponentPropsWithChildren,\n  Direction,\n  getBaseHTMLProps,\n} from '@norges-domstoler/dds-core';\nimport { TabsContext } from './Tabs.context';\nimport { Property } from 'csstype';\n\ntype ContainerProps = {\n  width?: Property.Width;\n};\n\nconst Container = styled.div<ContainerProps>`\n  ${({ width }) =>\n    width &&\n    css`\n      width: ${width};\n    `};\n`;\n\nexport type TabsProps = BaseComponentPropsWithChildren<\n  HTMLDivElement,\n  {\n    /** Indeksen til den aktive fanen. **OBS!** Ved 책 sette denne vil brukere aldri kunne endre tab uten at du ogs책 registrerer en `onChange`-lytter for 책 ta vare p책 aktiv tab utenfor komponenten. */\n    activeTab?: number;\n    /** Ekstra logikk ved endring av aktiv fane. */\n    onChange?: (index: number) => void;\n    /** Retningen ikon og tekst vises i `<Tab />`-elementer. */\n    tabContentDirection?: Direction;\n    /**Bredde for hele komponenten. */\n    width?: Property.Width;\n  },\n  Omit<HTMLAttributes<HTMLDivElement>, 'onChange'>\n>;\n\nexport const Tabs = forwardRef<HTMLDivElement, TabsProps>((props, ref) => {\n  const {\n    id,\n    activeTab,\n    onChange,\n    tabContentDirection = 'row',\n    width,\n    children,\n    className,\n    htmlProps,\n    ...rest\n  } = props;\n\n  const generatedId = useId();\n  const uniqueId = id ?? `${generatedId}-tabs`;\n\n  const [thisActiveTab, setActiveTab] = useState(activeTab || 0);\n  const [hasTabFocus, setHasTabFocus] = useState(false);\n  const tabListRef = useRef<HTMLDivElement>(null);\n  const tabPanelsRef = useRef<HTMLDivElement>(null);\n\n  const handleTabChange = (index: number) => {\n    setActiveTab(index);\n    onChange && onChange(index);\n  };\n\n  useEffect(() => {\n    if (activeTab !== undefined && activeTab !== thisActiveTab) {\n      setActiveTab(activeTab);\n    }\n  }, [activeTab, thisActiveTab]);\n\n  const containerProps = {\n    ...getBaseHTMLProps(uniqueId, className, htmlProps, rest),\n    ref,\n  };\n\n  return (\n    <TabsContext.Provider\n      value={{\n        tabsId: uniqueId,\n        activeTab: thisActiveTab,\n        handleTabChange,\n        tabListRef,\n        tabPanelsRef,\n        hasTabFocus,\n        setHasTabFocus,\n        tabContentDirection,\n      }}\n    >\n      <Container {...containerProps} width={width}>\n        {children}\n      </Container>\n    </TabsContext.Provider>\n  );\n});\n\nTabs.displayName = 'Tabs';\n","import { ddsBaseTokens } from '@norges-domstoler/dds-design-tokens';\n\nconst { border, spacing, colors } = ddsBaseTokens;\n\nconst tabList = {\n  borderBottom: `${border.BordersDdsBorderStyleLightStrokeWeight} solid ${border.BordersDdsBorderStyleLightStroke}`,\n};\nconst tab = {\n  base: {\n    borderBottom: `${border.BordersDdsBorderStyleLightStrokeWeight} solid transparent`,\n    color: colors.DdsColorNeutralsGray7,\n    padding: spacing.SizesDdsSpacingLocalX05,\n  },\n  row: {\n    gap: spacing.SizesDdsSpacingLocalX05,\n  },\n  column: {\n    gap: spacing.SizesDdsSpacingLocalX025,\n  },\n  active: {\n    backgroundColor: colors.DdsColorInteractiveLightest,\n    color: colors.DdsColorInteractiveDarkest,\n    boxShadow: `inset 0 -2px 0 0 ${colors.DdsColorInteractiveDarker}`,\n    borderColor: colors.DdsColorInteractiveDarker,\n  },\n  hover: {\n    color: colors.DdsColorInteractiveDarkest,\n    boxShadow: `inset 0 -2px 0 0 ${colors.DdsColorInteractiveDarker}`,\n    borderColor: colors.DdsColorInteractiveDarker,\n  },\n};\n\nconst panel = {\n  padding: spacing.SizesDdsSpacingLocalX025,\n};\n\nexport const tabsTokens = {\n  tabList,\n  tab,\n  panel,\n};\n","import {\n  ButtonHTMLAttributes,\n  Dispatch,\n  forwardRef,\n  SetStateAction,\n  useCallback,\n  useEffect,\n  MouseEvent,\n  useRef,\n  KeyboardEvent,\n} from 'react';\nimport styled, { css } from 'styled-components';\nimport {\n  useCombinedRef,\n  useOnKeyDown,\n  BaseComponentPropsWithChildren,\n  Direction,\n  getBaseHTMLProps,\n  normalizeButton,\n  removeButtonStyling,\n} from '@norges-domstoler/dds-core';\nimport { Icon, SvgIcon } from '@norges-domstoler/dds-icons';\nimport {\n  getFontStyling,\n  defaultTypographyType,\n} from '@norges-domstoler/dds-typography';\nimport {\n  focusVisibleTransitionValue,\n  focusVisible,\n} from '@norges-domstoler/dds-form';\n\nimport { tabsTokens as tokens } from './Tabs.tokens';\nimport { useTabsContext } from './Tabs.context';\n\nconst { tab } = tokens;\n\ntype ButtonProps = {\n  active: boolean;\n  direction: Direction;\n};\n\nconst Button = styled.button<ButtonProps>`\n  ${normalizeButton}\n  ${removeButtonStyling}\n  user-select: text;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-bottom: ${tab.base.borderBottom};\n  color: ${tab.base.color};\n  padding: ${tab.base.padding};\n  ${getFontStyling(defaultTypographyType)}\n\n  @media (prefers-reduced-motion: no-preference) {\n    transition:\n      box-shadow 0.2s,\n      border-bottom 0.2s,\n      color 0.2s,\n      ${focusVisibleTransitionValue};\n  }\n\n  ${({ direction }) => css`\n    flex-direction: ${direction};\n    gap: ${tab[direction].gap};\n  `};\n\n  ${({ active }) =>\n    active &&\n    css`\n      background-color: ${tab.active.backgroundColor};\n      border-color: ${tab.active.borderColor};\n      color: ${tab.active.color};\n      box-shadow: ${tab.active.boxShadow};\n    `}\n\n  &:focus-visible {\n    ${focusVisible}\n    outline-offset: -1px;\n  }\n\n  &:hover {\n    border-color: ${tab.hover.borderColor};\n    color: ${tab.hover.color};\n    box-shadow: ${tab.hover.boxShadow};\n  }\n`;\n\nexport type TabProps = BaseComponentPropsWithChildren<\n  HTMLButtonElement,\n  {\n    /**Spesifiserer om fanen er aktiv. */\n    active?: boolean;\n    /** Ikon. */\n    icon?: SvgIcon;\n    /** Spesifiserer om `<Tab />` skal ha fokus. **OBS!** settes automatisk av forelder.*/\n    focus?: boolean;\n    /**  Callback som setter fokus. **OBS!** settes automatisk av forelder.*/\n    setFocus?: Dispatch<SetStateAction<number>>;\n    /** Indeksen til `<Tab />`. **OBS!** settes automatisk av forelder.*/\n    index?: number;\n  } & Pick<ButtonHTMLAttributes<HTMLButtonElement>, 'onClick' | 'onKeyDown'>,\n  Omit<ButtonHTMLAttributes<HTMLButtonElement>, 'onClick' | 'onKeyDown'>\n>;\n\nexport const Tab = forwardRef<HTMLButtonElement, TabProps>((props, ref) => {\n  const {\n    active = false,\n    icon,\n    children,\n    focus,\n    setFocus,\n    index,\n    onClick,\n    onKeyDown,\n    id,\n    className,\n    htmlProps,\n    ...rest\n  } = props;\n\n  const itemRef = useRef<HTMLAnchorElement | HTMLButtonElement>(null);\n  const combinedRef = useCombinedRef(ref, itemRef);\n  const { tabPanelsRef, setHasTabFocus, tabContentDirection } =\n    useTabsContext();\n\n  useEffect(() => {\n    if (focus) {\n      itemRef.current?.focus();\n      setHasTabFocus(true);\n    }\n  }, [focus]);\n\n  useOnKeyDown('Tab', () => {\n    setHasTabFocus(false);\n    tabPanelsRef?.current?.focus();\n  });\n\n  const handleSelect = useCallback(() => {\n    if (setFocus && index) {\n      setFocus(index);\n    }\n  }, [index, setFocus]);\n\n  const handleOnClick = (e: MouseEvent<HTMLButtonElement>) => {\n    handleSelect();\n    onClick && onClick(e);\n  };\n\n  const handleOnKeyDown = (\n    e: KeyboardEvent<HTMLAnchorElement> & KeyboardEvent<HTMLButtonElement>,\n  ) => {\n    handleSelect();\n    onKeyDown && onKeyDown(e);\n  };\n\n  const buttonProps = {\n    ...getBaseHTMLProps(id, className, htmlProps, rest),\n    ref: combinedRef,\n    'aria-selected': active,\n    role: 'tab',\n    active,\n    direction: tabContentDirection,\n    onClick: handleOnClick,\n    onKeyDown: handleOnKeyDown,\n    tabIndex: focus ? 0 : -1,\n  };\n  return (\n    <Button {...buttonProps}>\n      {icon && <Icon icon={icon} iconSize=\"inherit\" />}\n      <span>{children}</span>\n    </Button>\n  );\n});\n\nTab.displayName = 'Tab';\n","import {\n  forwardRef,\n  HTMLAttributes,\n  Children,\n  isValidElement,\n  cloneElement,\n  FocusEvent,\n  ReactElement,\n} from 'react';\nimport styled from 'styled-components';\nimport {\n  useCombinedRef,\n  useOnClickOutside,\n  useOnKeyDown,\n  useRoveFocus,\n} from '@norges-domstoler/dds-core';\nimport {\n  focusVisibleTransitionValue,\n  focusVisible,\n} from '@norges-domstoler/dds-form';\n\nimport { tabsTokens as tokens } from './Tabs.tokens';\nimport { useTabsContext } from './Tabs.context';\nimport { scrollbarStyling } from '../ScrollableContainer';\n\nconst { tabList } = tokens;\n\nconst TabRow = styled.div`\n  border-bottom: ${tabList.borderBottom};\n  display: grid;\n  grid-auto-flow: column;\n  grid-auto-columns: 1fr;\n  overflow-x: auto;\n  ${scrollbarStyling.webkit}\n  ${scrollbarStyling.firefox}\n  scroll-snap-type: x mandatory;\n  @media (prefers-reduced-motion: no-preference) {\n    scroll-behavior: smooth;\n    transition: ${focusVisibleTransitionValue};\n  }\n  &:focus-visible {\n    ${focusVisible}\n  }\n  &:focus-visible button {\n    outline: none;\n  }\n`;\n\nexport type TabListProps = HTMLAttributes<HTMLDivElement>;\n\nexport const TabList = forwardRef<HTMLDivElement, TabListProps>(\n  ({ children, id, onFocus, ...rest }, ref) => {\n    const {\n      activeTab,\n      tabsId,\n      handleTabChange,\n      tabListRef,\n      hasTabFocus,\n      tabPanelsRef,\n      setHasTabFocus,\n    } = useTabsContext();\n\n    const uniqueId = id ?? `${tabsId}-tablist`;\n    const childrenArray = Children.toArray(children).length;\n    const [focus, setFocus] = useRoveFocus(childrenArray, !hasTabFocus, 'row');\n    const combinedRef = useCombinedRef(ref, tabListRef);\n\n    const tabListChildren = Children.map(children, (child, index) => {\n      return (\n        isValidElement(child) &&\n        cloneElement(child as ReactElement, {\n          id: `${tabsId}-tab-${index}`,\n          'aria-controls': `${tabsId}-panel-${index}`,\n          active: activeTab === index,\n          index,\n          focus: focus === index && hasTabFocus,\n          setFocus,\n          onClick: () => handleTabChange(index),\n        })\n      );\n    });\n\n    useOnKeyDown('Tab', () => {\n      setHasTabFocus(false);\n      tabPanelsRef?.current?.focus();\n    });\n\n    useOnClickOutside((tabListRef?.current as HTMLElement) || null, () => {\n      setHasTabFocus(false);\n    });\n\n    const handleOnFocus = (event: FocusEvent<HTMLDivElement, Element>) => {\n      setHasTabFocus(true);\n      onFocus && onFocus(event);\n    };\n\n    const tabListProps = {\n      ...rest,\n      ref: combinedRef,\n      role: 'tablist',\n      'aria-label': 'Bruk venste og h첩yre piltast for 책 bla',\n      id: uniqueId,\n      tabIndex: 0,\n      onFocus: handleOnFocus,\n    };\n\n    return <TabRow {...tabListProps}>{tabListChildren}</TabRow>;\n  },\n);\n\nTabList.displayName = 'TabList';\n","import { forwardRef } from 'react';\nimport styled, { css } from 'styled-components';\nimport {\n  BaseComponentPropsWithChildren,\n  getBaseHTMLProps,\n} from '@norges-domstoler/dds-core';\nimport {\n  focusVisibleTransitionValue,\n  focusVisible,\n} from '@norges-domstoler/dds-form';\n\nimport { tabsTokens as tokens } from './Tabs.tokens';\n\nconst { panel } = tokens;\n\ntype PanelProps = {\n  active: boolean;\n};\n\nconst Panel = styled.div<PanelProps>`\n  padding: ${panel.padding};\n  @media (prefers-reduced-motion: no-preference) {\n    transition: ${focusVisibleTransitionValue};\n  }\n\n  ${({ active }) =>\n    !active &&\n    css`\n      display: none;\n    `}\n  &:focus-visible {\n    ${focusVisible}\n  }\n`;\n\nexport type TabPanelProps = BaseComponentPropsWithChildren<\n  HTMLDivElement,\n  {\n    /** Spesifiserer om panelet skal vises basert p책 aktiv fane. */\n    active?: boolean;\n  }\n>;\n\nexport const TabPanel = forwardRef<HTMLDivElement, TabPanelProps>(\n  ({ active = false, children, id, className, htmlProps, ...rest }, ref) => {\n    const panelProps = {\n      ...getBaseHTMLProps(id, className, htmlProps, rest),\n      ref,\n      tabIndex: 0,\n      role: 'tabpanel',\n      active,\n    };\n    return <Panel {...panelProps}>{children}</Panel>;\n  },\n);\n\nTabPanel.displayName = 'TabPanel';\n","import {\n  forwardRef,\n  HTMLAttributes,\n  Children,\n  cloneElement,\n  isValidElement,\n  ReactElement,\n} from 'react';\nimport { useCombinedRef } from '@norges-domstoler/dds-core';\nimport { useTabsContext } from './Tabs.context';\n\nexport type TabPanelsProps = HTMLAttributes<HTMLDivElement>;\n\nexport const TabPanels = forwardRef<HTMLDivElement, TabPanelsProps>(\n  ({ children, ...rest }, ref) => {\n    const { activeTab, tabsId, tabPanelsRef } = useTabsContext();\n    const combinedRef = useCombinedRef(ref, tabPanelsRef);\n\n    const panelChildren = Children.map(children, (child, index) => {\n      const active = index === activeTab;\n      return (\n        isValidElement(child) &&\n        cloneElement(child as ReactElement, {\n          id: `${tabsId}-panel-${index}`,\n          'aria-labelledby': `${tabsId}-tab-${index}`,\n          active,\n          'aria-expanded': active,\n        })\n      );\n    });\n\n    return (\n      <div ref={combinedRef} {...rest}>\n        {panelChildren}\n      </div>\n    );\n  },\n);\n\nTabPanels.displayName = 'TabPanels';\n"],"names":["TabsContext","createContext","useTabsContext","useContext","Container","styled","width","css","Tabs","forwardRef","props","ref","id","activeTab","onChange","tabContentDirection","children","className","htmlProps","rest","generatedId","useId","uniqueId","thisActiveTab","setActiveTab","useState","hasTabFocus","setHasTabFocus","tabListRef","useRef","tabPanelsRef","handleTabChange","index","useEffect","containerProps","getBaseHTMLProps","jsx","border","spacing","colors","ddsBaseTokens","tabList","tab","panel","tabsTokens","tokens","Button","normalizeButton","removeButtonStyling","getFontStyling","defaultTypographyType","focusVisibleTransitionValue","direction","active","focusVisible","Tab","icon","focus","setFocus","onClick","onKeyDown","itemRef","combinedRef","useCombinedRef","_a","useOnKeyDown","handleSelect","useCallback","handleOnClick","e","handleOnKeyDown","buttonProps","jsxs","Icon","TabRow","scrollbarStyling","TabList","onFocus","tabsId","childrenArray","Children","useRoveFocus","tabListChildren","child","isValidElement","cloneElement","useOnClickOutside","tabListProps","event","Panel","TabPanel","panelProps","TabPanels","panelChildren"],"mappings":"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"}