{"version":3,"file":"Select-ab4f17d5.js","sources":["../../../../packages/components/src/components/Select/Select.tokens.tsx","../../../../packages/components/src/components/Select/Select.styles.ts","../../../../packages/components/src/components/Select/Select.tsx"],"sourcesContent":["import {\n  ddsBaseTokens,\n  ddsReferenceTokens,\n} from '@norges-domstoler/dds-design-tokens';\nimport {\n  InputSize,\n  InputTypographyTypes,\n  inputTypographyTypes,\n} from '@norges-domstoler/dds-form';\nimport { StaticTypographyType } from '@norges-domstoler/dds-typography';\n\nconst { colors, spacing, borderRadius, border } = ddsBaseTokens;\n\nconst { textDefault } = ddsReferenceTokens;\n\nconst placeholderTypographyTypes: { [k in InputSize]: StaticTypographyType } = {\n  medium: 'supportingStylePlaceholderText01',\n  small: 'supportingStylePlaceholderText02',\n  tiny: 'supportingStylePlaceholderText03',\n};\n\nconst multiValueLabelTypographyTypes: {\n  [k in InputSize]: StaticTypographyType;\n} = {\n  medium: 'bodySans01',\n  small: 'bodySans01',\n  tiny: 'supportingStyleTiny01',\n};\n\nexport const typographyTypes: {\n  control: InputTypographyTypes;\n  option: InputTypographyTypes;\n  placeholder: { [k in InputSize]: StaticTypographyType };\n  noOptionsMessage: { [k in InputSize]: StaticTypographyType };\n  groupHeading: StaticTypographyType;\n  multiValueLabel: { [k in InputSize]: StaticTypographyType };\n} = {\n  control: inputTypographyTypes,\n  option: inputTypographyTypes,\n  placeholder: placeholderTypographyTypes,\n  noOptionsMessage: placeholderTypographyTypes,\n  groupHeading: 'supportingStyleHelperText01',\n  multiValueLabel: multiValueLabelTypographyTypes,\n};\n\nconst control = {\n  borderRadius: borderRadius.RadiiDdsBorderRadius1Radius,\n  border: `${border.BordersDdsBorderStyleLightStrokeWeight} solid`,\n  borderColor: colors.DdsColorNeutralsGray5,\n  backgroundColor: colors.DdsColorNeutralsWhite,\n  color: colors.DdsColorNeutralsGray9,\n  disabled: {\n    backgroundColor: colors.DdsColorNeutralsGray1,\n    borderColor: colors.DdsColorNeutralsGray5,\n  },\n  readOnly: {\n    borderColor: 'transparent',\n    backgroundColor: 'transparent',\n  },\n  isMulti: {\n    sizes: {\n      medium: {\n        padding: `${spacing.SizesDdsSpacingLocalX075} ${spacing.SizesDdsSpacingLocalX05} ${spacing.SizesDdsSpacingLocalX075} ${spacing.SizesDdsSpacingLocalX075}`,\n      },\n      small: {\n        padding: `${spacing.SizesDdsSpacingLocalX05} ${spacing.SizesDdsSpacingLocalX05} ${spacing.SizesDdsSpacingLocalX05} ${spacing.SizesDdsSpacingLocalX075}`,\n      },\n      tiny: {\n        padding: `${spacing.SizesDdsSpacingLocalX025} ${spacing.SizesDdsSpacingLocalX05}`,\n      },\n    },\n  },\n  sizes: {\n    medium: {\n      padding: `${spacing.SizesDdsSpacingLocalX075} ${spacing.SizesDdsSpacingLocalX05} ${spacing.SizesDdsSpacingLocalX075} ${spacing.SizesDdsSpacingLocalX075}`,\n    },\n    small: {\n      padding: `${spacing.SizesDdsSpacingLocalX05} ${spacing.SizesDdsSpacingLocalX05} ${spacing.SizesDdsSpacingLocalX05} ${spacing.SizesDdsSpacingLocalX075}`,\n    },\n    tiny: {\n      padding: `${spacing.SizesDdsSpacingLocalX025} ${spacing.SizesDdsSpacingLocalX05} ${spacing.SizesDdsSpacingLocalX025} ${spacing.SizesDdsSpacingLocalX05}`,\n    },\n  },\n};\n\nconst placeholder = {\n  color: colors.DdsColorNeutralsGray6,\n};\n\nconst dropdownIndicator = {\n  base: {\n    color: colors.DdsColorNeutralsGray6,\n  },\n  hover: {\n    color: colors.DdsColorInteractiveBase,\n  },\n  readOnly: {\n    color: 'transparent',\n  },\n};\n\nconst clearIndicator = {\n  base: {\n    color: colors.DdsColorNeutralsGray6,\n  },\n  hover: { color: colors.DdsColorInteractiveBase },\n};\n\nconst loadingIndicator = {\n  color: colors.DdsColorNeutralsGray6,\n};\n\nconst menu = {\n  border: '1px solid',\n  borderColor: colors.DdsColorInteractiveBase,\n  backgroundColor: colors.DdsColorNeutralsWhite,\n  borderRadius: borderRadius.RadiiDdsBorderRadius1Radius,\n  marginTop: spacing.SizesDdsSpacingLocalX025,\n  marginBottom: spacing.SizesDdsSpacingLocalX025,\n};\n\nconst groupHeading = {\n  color: colors.DdsColorNeutralsGray7,\n  padding: `${spacing.SizesDdsSpacingLocalX05}  ${spacing.SizesDdsSpacingLocalX075} ${spacing.SizesDdsSpacingLocalX0125} ${spacing.SizesDdsSpacingLocalX075}`,\n};\n\nconst option = {\n  base: {\n    gap: spacing.SizesDdsSpacingLocalX05,\n    padding: `${spacing.SizesDdsSpacingLocalX075}`,\n    backgroundColor: colors.DdsColorNeutralsWhite,\n  },\n  hover: {\n    color: textDefault.textColor,\n    backgroundColor: colors.DdsColorInteractiveLightest,\n  },\n  focus: {\n    color: textDefault.textColor,\n    backgroundColor: colors.DdsColorInteractiveLightest,\n  },\n  selected: {\n    backgroundColor: colors.DdsColorNeutralsWhite,\n  },\n};\n\nconst noOptionsMessage = {\n  padding: `${spacing.SizesDdsSpacingLocalX05} ${spacing.SizesDdsSpacingLocalX1}`,\n  color: colors.DdsColorNeutralsGray6,\n};\n\nconst multiValue = {\n  borderRadius: borderRadius.RadiiDdsBorderRadius1Radius,\n  backgroundColor: colors.DdsColorNeutralsGray2,\n};\n\nconst multiValueLabel = {\n  padding: `0 ${spacing.SizesDdsSpacingLocalX025}`,\n  color: colors.DdsColorNeutralsGray9,\n};\n\nconst multiValueRemove = {\n  base: {\n    color: colors.DdsColorNeutralsGray9,\n    padding: `0 ${spacing.SizesDdsSpacingLocalX025}`,\n    borderTopRightRadius: borderRadius.RadiiDdsBorderRadius1Radius,\n    borderBottomRightRadius: borderRadius.RadiiDdsBorderRadius1Radius,\n  },\n  hover: {\n    color: colors.DdsColorNeutralsWhite,\n    backgroundColor: colors.DdsColorInteractiveBase,\n    boxShadow: `inset 0 0 0 1px ${colors.DdsColorNeutralsGray9}`,\n  },\n};\n\nconst valueContainer = {\n  isMulti: {\n    gap: spacing.SizesDdsSpacingLocalX025,\n  },\n};\n\nconst icon = {\n  marginRight: spacing.SizesDdsSpacingLocalX05,\n};\n\nexport const selectTokens = {\n  control,\n  dropdownIndicator,\n  placeholder,\n  menu,\n  groupHeading,\n  option,\n  valueContainer,\n  multiValue,\n  multiValueLabel,\n  multiValueRemove,\n  noOptionsMessage,\n  clearIndicator,\n  loadingIndicator,\n  icon,\n};\n","import { GroupBase, StylesConfig } from 'react-select';\nimport styled, { css } from 'styled-components';\nimport { selection } from '@norges-domstoler/dds-core';\nimport { scrollbarStyling } from '../ScrollableContainer';\nimport { selectTokens as tokens, typographyTypes } from './Select.tokens';\nimport { Property } from 'csstype';\nimport { Icon } from '@norges-domstoler/dds-icons';\nimport { getFontStyling } from '@norges-domstoler/dds-typography';\nimport {\n  InputSize,\n  dangerInputfield,\n  hoverDangerInputfield,\n  focusInputfield,\n  hoverInputfield,\n} from '@norges-domstoler/dds-form';\n\nconst {\n  control,\n  menu,\n  groupHeading,\n  option,\n  dropdownIndicator,\n  loadingIndicator,\n  clearIndicator,\n  multiValue,\n  multiValueLabel,\n  multiValueRemove,\n  noOptionsMessage,\n  placeholder,\n  icon,\n  valueContainer,\n} = tokens;\n\nexport const prefix = 'dds-select';\n\nfunction getContainerControlPadding(\n  componentSize: InputSize,\n  isMulti: boolean | undefined\n) {\n  return isMulti\n    ? control.isMulti.sizes[componentSize].padding\n    : control.sizes[componentSize].padding;\n}\n\ntype StyledContainerProps = {\n  errorMessage?: string;\n  isDisabled?: boolean;\n  readOnly?: boolean;\n  width?: Property.Width;\n  componentSize: InputSize;\n  isMulti?: boolean;\n};\n\nexport const Container = styled.div<StyledContainerProps>`\n  margin: 0;\n  width: ${({ width }) => width};\n  position: relative;\n\n  *::selection {\n    ${selection}\n  }\n\n  ${({ componentSize, isMulti }) => css`\n    .${prefix}__control {\n      padding: ${getContainerControlPadding(componentSize, isMulti)};\n      ${getFontStyling(typographyTypes.control[componentSize], true)}\n    }\n    .${prefix}__option {\n      ${getFontStyling(typographyTypes.option[componentSize], true)}\n    }\n    .${prefix}__placeholder {\n      ${getFontStyling(typographyTypes.placeholder[componentSize])}\n    }\n    .${prefix}__menu-notice--no-options {\n      ${getFontStyling(typographyTypes.noOptionsMessage[componentSize])}\n    }\n  `}\n\n  ${({ errorMessage }) =>\n    errorMessage &&\n    css`\n      .${prefix}__control {\n        ${dangerInputfield}\n      }\n      .${prefix}__control:hover {\n        ${hoverDangerInputfield}\n      }\n      .${prefix}__control:focus-within {\n        ${focusInputfield}\n      }\n    `}\n\n  &:hover\n    .${prefix}__dropdown-indicator,\n    &:focus-within\n    .${prefix}__dropdown-indicator {\n    color: ${dropdownIndicator.hover.color};\n  }\n\n  ${({ isDisabled, readOnly }) =>\n    readOnly\n      ? css`\n          .${prefix}__control {\n            border-color: ${control.readOnly.borderColor};\n            background-color: ${control.readOnly.backgroundColor};\n          }\n          .${prefix}__dropdown-indicator,\n            &:hover\n            .${prefix}__dropdown-indicator {\n            color: ${dropdownIndicator.readOnly.color};\n          }\n        `\n      : isDisabled\n      ? css`\n          cursor: not-allowed;\n          .${prefix}__control {\n            border-color: ${control.disabled.borderColor};\n            background-color: ${control.disabled.backgroundColor};\n          }\n          &:hover .${prefix}__dropdown-indicator {\n            color: ${dropdownIndicator.base.color};\n          }\n        `\n      : ''}\n`;\n\nexport const InnerSingleValue = styled.div`\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  box-sizing: border-box;\n  max-width: 100%;\n`;\n\nexport const StyledIcon = styled(Icon)`\n  margin-right: ${icon.marginRight};\n`;\n\nexport const getCustomStyles = <TOption>(\n  size: InputSize\n): Partial<StylesConfig<TOption, boolean, GroupBase<TOption>>> => ({\n  control: () => ({\n    position: 'relative',\n    display: 'flex',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    borderRadius: control.borderRadius,\n    border: control.border,\n    borderColor: control.borderColor,\n    backgroundColor: control.backgroundColor,\n    transition: 'box-shadow 0.2s, border-color 0.2s',\n\n    '&:hover': {\n      ...hoverInputfield,\n    },\n    '&:focus-within': {\n      ...focusInputfield,\n    },\n  }),\n  placeholder: provided => ({\n    ...provided,\n    color: placeholder.color,\n    margin: 0,\n  }),\n  input: provided => ({\n    ...provided,\n    margin: 0,\n    padding: 0,\n  }),\n  indicatorSeparator: () => ({}),\n  dropdownIndicator: (provided, state) => ({\n    display: 'inline-flex',\n    transform: state.selectProps.menuIsOpen ? 'rotate(180deg)' : '',\n    '@media (prefers-reduced-motion: no-preference)': {\n      transition: 'color 0.2s, transform 0.2s',\n    },\n    padding: 0,\n    color: dropdownIndicator.base.color,\n  }),\n\n  valueContainer: (provided, state) => ({\n    ...provided,\n    ...(state.selectProps.isMulti && {\n      gap: valueContainer.isMulti.gap,\n    }),\n    padding: 0,\n  }),\n\n  singleValue: () => ({\n    gridArea: '1/1/2/3',\n    overflow: 'hidden',\n    boxSizing: 'border-box',\n  }),\n  multiValue: () => ({\n    boxSizing: 'border-box',\n    minWidth: 0,\n    display: 'flex',\n    borderRadius: multiValue.borderRadius,\n    backgroundColor: tokens.multiValue.backgroundColor,\n  }),\n  multiValueLabel: provided => ({\n    ...provided,\n    padding: multiValueLabel.padding,\n    ...getFontStyling(typographyTypes.multiValueLabel[size]),\n    color: multiValueLabel.color,\n  }),\n  multiValueRemove: (provided, state) =>\n    state.selectProps.isDisabled\n      ? {\n          display: 'none',\n        }\n      : {\n          boxSizing: 'border-box',\n          display: 'flex',\n          alignItems: 'center',\n          '@media (prefers-reduced-motion: no-preference)': {\n            transition: 'color 0.2s, background-color 0.2s, box-shadow 0.2s',\n          },\n          color: multiValueRemove.base.color,\n          padding: multiValueRemove.base.padding,\n          borderTopRightRadius: multiValueRemove.base.borderTopRightRadius,\n          borderBottomRightRadius:\n            multiValueRemove.base.borderBottomRightRadius,\n          '&:hover': {\n            boxShadow: multiValueRemove.hover.boxShadow,\n          },\n        },\n  menu: provided => ({\n    ...provided,\n    zIndex: 100,\n    transition: '0.2s',\n    width: 'calc(100% + 2px)',\n    transform: 'translate(-1px)',\n    boxShadow: ` 0 0 0 1px ${menu.borderColor}`,\n    border: menu.border,\n    borderColor: menu.borderColor,\n    backgroundColor: menu.backgroundColor,\n    borderRadius: menu.borderRadius,\n    marginTop: menu.marginTop,\n    marginBottom: menu.marginBottom,\n  }),\n  group: () => ({\n    boxSizing: 'border-box',\n  }),\n  groupHeading: () => ({\n    ...getFontStyling(typographyTypes.groupHeading),\n    color: groupHeading.color,\n    padding: groupHeading.padding,\n  }),\n  menuList: () => ({\n    maxHeight: '300px',\n    overflowY: 'auto',\n    position: 'relative',\n    boxSizing: 'border-box',\n    ...scrollbarStyling.webkit,\n    ...scrollbarStyling.firefox,\n  }),\n  option: (provided, state) => ({\n    ...provided,\n    cursor: 'pointer',\n    display: 'flex',\n    alignItems: 'center',\n    gap: option.base.gap,\n    padding: option.base.padding,\n    backgroundColor: option.base.backgroundColor,\n    '@media (prefers-reduced-motion: no-preference)': {\n      transition: 'color 0.2s, background-color 0.2s',\n    },\n    '&:hover': {\n      color: option.hover.color,\n      backgroundColor: option.hover.backgroundColor,\n    },\n    ...(state.isSelected && {\n      backgroundColor: option.selected.backgroundColor,\n    }),\n    ...(state.isFocused && {\n      color: option.focus.color,\n      backgroundColor: option.focus.backgroundColor,\n    }),\n  }),\n  noOptionsMessage: () => ({\n    padding: noOptionsMessage.padding,\n    color: noOptionsMessage.color,\n  }),\n  clearIndicator: () => ({\n    display: 'inline-flex',\n    color: clearIndicator.base.color,\n    '@media (prefers-reduced-motion: no-preference)': {\n      transition: 'color 0.2s',\n    },\n    '&:hover': {\n      color: clearIndicator.hover.color,\n    },\n  }),\n  loadingIndicator: provided => ({\n    ...provided,\n    padding: 0,\n    color: loadingIndicator.color,\n  }),\n});\n","import { Property } from 'csstype';\nimport React, { HTMLAttributes, ReactNode, useId } from 'react';\nimport {\n  ClearIndicatorProps,\n  components,\n  DropdownIndicatorProps,\n  default as ReactSelect,\n  GroupBase,\n  InputProps,\n  NoticeProps,\n  OptionProps,\n  Props as ReactSelectProps,\n  SelectInstance,\n  SingleValueProps,\n  MultiValueRemoveProps,\n  ControlProps,\n} from 'react-select';\nimport {\n  CheckIcon,\n  ChevronDownIcon,\n  CloseSmallIcon,\n} from '@norges-domstoler/dds-icons';\nimport { WithRequiredIf } from '@norges-domstoler/dds-core';\nimport {\n  derivativeIdGenerator,\n  searchFilter,\n  spaceSeparatedIdListGenerator,\n} from '@norges-domstoler/dds-core';\nimport { Icon } from '@norges-domstoler/dds-icons';\nimport {\n  Container,\n  getCustomStyles,\n  InnerSingleValue,\n  prefix,\n  StyledIcon,\n} from './Select.styles';\nimport { Label } from '@norges-domstoler/dds-typography';\nimport { SvgIcon } from '@norges-domstoler/dds-icons';\nimport { getFormInputIconSize } from '../../utils/icon';\nimport { renderInputMessage } from '../../utils/renderInputMessage';\nimport { InputSize } from '@norges-domstoler/dds-form';\n\nconst {\n  Option,\n  NoOptionsMessage,\n  Input,\n  SingleValue,\n  ClearIndicator,\n  DropdownIndicator,\n  MultiValueRemove,\n  Control,\n} = components;\n\nexport type SelectOption<TValue = unknown> = {\n  label: string | number;\n  value: TValue;\n};\n\nexport const createSelectOptions = <TValue extends string | number>(\n  ...args: TValue[]\n): SelectOption<TValue>[] => args.map(v => ({ label: v, value: v }));\n\nconst DDSOption = <TValue, IsMulti extends boolean>(\n  props: OptionProps<TValue, IsMulti>,\n  componentSize: InputSize\n) => (\n  <Option {...props}>\n    {props.isSelected && (\n      <Icon icon={CheckIcon} iconSize={getFormInputIconSize(componentSize)} />\n    )}\n    {props.children}\n  </Option>\n);\n\nconst CustomOption = <TValue, IsMulti extends boolean>(\n  props: OptionProps<TValue, IsMulti>,\n  Element: (props: OptionProps<TValue, IsMulti>) => JSX.Element\n) => (\n  <Option {...props}>\n    <Element {...props} />\n  </Option>\n);\n\nconst CustomSingleValue = <TOption, IsMulti extends boolean>(\n  props: SingleValueProps<TOption, IsMulti, GroupBase<TOption>>,\n  id?: string,\n  Element?: (\n    props: SingleValueProps<TOption, IsMulti, GroupBase<TOption>>\n  ) => JSX.Element\n) => (\n  <SingleValue {...props}>\n    <InnerSingleValue id={id}>\n      {Element ? <Element {...props} /> : props.children}\n    </InnerSingleValue>\n  </SingleValue>\n);\n\nconst DDSNoOptionsMessage = <TValue, IsMulti extends boolean>(\n  props: NoticeProps<TValue, IsMulti>\n) => <NoOptionsMessage {...props}>Ingen treff</NoOptionsMessage>;\n\nconst DDSClearIndicator = <TValue, IsMulti extends boolean>(\n  props: ClearIndicatorProps<TValue, IsMulti>,\n  size: InputSize\n) => (\n  <ClearIndicator {...props}>\n    <Icon icon={CloseSmallIcon} iconSize={getFormInputIconSize(size)} />\n  </ClearIndicator>\n);\n\nconst DDSMultiValueRemove = <TValue, IsMulti extends boolean>(\n  props: MultiValueRemoveProps<TValue, IsMulti>\n) => (\n  <MultiValueRemove {...props}>\n    <Icon icon={CloseSmallIcon} iconSize=\"small\" />\n  </MultiValueRemove>\n);\n\nconst DDSDropdownIndicator = <TValue, IsMulti extends boolean>(\n  props: DropdownIndicatorProps<TValue, IsMulti>,\n  size: InputSize\n) => (\n  <DropdownIndicator {...props}>\n    <Icon icon={ChevronDownIcon} iconSize={getFormInputIconSize(size)} />\n  </DropdownIndicator>\n);\n\nconst DDSInput = <TOption, IsMulti extends boolean>(\n  props: InputProps<TOption, IsMulti>,\n  ariaInvalid: boolean,\n  ariaDescribedby?: string\n) => (\n  <Input\n    {...props}\n    aria-invalid={ariaInvalid}\n    aria-describedby={ariaDescribedby}\n  />\n);\n\nconst DDSControl = <TValue, IsMulti extends boolean>(\n  props: ControlProps<TValue, IsMulti>,\n  componentSize: InputSize,\n  icon?: SvgIcon\n) => (\n  <Control {...props}>\n    {icon && (\n      <StyledIcon icon={icon} iconSize={getFormInputIconSize(componentSize)} />\n    )}\n    {props.children}\n  </Control>\n);\n\nconst defaultWidth: Property.Width<string> = '320px';\n\nconst getPlaceholder = (\n  placeholder?: ReactNode,\n  isMulti?: boolean\n): ReactNode =>\n  placeholder\n    ? placeholder\n    : isMulti\n    ? '-- Velg en eller flere --'\n    : '-- Velg fra listen --';\n\ntype WrappedReactSelectProps<\n  TOption extends Record<string, unknown>,\n  IsMulti extends boolean,\n  Group extends GroupBase<TOption>\n> = WithRequiredIf<\n  TOption extends SelectOption ? false : true,\n  ReactSelectProps<TOption, IsMulti, Group>,\n  'getOptionLabel' | 'getOptionValue'\n>;\n\nexport type SelectProps<\n  TOption extends Record<string, unknown>,\n  IsMulti extends boolean\n> = {\n  /**Ledetekst for nedtrekkslisten. */\n  label?: string;\n  /**Størrelsen på komponenten. */\n  componentSize?: InputSize;\n  /**Ikonet som vises i komponenten. */\n  icon?: SvgIcon;\n  /**Nedtrekkslisten blir disabled og får readOnly styling. */\n  readOnly?: boolean;\n  /**Meldingen som vises ved valideringsfeil. */\n  errorMessage?: string;\n  /**Hjelpetekst. */\n  tip?: string;\n  /**Custom bredde ved behov. */\n  width?: Property.Width<string>;\n  /** CSS klassenavn. */\n  className?: string;\n  /** Inline styling. */\n  style?: React.CSSProperties;\n  customOptionElement?: (\n    props: OptionProps<TOption, IsMulti, GroupBase<TOption>>\n  ) => JSX.Element;\n  customSingleValueElement?: (\n    props: SingleValueProps<TOption, IsMulti, GroupBase<TOption>>\n  ) => JSX.Element;\n} & Pick<HTMLAttributes<HTMLInputElement>, 'aria-required'> &\n  WrappedReactSelectProps<TOption, IsMulti, GroupBase<TOption>>;\n\ntype ForwardRefType<TOption, IsMulti extends boolean> = React.ForwardedRef<\n  SelectInstance<TOption, IsMulti, GroupBase<TOption>>\n>;\n\nconst SelectInner = <\n  TOption extends Record<string, unknown>,\n  IsMulti extends boolean = false\n>(\n  props: SelectProps<TOption, IsMulti>,\n  ref: ForwardRefType<TOption, IsMulti>\n) => {\n  const {\n    id,\n    label,\n    componentSize = 'medium',\n    errorMessage,\n    tip,\n    required,\n    'aria-required': ariaRequired,\n    readOnly,\n    options,\n    isMulti,\n    value,\n    icon,\n    defaultValue,\n    width = defaultWidth,\n    closeMenuOnSelect,\n    className,\n    style,\n    isDisabled,\n    isClearable = true,\n    placeholder,\n    customOptionElement,\n    customSingleValueElement,\n    ...rest\n  } = props;\n\n  const generatedId = useId();\n  const uniqueId = id ?? `${generatedId}-select`;\n\n  const singleValueId = !isMulti ? `${uniqueId}-singleValue` : undefined;\n  const hasLabel = !!label;\n  const hasErrorMessage = !!errorMessage;\n  const showRequiredStyling = !!(required || ariaRequired);\n\n  const tipId = derivativeIdGenerator(uniqueId, 'tip');\n  const errorMessageId = derivativeIdGenerator(uniqueId, 'errorMessage');\n\n  const containerProps = {\n    width,\n    componentSize,\n    errorMessage,\n    isDisabled,\n    readOnly,\n    isMulti,\n    className,\n    style,\n  };\n\n  const reactSelectProps: ReactSelectProps<\n    TOption,\n    IsMulti,\n    GroupBase<TOption>\n  > = {\n    options,\n    value,\n    defaultValue,\n    isDisabled: isDisabled || readOnly,\n    isClearable,\n    placeholder: getPlaceholder(placeholder, isMulti),\n    closeMenuOnSelect: closeMenuOnSelect\n      ? closeMenuOnSelect\n      : isMulti\n      ? false\n      : true,\n    isMulti,\n    inputId: uniqueId,\n    name: uniqueId,\n    classNamePrefix: prefix,\n    styles: getCustomStyles<TOption>(componentSize),\n    filterOption: (option, inputValue) => {\n      const { label } = option;\n      return searchFilter(label, inputValue) || inputValue === '';\n    },\n    components: {\n      Option: customOptionElement\n        ? props => CustomOption(props, customOptionElement)\n        : props => DDSOption(props, componentSize),\n      NoOptionsMessage: DDSNoOptionsMessage,\n      Input: props =>\n        DDSInput(\n          { ...props, 'aria-required': ariaRequired },\n          hasErrorMessage,\n          spaceSeparatedIdListGenerator([\n            singleValueId,\n            tip ? tipId : undefined,\n            errorMessage ? errorMessageId : undefined,\n          ])\n        ),\n      SingleValue: props =>\n        CustomSingleValue(props, singleValueId, customSingleValueElement),\n      ClearIndicator: props => DDSClearIndicator(props, componentSize),\n      DropdownIndicator: props => DDSDropdownIndicator(props, componentSize),\n      MultiValueRemove: DDSMultiValueRemove,\n      Control: props => DDSControl(props, componentSize, icon),\n    },\n    'aria-invalid': hasErrorMessage ? true : undefined,\n    required,\n    ...rest,\n  };\n\n  return (\n    <Container {...containerProps}>\n      {hasLabel && (\n        <Label htmlFor={uniqueId} showRequiredStyling={showRequiredStyling}>\n          {label}\n        </Label>\n      )}\n      <ReactSelect {...reactSelectProps} ref={ref} />\n      {renderInputMessage(tip, tipId, errorMessage, errorMessageId)}\n    </Container>\n  );\n};\n\nexport const Select = React.forwardRef(SelectInner) as typeof SelectInner;\n\n// @ts-expect-error TODO fix Select type\nSelect.displayName = 'Select';\n"],"names":["colors","spacing","borderRadius","border","ddsBaseTokens","textDefault","ddsReferenceTokens","placeholderTypographyTypes","multiValueLabelTypographyTypes","typographyTypes","inputTypographyTypes","control","placeholder","dropdownIndicator","clearIndicator","loadingIndicator","menu","groupHeading","option","noOptionsMessage","multiValue","multiValueLabel","multiValueRemove","valueContainer","icon","selectTokens","tokens","prefix","getContainerControlPadding","componentSize","isMulti","Container","styled","width","selection","css","getFontStyling","errorMessage","dangerInputfield","hoverDangerInputfield","focusInputfield","isDisabled","readOnly","InnerSingleValue","StyledIcon","Icon","getCustomStyles","size","hoverInputfield","provided","state","scrollbarStyling","Option","NoOptionsMessage","Input","SingleValue","ClearIndicator","DropdownIndicator","MultiValueRemove","Control","components","createSelectOptions","args","v","DDSOption","props","jsxs","CheckIcon","getFormInputIconSize","CustomOption","Element","jsx","CustomSingleValue","id","DDSNoOptionsMessage","DDSClearIndicator","CloseSmallIcon","DDSMultiValueRemove","DDSDropdownIndicator","ChevronDownIcon","DDSInput","ariaInvalid","ariaDescribedby","DDSControl","defaultWidth","getPlaceholder","SelectInner","ref","label","tip","required","ariaRequired","options","value","defaultValue","closeMenuOnSelect","className","style","isClearable","customOptionElement","customSingleValueElement","rest","generatedId","useId","uniqueId","singleValueId","hasLabel","hasErrorMessage","showRequiredStyling","tipId","derivativeIdGenerator","errorMessageId","containerProps","reactSelectProps","inputValue","searchFilter","spaceSeparatedIdListGenerator","Label","ReactSelect","renderInputMessage","Select","React"],"mappings":"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"}