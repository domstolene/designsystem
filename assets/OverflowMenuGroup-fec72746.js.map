{"version":3,"file":"OverflowMenuGroup-fec72746.js","sources":["../../../../packages/components/src/components/OverflowMenu/OverflowMenuGroup.tsx"],"sourcesContent":["import {\n  useRef,\n  useState,\n  Children as ReactChildren,\n  ReactNode,\n  isValidElement,\n  cloneElement,\n  ReactElement,\n  useId,\n} from 'react';\n\nexport type OverflowMenuGroupProps = {\n  /**Ekstra logikk som kjøres når `<OverflowMenu />` åpnes og lukkes. */\n  onToggle?: () => void;\n  /**Ekstra logikk som kjøres når `<OverflowMenu />` åpnes. */\n  onOpen?: () => void;\n  /**Ekstra logikk som kjøres når `<OverflowMenu />` lukkes. */\n  onClose?: () => void;\n  /**Barn, anchor-elementet som første og `<OverflowMenu />` som andre. */\n  children: ReactNode;\n  /**Custom id for `<OverflowMenu />`. */\n  overflowMenuId?: string;\n};\n\nexport const OverflowMenuGroup = ({\n  children,\n  onClose,\n  onToggle,\n  onOpen,\n  overflowMenuId,\n}: OverflowMenuGroupProps) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const toggle = () => setIsOpen(!isOpen);\n  const close = () => setIsOpen(false);\n  const buttonRef = useRef<HTMLButtonElement>(null);\n\n  const generatedId = useId();\n  const uniqueOverflowMenuId = overflowMenuId ?? `${generatedId}-overflowMenu`;\n\n  const handleClose = () => {\n    onClose && onClose();\n    close();\n  };\n\n  const handleToggle = () => {\n    onOpen && !isOpen && onOpen();\n    onClose && isOpen && onClose();\n    onToggle && onToggle();\n    toggle();\n  };\n\n  const Children = ReactChildren.map(children, (child, childIndex) => {\n    return (\n      isValidElement(child) &&\n      (childIndex === 0\n        ? cloneElement(child as ReactElement, {\n            'aria-haspopup': 'menu',\n            'aria-controls': uniqueOverflowMenuId,\n            'aria-expanded': isOpen,\n            onClick: handleToggle,\n            ref: buttonRef,\n          })\n        : cloneElement(child as ReactElement, {\n            isOpen: isOpen,\n            id: uniqueOverflowMenuId,\n            onClose: handleClose,\n            onToggle: handleToggle,\n            anchorRef: buttonRef,\n          }))\n    );\n  });\n\n  return <>{Children}</>;\n};\n\nOverflowMenuGroup.displayName = 'OverflowMenuGroup';\n"],"names":["OverflowMenuGroup","children","onClose","onToggle","onOpen","overflowMenuId","isOpen","setIsOpen","useState","toggle","close","buttonRef","useRef","generatedId","useId","uniqueOverflowMenuId","handleClose","handleToggle","Children","ReactChildren","child","childIndex","isValidElement","cloneElement","jsx","Fragment"],"mappings":"6FAwBO,MAAAA,EAAA,CAAA,CAA2B,SAAAC,EAChC,QAAAC,EACA,SAAAC,EACA,OAAAC,EACA,eAAAC,CAEF,IAAA,CACE,KAAA,CAAAC,EAAAC,CAAA,EAAAC,EAAA,SAAA,EAAA,EACAC,EAAA,IAAAF,EAAA,CAAAD,CAAA,EACAI,EAAA,IAAAH,EAAA,EAAA,EACAI,EAAAC,SAAA,IAAA,EAEAC,EAAAC,EAAAA,QACAC,EAAAV,GAAA,GAAAQ,CAAA,gBAEAG,EAAA,IAAA,CACEd,GAAAA,EAAA,EACAQ,GAAM,EAGRO,EAAA,IAAA,CACEb,GAAA,CAAAE,GAAAF,IACAF,GAAAI,GAAAJ,IACAC,GAAAA,EAAA,EACAM,GAAO,EAGTS,EAAAC,EAAAA,SAAA,IAAAlB,EAAA,CAAAmB,EAAAC,IACEC,EAAAA,eAAAF,CAAA,IAAAC,IAAA,EAAAE,EAAA,aAAAH,EAAA,CAG0C,gBAAA,OACjB,gBAAAL,EACA,gBAAAT,EACA,QAAAW,EACR,IAAAN,CACJ,CAAA,EAAAY,EAAA,aAAAH,EAAA,CAE6B,OAAAd,EAClC,GAAAS,EACI,QAAAC,EACK,SAAAC,EACC,UAAAN,CACC,CAAA,EACZ,EAIT,OAAAa,EAAAC,EAAA,CAAA,SAAAP,CAAA,CAAA,CACF,EAEAlB,EAAA,YAAA"}