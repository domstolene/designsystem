{"version":3,"file":"Card-6d8bf801.js","sources":["../../../../packages/components/dist/components/Card/Card.tokens.js","../../../../packages/components/dist/components/Card/Card.js"],"sourcesContent":["import { ddsBaseTokens, ddsReferenceTokens } from '@norges-domstoler/dds-design-tokens';\n\nvar colors = ddsBaseTokens.colors,\n  border = ddsBaseTokens.border;\nvar textDefault = ddsReferenceTokens.textDefault;\nvar base = {\n  border: \"\".concat(border.BordersDdsBorderStyleLightStrokeWeight, \" solid\")\n};\nvar cardColors = {\n  filledLight: {\n    backgroundColor: colors.DdsColorPrimaryLightest,\n    borderColor: colors.DdsColorPrimaryLightest,\n    color: textDefault.textColor\n  },\n  filledDark: {\n    backgroundColor: colors.DdsColorPrimaryBase,\n    borderColor: colors.DdsColorPrimaryBase,\n    color: colors.DdsColorNeutralsWhite\n  },\n  strokeDark: {\n    backgroundColor: colors.DdsColorNeutralsWhite,\n    borderColor: border.BordersDdsBorderStyleLightStroke,\n    color: textDefault.textColor\n  },\n  strokeLight: {\n    backgroundColor: colors.DdsColorNeutralsWhite,\n    borderColor: border.BordersDdsBorderStyleLightStroke,\n    color: textDefault.textColor\n  }\n};\nvar cardTokens = {\n  base: base,\n  colors: cardColors\n};\n\nexport { cardTokens };\n","import { __rest } from 'tslib';\nimport { jsx } from 'react/jsx-runtime';\nimport styled, { css } from 'styled-components';\nimport { cardTokens } from './Card.tokens.js';\nimport { selection, getBaseHTMLProps } from '@norges-domstoler/dds-core';\nimport { getFontStyling, defaultTypographyType } from '@norges-domstoler/dds-typography';\nimport { hoverWithBorder, focusVisibleWithBorder } from '@norges-domstoler/dds-form';\n\nvar Container = styled.div.withConfig({\n  displayName: \"Card__Container\",\n  componentId: \"sc-410ao9-0\"\n})([\"border:\", \";\", \";&::selection,*::selection{\", \"}@media (prefers-reduced-motion:no-preference){transition:box-shadow 0.2s,border-color 0.2s;}\", \" \", \"\"], cardTokens.base.border, getFontStyling(defaultTypographyType), selection, function (_ref) {\n  var color = _ref.color;\n  return color && css([\"color:\", \";background-color:\", \";border-color:\", \";\"], cardTokens.colors[color].color, cardTokens.colors[color].backgroundColor, cardTokens.colors[color].borderColor);\n}, function (_ref2) {\n  var cardType = _ref2.cardType;\n  return cardType === 'navigation' ? css([\"text-decoration:none;&:hover{\", \"}&:focus{\", \"}\"], hoverWithBorder, focusVisibleWithBorder) : cardType === 'expandable' ? css([\"width:100%;box-sizing:border-box;&:not(:first-of-type){border-top:none;}\"]) : '';\n});\nvar Card = function Card(props) {\n  var _props$color = props.color,\n    color = _props$color === void 0 ? 'filledLight' : _props$color,\n    cardType = props.cardType,\n    cardRef = props.cardRef,\n    children = props.children,\n    id = props.id,\n    className = props.className,\n    htmlProps = props.htmlProps,\n    rest = __rest(props, [\"color\", \"cardType\", \"cardRef\", \"children\", \"id\", \"className\", \"htmlProps\"]);\n  if (cardType === 'navigation') {\n    var href = props.href,\n      target = props.target;\n    return jsx(Container, Object.assign({}, getBaseHTMLProps(id, className, htmlProps, rest), {\n      cardType: cardType,\n      color: color,\n      as: \"a\",\n      ref: cardRef,\n      href: href,\n      target: target,\n      children: children\n    }));\n  }\n  return jsx(Container, Object.assign({}, getBaseHTMLProps(id, className, htmlProps, rest), {\n    cardType: cardType,\n    color: color,\n    as: \"div\",\n    ref: cardRef,\n    children: children\n  }));\n};\nCard.displayName = 'Card';\n\nexport { Card };\n"],"names":["colors","ddsBaseTokens","border","textDefault","ddsReferenceTokens","base","cardColors","cardTokens","Container","styled","getFontStyling","defaultTypographyType","selection","_ref","color","css","_ref2","cardType","hoverWithBorder","focusVisibleWithBorder","Card","props","_props$color","cardRef","children","id","className","htmlProps","rest","__rest","href","target","jsx","getBaseHTMLProps"],"mappings":"oRAEA,IAAIA,EAASC,EAAc,OACzBC,EAASD,EAAc,OACrBE,EAAcC,EAAmB,YACjCC,EAAO,CACT,OAAQ,GAAG,OAAOH,EAAO,uCAAwC,QAAQ,CAC3E,EACII,EAAa,CACf,YAAa,CACX,gBAAiBN,EAAO,wBACxB,YAAaA,EAAO,wBACpB,MAAOG,EAAY,SACpB,EACD,WAAY,CACV,gBAAiBH,EAAO,oBACxB,YAAaA,EAAO,oBACpB,MAAOA,EAAO,qBACf,EACD,WAAY,CACV,gBAAiBA,EAAO,sBACxB,YAAaE,EAAO,iCACpB,MAAOC,EAAY,SACpB,EACD,YAAa,CACX,gBAAiBH,EAAO,sBACxB,YAAaE,EAAO,iCACpB,MAAOC,EAAY,SACpB,CACH,EACII,EAAa,CACf,KAAMF,EACN,OAAQC,CACV,ECzBIE,EAAYC,EAAO,IAAI,WAAW,CACpC,YAAa,kBACb,YAAa,aACf,CAAC,EAAE,CAAC,UAAW,IAAK,8BAA+B,gGAAiG,IAAK,EAAE,EAAGF,EAAW,KAAK,OAAQG,EAAeC,CAAqB,EAAGC,EAAW,SAAUC,EAAM,CACtP,IAAIC,EAAQD,EAAK,MACjB,OAAOC,GAASC,EAAI,CAAC,SAAU,qBAAsB,iBAAkB,GAAG,EAAGR,EAAW,OAAOO,CAAK,EAAE,MAAOP,EAAW,OAAOO,CAAK,EAAE,gBAAiBP,EAAW,OAAOO,CAAK,EAAE,WAAW,CAC7L,EAAG,SAAUE,EAAO,CAClB,IAAIC,EAAWD,EAAM,SACrB,OAAOC,IAAa,aAAeF,EAAI,CAAC,gCAAiC,YAAa,GAAG,EAAGG,EAAiBC,CAAsB,EAAIF,IAAa,aAAeF,EAAI,CAAC,0EAA0E,CAAC,EAAI,EACzP,CAAC,EACGK,EAAO,SAAcC,EAAO,CAC9B,IAAIC,EAAeD,EAAM,MACvBP,EAAQQ,IAAiB,OAAS,cAAgBA,EAClDL,EAAWI,EAAM,SACjBE,EAAUF,EAAM,QAChBG,EAAWH,EAAM,SACjBI,EAAKJ,EAAM,GACXK,EAAYL,EAAM,UAClBM,EAAYN,EAAM,UAClBO,EAAOC,EAAOR,EAAO,CAAC,QAAS,WAAY,UAAW,WAAY,KAAM,YAAa,WAAW,CAAC,EACnG,GAAIJ,IAAa,aAAc,CAC7B,IAAIa,EAAOT,EAAM,KACfU,EAASV,EAAM,OACjB,OAAOW,EAAIxB,EAAW,OAAO,OAAO,CAAA,EAAIyB,EAAiBR,EAAIC,EAAWC,EAAWC,CAAI,EAAG,CACxF,SAAUX,EACV,MAAOH,EACP,GAAI,IACJ,IAAKS,EACL,KAAMO,EACN,OAAQC,EACR,SAAUP,CACX,CAAA,CAAC,EAEJ,OAAOQ,EAAIxB,EAAW,OAAO,OAAO,CAAA,EAAIyB,EAAiBR,EAAIC,EAAWC,EAAWC,CAAI,EAAG,CACxF,SAAUX,EACV,MAAOH,EACP,GAAI,MACJ,IAAKS,EACL,SAAUC,CACX,CAAA,CAAC,CACJ,EACAJ,EAAK,YAAc"}