{"version":3,"file":"ToggleButton-1b0ebe6d.js","sources":["../../../../packages/components/src/components/ToggleButton/ToggleButton.tokens.tsx","../../../../packages/components/src/components/ToggleButton/ToggleButton.tsx"],"sourcesContent":["import { ddsBaseTokens } from '@norges-domstoler/dds-design-tokens';\n\nimport { buttonTokens, typographyTypes } from '../Button/Button.tokens';\nimport { selectionControlTokens } from '../SelectionControl/SelectionControl.tokens';\n\nconst { colors, spacing } = ddsBaseTokens;\nconst { button } = buttonTokens;\nconst { selectionControl } = selectionControlTokens;\n\nexport const typographyType = typographyTypes.small;\n\nconst toggleButton = {\n  border: button.base.border,\n  backgroundColor: colors.DdsColorNeutralsWhite,\n  color: colors.DdsColorNeutralsGray7,\n  gap: spacing.SizesDdsSpacingLocalX05,\n  borderRadius: button.appearances.rounded.base.borderRadius,\n  padding: button.sizes.small.text.padding,\n  hover: selectionControl.hover.base,\n  checked: {\n    ...selectionControl.checked.base,\n    color: colors.DdsColorNeutralsWhite,\n    hover: selectionControl.checked.hover,\n  },\n};\n\nconst group = {\n  gap: spacing.SizesDdsSpacingLocalX075,\n};\n\nconst container = {\n  gap: spacing.SizesDdsSpacingLocalX05,\n};\n\nexport const toggleButtonTokens = {\n  toggleButton,\n  group,\n  container,\n};\n","import { forwardRef, useId } from 'react';\nimport styled, { css } from 'styled-components';\nimport { Icon } from '@norges-domstoler/dds-icons';\nimport { selection, getBaseHTMLProps } from '@norges-domstoler/dds-core';\nimport { getFontStyling } from '@norges-domstoler/dds-typography';\nimport {\n  focusVisibleTransitionValue,\n  HiddenInput,\n  focusVisible,\n} from '@norges-domstoler/dds-form';\n\nimport {\n  toggleButtonTokens as tokens,\n  typographyType,\n} from './ToggleButton.tokens';\nimport { ToggleButtonProps } from './ToggleButton.types';\n\nconst { toggleButton } = tokens;\n\ntype ContentProps = {\n  hasIcon?: boolean;\n};\n\nconst Content = styled.span<ContentProps>`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  box-sizing: border-box;\n  cursor: pointer;\n  width: fit-content;\n  border: ${toggleButton.border};\n  background-color: ${toggleButton.backgroundColor};\n  color: ${toggleButton.color};\n  border-radius: ${toggleButton.borderRadius};\n  padding: ${toggleButton.padding};\n  ${getFontStyling(typographyType)}\n  @media (prefers-reduced-motion: no-preference) {\n    transition: border-color 0.2s, background-color 0.2s, box-shadow 0.2s,\n      ${focusVisibleTransitionValue};\n  }\n\n  ${({ hasIcon }) =>\n    hasIcon &&\n    css`\n      gap: ${toggleButton.gap};\n    `}\n\n  &::selection,\n  *::selection {\n    ${selection}\n  }\n  &:hover {\n    background-color: ${toggleButton.hover.backgroundColor};\n    box-shadow: ${toggleButton.hover.boxShadow};\n    border-color: ${toggleButton.hover.borderColor};\n  }\n`;\n\nconst Container = styled.label`\n  width: fit-content;\n  ${HiddenInput}:checked + ${Content} {\n    background-color: ${toggleButton.checked.backgroundColor};\n    border-color: ${toggleButton.checked.borderColor};\n    color: ${toggleButton.checked.color};\n  }\n  ${HiddenInput}:checked + ${Content}:hover {\n    background-color: ${toggleButton.checked.hover.backgroundColor};\n    border-color: ${toggleButton.checked.hover.borderColor};\n    box-shadow: ${toggleButton.checked.hover.boxShadow};\n  }\n  ${HiddenInput}:focus-visible + ${Content} {\n    ${focusVisible}\n  }\n`;\n\nexport const ToggleButton = forwardRef<HTMLInputElement, ToggleButtonProps>(\n  ({ id, label, icon, className, htmlProps, ...rest }, ref) => {\n    const generatedId = useId();\n    const uniqueId = id ?? `${generatedId}-toggleButton`;\n\n    const inputProps = {\n      ...getBaseHTMLProps(uniqueId, className, htmlProps, rest),\n      ref,\n      type: 'checkbox',\n    };\n\n    const containerProps = {\n      htmlFor: uniqueId,\n    };\n\n    return (\n      <Container {...containerProps}>\n        <HiddenInput {...inputProps} />\n        <Content hasIcon={!!icon}>\n          {icon && <Icon icon={icon} iconSize=\"inherit\" />} {label}\n        </Content>\n      </Container>\n    );\n  }\n);\n\nToggleButton.displayName = 'ToggleButton';\n"],"names":["colors","spacing","ddsBaseTokens","button","buttonTokens","selectionControl","selectionControlTokens","typographyType","typographyTypes","toggleButton","group","container","toggleButtonTokens","tokens","Content","styled","getFontStyling","focusVisibleTransitionValue","hasIcon","css","selection","Container","HiddenInput","focusVisible","ToggleButton","forwardRef","id","label","icon","className","htmlProps","rest","ref","generatedId","useId","uniqueId","inputProps","getBaseHTMLProps","jsxs","jsx","Icon"],"mappings":"6aAKA,KAAM,CAAE,OAAAA,EAAQ,QAAAC,CAAY,EAAAC,EACtB,CAAE,OAAAC,CAAW,EAAAC,EACb,CAAE,iBAAAC,CAAqB,EAAAC,EAEhBC,EAAiBC,EAAgB,MAExCC,EAAe,CACnB,OAAQN,EAAO,KAAK,OACpB,gBAAiBH,EAAO,sBACxB,MAAOA,EAAO,sBACd,IAAKC,EAAQ,wBACb,aAAcE,EAAO,YAAY,QAAQ,KAAK,aAC9C,QAASA,EAAO,MAAM,MAAM,KAAK,QACjC,MAAOE,EAAiB,MAAM,KAC9B,QAAS,CACP,GAAGA,EAAiB,QAAQ,KAC5B,MAAOL,EAAO,sBACd,MAAOK,EAAiB,QAAQ,KAClC,CACF,EAEMK,EAAQ,CACZ,IAAKT,EAAQ,wBACf,EAEMU,EAAY,CAChB,IAAKV,EAAQ,uBACf,EAEaW,EAAqB,CAAA,aAChCH,EACA,MAAAC,EACA,UAAAC,CACF,ECrBM,CAAE,aAAAF,CAAiB,EAAAI,EAMnBC,EAAUC,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAQXN,EAAa;AAAA,sBACHA,EAAa;AAAA,WACxBA,EAAa;AAAA,mBACLA,EAAa;AAAA,aACnBA,EAAa;AAAA,IACtBO,EAAeT,CAAc;AAAA;AAAA;AAAA,QAGzBU;AAAAA;AAAAA;AAAAA,IAGJ,CAAC,CAAE,QAAAC,KACHA,GACAC;AAAAA,aACSV,EAAa;AAAA;AAAA;AAAA;AAAA;AAAA,MAKpBW;AAAAA;AAAAA;AAAAA,wBAGkBX,EAAa,MAAM;AAAA,kBACzBA,EAAa,MAAM;AAAA,oBACjBA,EAAa,MAAM;AAAA;AAAA,EAIjCY,EAAYN,EAAO;AAAA;AAAA,IAErBO,eAAyBR;AAAA,wBACLL,EAAa,QAAQ;AAAA,oBACzBA,EAAa,QAAQ;AAAA,aAC5BA,EAAa,QAAQ;AAAA;AAAA,IAE9Ba,eAAyBR;AAAA,wBACLL,EAAa,QAAQ,MAAM;AAAA,oBAC/BA,EAAa,QAAQ,MAAM;AAAA,kBAC7BA,EAAa,QAAQ,MAAM;AAAA;AAAA,IAEzCa,qBAA+BR;AAAA,MAC7BS;AAAAA;AAAAA,EAIOC,EAAeC,EAAA,WAC1B,CAAC,CAAE,GAAAC,EAAI,MAAAC,EAAO,KAAAC,EAAM,UAAAC,EAAW,UAAAC,EAAW,GAAGC,CAAK,EAAGC,IAAQ,CAC3D,MAAMC,EAAcC,EAAAA,QACdC,EAAWT,GAAM,GAAGO,iBAEpBG,EAAa,CACjB,GAAGC,EAAiBF,EAAUN,EAAWC,EAAWC,CAAI,EACxD,IAAAC,EACA,KAAM,UAAA,EAQN,OAAAM,EAACjB,EAAW,CAAA,GALS,CACrB,QAASc,CAAA,EAKP,SAAA,CAACI,EAAAjB,EAAA,CAAa,GAAGc,EAAY,EAC5BE,EAAAxB,EAAA,CAAQ,QAAS,CAAC,CAACc,EACjB,SAAA,CAAAA,GAASW,EAAAC,EAAA,CAAK,KAAAZ,EAAY,SAAS,UAAU,EAAG,IAAED,CAAA,EACrD,CACF,CAAA,CAAA,CAEJ,CACF,EAEAH,EAAa,YAAc"}