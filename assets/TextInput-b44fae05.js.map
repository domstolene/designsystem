{"version":3,"file":"TextInput-b44fae05.js","sources":["../../../../packages/components/src/components/TextInput/CharCounter.tsx","../../../../packages/components/src/components/TextInput/TextInput.tokens.tsx","../../../../packages/components/src/components/TextInput/TextInput.styles.tsx","../../../../packages/components/src/components/TextInput/TextInput.tsx"],"sourcesContent":["import { useId } from 'react';\nimport styled from 'styled-components';\nimport { BaseComponentProps, getBaseHTMLProps } from '../../types';\nimport { Typography } from '../Typography';\n\nconst Wrapper = styled(Typography)`\n  margin-left: auto;\n`;\n\ntype Props = BaseComponentProps<\n  HTMLElement,\n  {\n    current: number;\n    max: number;\n  }\n>;\n\nfunction CharCounter(props: Props) {\n  const { current, max, id, className, htmlProps, ...rest } = props;\n\n  const generatedId = useId();\n  const uniqueId = id ?? `${generatedId}-characterCounter`;\n\n  return (\n    <Wrapper\n      {...getBaseHTMLProps(uniqueId, className, htmlProps, rest)}\n      forwardedAs=\"div\"\n      typographyType=\"supportingStyleHelperText01\"\n      aria-label={`${current} av ${max} tegn skrevet`}\n    >\n      {current}/{max}\n    </Wrapper>\n  );\n}\n\nexport default CharCounter;\n","import { ddsBaseTokens } from '@norges-domstoler/dds-design-tokens';\n\nconst { colors, spacing, iconSizes } = ddsBaseTokens;\n\nconst input = {\n  withIcon: {\n    medium: {\n      paddingLeft: `${\n        spacing.SizesDdsSpacingLocalX075NumberPx +\n        iconSizes.DdsIconsizeMediumNumberPx +\n        spacing.SizesDdsSpacingLocalX05NumberPx\n      }px`,\n    },\n    small: {\n      paddingLeft: `${\n        spacing.SizesDdsSpacingLocalX075NumberPx +\n        iconSizes.DdsIconsizeSmallNumberPx +\n        spacing.SizesDdsSpacingLocalX05NumberPx\n      }px`,\n    },\n    tiny: {\n      paddingLeft: `${\n        spacing.SizesDdsSpacingLocalX05NumberPx +\n        iconSizes.DdsIconsizeSmallNumberPx +\n        spacing.SizesDdsSpacingLocalX025NumberPx\n      }px`,\n    },\n  },\n};\n\nconst affix = {\n  border: {\n    color: colors.DdsColorNeutralsGray5,\n  },\n};\n\nconst icon = {\n  color: colors.DdsColorNeutralsGray9,\n  sizes: {\n    medium: {\n      top: spacing.SizesDdsSpacingLocalX075,\n      left: spacing.SizesDdsSpacingLocalX075,\n    },\n    small: {\n      top: spacing.SizesDdsSpacingLocalX075,\n      left: spacing.SizesDdsSpacingLocalX075,\n    },\n    tiny: {\n      top: spacing.SizesDdsSpacingLocalX05,\n      left: spacing.SizesDdsSpacingLocalX05,\n    },\n  },\n};\n\nexport const textInputTokens = {\n  input,\n  icon,\n  affix,\n};\n","import styled, { css } from 'styled-components';\nimport { textInputTokens as tokens } from './TextInput.tokens';\nimport { StatefulInput, InputSize } from '../../helpers';\nimport { Icon } from '../Icon';\nimport { ddsBaseTokens } from '@norges-domstoler/dds-design-tokens';\n\nconst { iconSizes } = ddsBaseTokens;\nconst { input, icon } = tokens;\n\nexport const MessageContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\ntype StyledIconProps = {\n  size: InputSize;\n};\n\nexport const StyledIcon = styled(Icon)<StyledIconProps>`\n  position: absolute;\n  color: ${icon.color};\n  ${({ size, iconSize }) => css`\n    left: ${icon.sizes[size].left};\n    ${iconSize === 'small'\n      ? css`\n          top: ${`calc(50% - ${iconSizes.DdsIconsizeSmallNumberPx / 2}px)`};\n        `\n      : css`\n          top: ${`calc(50% - ${iconSizes.DdsIconsizeMediumNumberPx / 2}px)`};\n        `}\n  `}\n  z-index: 1;\n`;\n\ntype StyledInputProps = {\n  hasIcon?: boolean;\n};\n\nexport const StyledInput = styled(StatefulInput)<StyledInputProps>`\n  ${({ componentSize, hasIcon }) =>\n    hasIcon &&\n    componentSize &&\n    css`\n      padding-left: ${input.withIcon[componentSize].paddingLeft};\n    `}\n`;\n","import React, {\n  useState,\n  forwardRef,\n  useId,\n  useRef,\n  useLayoutEffect,\n} from 'react';\nimport { InputSize } from '../../helpers';\nimport CharCounter from './CharCounter';\nimport { TextAffixProps, TextInputProps } from './TextInput.types';\nimport {\n  StatefulInput,\n  InputContainer,\n  OuterInputContainer,\n} from '../../helpers';\nimport { MessageContainer, StyledIcon, StyledInput } from './TextInput.styles';\nimport { Label } from '../Typography';\nimport {\n  derivativeIdGenerator,\n  spaceSeparatedIdListGenerator,\n} from '../../utils';\nimport { Property } from 'csstype';\nimport {\n  InputAffixContainer,\n  getDefaultText,\n  getFormInputIconSize,\n  renderInputMessage,\n} from '../../helpers/Input';\nimport styled, { css } from 'styled-components';\nimport { textInputTokens } from './TextInput.tokens';\n\nconst defaultWidth: Property.Width<string> = '320px';\nconst defaultTinyWidth: Property.Width<string> = '210px';\n\nconst getWidth = (\n  size: InputSize,\n  width?: Property.Width<string>\n): Property.Width<string> => {\n  if (width) return width;\n  if (size === 'tiny') {\n    return defaultTinyWidth;\n  }\n  return defaultWidth;\n};\n\nconst Affix = styled.span<TextAffixProps>`\n  position: absolute;\n  height: 100%;\n  top: 50%;\n  transform: translateY(-50%);\n  display: flex;\n  align-items: center;\n  pointer-events: none;\n  z-index: 1;\n`;\n\nconst Prefix = styled(Affix)`\n  left: 0;\n  margin-left: 8px;\n  padding-right: 8px;\n  border-right: 1px solid ${textInputTokens.affix.border.color};\n\n  ${({ readOnly }) =>\n    readOnly &&\n    css`\n      margin-left: 0;\n      padding-right: 0.5ch;\n      border-right: none;\n    `};\n`;\n\nconst Suffix = styled(Affix)`\n  right: 0;\n  margin-right: 8px;\n  padding-left: 8px;\n  border-left: 1px solid ${textInputTokens.affix.border.color};\n\n  ${({ readOnly }) =>\n    readOnly &&\n    css`\n      margin-right: 0;\n      padding-left: 0.5ch;\n      border-left: none;\n    `};\n`;\n\nexport const TextInput = forwardRef<HTMLInputElement, TextInputProps>(\n  (\n    {\n      label,\n      disabled,\n      readOnly,\n      errorMessage,\n      tip,\n      required,\n      maxLength,\n      onChange,\n      id,\n      width,\n      componentSize = 'medium',\n      type = 'text',\n      withCharacterCounter = true,\n      className,\n      style,\n      value,\n      defaultValue,\n      'aria-required': ariaRequired,\n      'aria-describedby': ariaDescribedby,\n      icon,\n      prefix,\n      suffix,\n      ...rest\n    },\n    ref\n  ) => {\n    const [text, setText] = useState<string>(\n      getDefaultText(value, defaultValue)\n    );\n    const prefixRef = useRef<HTMLSpanElement>(null);\n    const suffixRef = useRef<HTMLSpanElement>(null);\n    const [prefixLength, setPrefixLength] = useState(0);\n    const [suffixLength, setSuffixLength] = useState(0);\n\n    useLayoutEffect(() => {\n      if (prefixRef.current) {\n        setPrefixLength(prefixRef.current.offsetWidth);\n      }\n      if (suffixRef.current) {\n        setSuffixLength(suffixRef.current.offsetWidth);\n      }\n    }, [prefix, suffix, readOnly]);\n\n    const onChangeHandler: React.ChangeEventHandler<HTMLInputElement> = (\n      event: React.ChangeEvent<HTMLInputElement>\n    ) => {\n      setText(event.target.value);\n\n      if (onChange) {\n        onChange(event);\n      }\n    };\n\n    const generatedId = useId();\n    const uniqueId = id ?? `${generatedId}-textInput`;\n\n    const hasErrorMessage = !!errorMessage;\n    const hasTip = !!tip;\n    const hasLabel = !!label;\n    const hasMessage = hasErrorMessage || hasTip || !!maxLength;\n    const hasIcon = !!icon;\n    const hasAffix = !!(prefix || suffix);\n\n    const characterCounterId = derivativeIdGenerator(\n      uniqueId,\n      'characterCounter'\n    );\n    const tipId = derivativeIdGenerator(uniqueId, 'tip');\n    const errorMessageId = derivativeIdGenerator(uniqueId, 'errorMessage');\n\n    const generalInputProps = {\n      id: uniqueId,\n      errorMessage,\n      hasErrorMessage,\n      required,\n      disabled,\n      readOnly,\n      tabIndex: readOnly ? -1 : 0,\n      maxLength,\n      value,\n      defaultValue,\n      'aria-required': ariaRequired,\n      'aria-describedby': spaceSeparatedIdListGenerator([\n        hasTip ? tipId : undefined,\n        hasErrorMessage ? errorMessageId : undefined,\n        maxLength && withCharacterCounter ? characterCounterId : undefined,\n        ariaDescribedby,\n      ]),\n      'aria-invalid': hasErrorMessage ? true : undefined,\n      ...rest,\n    };\n\n    const outerInputContainerProps = {\n      className,\n      style,\n      width: getWidth(componentSize, width),\n    };\n\n    const showRequiredStyling = !!(required || ariaRequired);\n\n    let extendedInput = null;\n\n    if (hasIcon) {\n      extendedInput = (\n        <InputContainer>\n          {\n            <StyledIcon\n              icon={icon}\n              iconSize={getFormInputIconSize(componentSize)}\n              size={componentSize}\n            />\n          }\n          <StyledInput\n            ref={ref}\n            onChange={onChangeHandler}\n            type={type}\n            componentSize={componentSize}\n            hasIcon={hasIcon}\n            {...generalInputProps}\n          />\n        </InputContainer>\n      );\n    } else if (hasAffix) {\n      extendedInput = (\n        <InputAffixContainer>\n          {prefix && (\n            <Prefix readOnly={readOnly} ref={prefixRef} aria-hidden>\n              {prefix}\n            </Prefix>\n          )}\n          <StatefulInput\n            ref={ref}\n            onChange={onChangeHandler}\n            type={type}\n            componentSize={componentSize}\n            prefixLength={prefixLength}\n            suffixLength={suffixLength}\n            {...generalInputProps}\n          />\n          {suffix && (\n            <Suffix readOnly={readOnly} ref={suffixRef} aria-hidden>\n              {suffix}\n            </Suffix>\n          )}\n        </InputAffixContainer>\n      );\n    }\n\n    return (\n      <OuterInputContainer {...outerInputContainerProps}>\n        {hasLabel && (\n          <Label htmlFor={uniqueId} showRequiredStyling={showRequiredStyling}>\n            {label}\n          </Label>\n        )}\n        {extendedInput ? (\n          extendedInput\n        ) : (\n          <StatefulInput\n            ref={ref}\n            onChange={onChangeHandler}\n            type={type}\n            componentSize={componentSize}\n            {...generalInputProps}\n          />\n        )}\n        {hasMessage && (\n          <MessageContainer>\n            {renderInputMessage(tip, tipId, errorMessage, errorMessageId)}\n            {maxLength &&\n              Number.isInteger(maxLength) &&\n              maxLength > 0 &&\n              withCharacterCounter && (\n                <CharCounter\n                  id={characterCounterId}\n                  current={text.length}\n                  max={maxLength}\n                />\n              )}\n          </MessageContainer>\n        )}\n      </OuterInputContainer>\n    );\n  }\n);\n\nTextInput.displayName = 'TextInput';\n"],"names":["Wrapper","styled","Typography","CharCounter","props","current","max","id","className","htmlProps","rest","generatedId","useId","uniqueId","jsxs","getBaseHTMLProps","colors","spacing","iconSizes","ddsBaseTokens","input","affix","icon","textInputTokens","tokens","MessageContainer","StyledIcon","Icon","size","iconSize","css","StyledInput","StatefulInput","componentSize","hasIcon","defaultWidth","defaultTinyWidth","getWidth","width","Affix","Prefix","readOnly","Suffix","TextInput","forwardRef","label","disabled","errorMessage","tip","required","maxLength","onChange","type","withCharacterCounter","style","value","defaultValue","ariaRequired","ariaDescribedby","prefix","suffix","ref","text","setText","useState","getDefaultText","prefixRef","useRef","suffixRef","prefixLength","setPrefixLength","suffixLength","setSuffixLength","useLayoutEffect","onChangeHandler","event","hasErrorMessage","hasTip","hasLabel","hasMessage","hasAffix","characterCounterId","derivativeIdGenerator","tipId","errorMessageId","generalInputProps","spaceSeparatedIdListGenerator","outerInputContainerProps","showRequiredStyling","extendedInput","InputContainer","jsx","getFormInputIconSize","InputAffixContainer","OuterInputContainer","Label","renderInputMessage"],"mappings":"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"}