{"version":3,"file":"useCombinedRefs-764cd8e8.js","sources":["../../../../packages/components/src/hooks/useCombinedRefs.tsx"],"sourcesContent":["import type { MutableRefObject, RefCallback } from 'react';\nimport { useCallback } from 'react';\n\n/**\n * Kombinerer refs for et element.\n * Eksempel p√• bruk:\n * ```\n * const MyComponent = forwardRef<HTMLDivElement, Props>((props, ref) => {\n *\n *  const itemRef = useRef<HTMLDivElement>(null);\n *  const combinedRef = useCombinedRef(ref, itemRef);\n *\n *  return <div ref={combinedRef}>innhold</div>\n * });\n * ```\n * @param refs array med refs.\n * @template T elementet som refereres til.\n * @returns  callback med kombinerte refs.\n *\n * {@link useCombinedRef}\n */\n\nexport function useCombinedRef<T>(...refs: React.Ref<T>[]): RefCallback<T> {\n  return useCallback((element: T) => {\n    refs.forEach(ref => {\n      if (typeof ref === 'function') ref(element);\n      else if (ref && typeof ref === 'object')\n        (ref as MutableRefObject<T>).current = element;\n    });\n  }, refs);\n}\n"],"names":["useCombinedRef","refs","useCallback","element","ref"],"mappings":"wCAsBO,SAASA,KAAqBC,EAAsC,CAClE,OAAAC,EAAAA,YAAaC,GAAe,CACjCF,EAAK,QAAeG,GAAA,CACd,OAAOA,GAAQ,WAAYA,EAAID,CAAO,EACjCC,GAAO,OAAOA,GAAQ,WAC5BA,EAA4B,QAAUD,EAAA,CAC1C,GACAF,CAAI,CACT"}