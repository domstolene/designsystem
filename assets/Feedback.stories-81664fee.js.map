{"version":3,"file":"Feedback.stories-81664fee.js","sources":["../../../../packages/components/src/components/Feedback/FlexContainer.tsx","../../../../packages/components/src/components/Feedback/RatingComponent.tsx","../../../../packages/components/src/components/Feedback/CommentComponent.tsx","../../../../packages/components/src/components/Feedback/Feedback.tsx"],"sourcesContent":["import { CSSProperties } from 'react';\nimport styled, { css } from 'styled-components';\nimport { ddsBaseTokens } from '@norges-domstoler/dds-design-tokens';\n\ntype FlexContainerProps = {\n  flexDirection: CSSProperties['flexDirection'];\n};\n\nexport const FlexContainer = styled.div<FlexContainerProps>`\n  display: flex;\n  ${({ flexDirection }) => css`\n    flex-direction: ${flexDirection};\n    gap: ${ddsBaseTokens.spacing.SizesDdsSpacingLocalX1};\n  `};\n`;\n","import styled, { css } from 'styled-components';\nimport { ddsBaseTokens } from '@norges-domstoler/dds-design-tokens';\nimport { Layout, Rating } from './Feedback.types';\nimport { Thumbup, Thumbdown } from '../../icons/tsx';\nimport { Spinner } from '../Spinner';\nimport { Tooltip } from '../Tooltip';\nimport { Label } from '../Typography';\nimport { Button } from '../Button';\nimport { FlexContainer } from './FlexContainer';\n\ntype RatingContainerProps = {\n  layout: Layout;\n};\n\nconst RatingContainer = styled.div<RatingContainerProps>`\n  display: flex;\n  gap: ${ddsBaseTokens.spacing.SizesDdsSpacingLocalX1};\n  ${({ layout }) => css`\n    flex-direction: ${layout === 'horizontal' ? 'row' : 'column'};\n    align-items: center;\n  `}\n`;\n\nconst RatingButton = styled(Button)`\n  padding: 0px;\n  color: ${ddsBaseTokens.colors.DdsColorNeutralsGray7};\n`;\n\ntype RatingComponentType = {\n  layout: Layout;\n  ratingLabel: string;\n  loading: boolean;\n  thumbUpTooltip: string;\n  thumbDownTooltip: string;\n  handleRatingChange: (rating: Rating) => void;\n};\n\nexport const RatingComponent = ({\n  layout,\n  ratingLabel,\n  loading,\n  thumbUpTooltip,\n  thumbDownTooltip,\n  handleRatingChange,\n}: RatingComponentType) => {\n  return (\n    <RatingContainer layout={layout}>\n      <Label>{ratingLabel}</Label>\n      {loading ? (\n        <Spinner tooltip=\"Laster opp tilbakemelding ...\" />\n      ) : (\n        <FlexContainer flexDirection=\"row\">\n          <Tooltip text={thumbUpTooltip}>\n            <RatingButton\n              htmlProps={{ 'aria-label': thumbUpTooltip }}\n              icon={Thumbup}\n              appearance=\"borderless\"\n              onClick={() => handleRatingChange('positive')}\n              size=\"large\"\n            />\n          </Tooltip>\n          <Tooltip text={thumbDownTooltip}>\n            <div>\n              <RatingButton\n                htmlProps={{ 'aria-label': thumbDownTooltip }}\n                icon={Thumbdown}\n                appearance=\"borderless\"\n                onClick={() => handleRatingChange('negative')}\n                size=\"large\"\n              />\n            </div>\n          </Tooltip>\n        </FlexContainer>\n      )}\n    </RatingContainer>\n  );\n};\n","import styled from 'styled-components';\nimport { FlexContainer } from './FlexContainer';\nimport { ddsBaseTokens } from '@norges-domstoler/dds-design-tokens';\nimport { Icon } from '../Icon';\nimport { Rating } from './Feedback.types';\nimport { ThumbupFilled, ThumbdownFilled } from '../../icons/tsx';\nimport { Button } from '../Button';\nimport { TextArea } from '../TextArea';\nimport { Paragraph } from '../Typography';\n\nconst IconLabelSpan = styled.span`\n  display: inline-flex;\n  align-items: center;\n  gap: ${ddsBaseTokens.spacing.SizesDdsSpacingLocalX05};\n`;\n\ntype CommentComponentType = {\n  rating: Rating | null;\n  feedbackText: string | undefined;\n  positiveFeedbackLabel: string;\n  negativeFeedbackLabel: string;\n  loading: boolean;\n  handleSubmit: () => void;\n  handleFeedbackTextChange: (newText: string) => void;\n};\n\nexport const CommentComponent = ({\n  rating,\n  feedbackText,\n  positiveFeedbackLabel,\n  negativeFeedbackLabel,\n  loading,\n  handleSubmit,\n  handleFeedbackTextChange,\n}: CommentComponentType) => {\n  return (\n    <FlexContainer flexDirection=\"column\">\n      <IconLabelSpan>\n        <Icon\n          icon={rating === 'positive' ? ThumbupFilled : ThumbdownFilled}\n          color={ddsBaseTokens.colors.DdsColorInteractiveBase}\n        />\n        <Paragraph>\n          Tusen takk! Tilbakemeldingen din hjelper oss å forbedre løsningen\n        </Paragraph>\n      </IconLabelSpan>\n      <TextArea\n        value={feedbackText}\n        onChange={(e: React.ChangeEvent<HTMLTextAreaElement>) =>\n          handleFeedbackTextChange(e.target.value)\n        }\n        label={\n          rating === 'positive' ? positiveFeedbackLabel : negativeFeedbackLabel\n        }\n        tip=\"Ikke send inn personopplysninger eller annen sensitiv informasjon\"\n      />\n\n      <Button\n        label=\"Send inn\"\n        purpose=\"secondary\"\n        size=\"small\"\n        onClick={handleSubmit}\n        loading={loading}\n      />\n    </FlexContainer>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { FeedbackProps, Rating } from './Feedback.types';\nimport { Paragraph } from '../Typography';\nimport { RatingComponent } from './RatingComponent';\nimport { CommentComponent } from './CommentComponent';\n\nexport const Feedback = ({\n  layout = 'vertical',\n  ratingLabel = 'Hva syns du om tjenesten?',\n  positiveFeedbackLabel = 'Hva kan vi forbedre? (valgfritt)',\n  negativeFeedbackLabel = 'Hva kan vi forbedre? (valgfritt)',\n  ratingValue: ratingProp,\n  feedbackTextValue: feedbackTextProp,\n  thumbUpTooltip = 'Bra',\n  thumbDownTooltip = 'Dårlig',\n  feedbackTextAreaExcluded = false,\n  loading = false,\n  isSubmitted: isSubmittedProp,\n  onRating,\n  onFeedbackTextChange,\n  onSubmit,\n}: FeedbackProps) => {\n  const [rating, setRating] = useState<Rating | null>(null);\n  const [feedbackText, setFeedbackText] = useState<string>();\n  const [isFeedbackSubmitted, setIsFeedbackSubmitted] =\n    useState<boolean>(false);\n\n  useEffect(() => {\n    ratingProp !== undefined && setRating(ratingProp);\n  }, [ratingProp]);\n\n  useEffect(() => {\n    feedbackTextProp !== undefined && setFeedbackText(feedbackTextProp);\n  }, [feedbackTextProp]);\n\n  useEffect(() => {\n    isSubmittedProp !== undefined && setIsFeedbackSubmitted(isSubmittedProp);\n  }, [isSubmittedProp]);\n\n  const handleRatingChange = (newRating: Rating) => {\n    onRating && onRating(newRating);\n    onSubmit && feedbackTextAreaExcluded && onSubmit(newRating, '');\n\n    ratingProp === undefined && setRating(newRating);\n  };\n\n  const handleFeedbackTextChange = (newFeedbackText: string) => {\n    onFeedbackTextChange && onFeedbackTextChange(newFeedbackText);\n    feedbackTextProp === undefined && setFeedbackText(newFeedbackText);\n  };\n\n  const handleSubmit = () => {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion -- Ved submit er rating alltid satt\n    onSubmit && onSubmit(rating!, feedbackText ?? '');\n    isSubmittedProp === undefined && setIsFeedbackSubmitted(true);\n  };\n\n  if (rating === null && !isFeedbackSubmitted) {\n    return (\n      <RatingComponent\n        layout={layout}\n        ratingLabel={ratingLabel}\n        loading={loading}\n        thumbUpTooltip={thumbUpTooltip}\n        thumbDownTooltip={thumbDownTooltip}\n        handleRatingChange={handleRatingChange}\n      />\n    );\n  }\n\n  if (!feedbackTextAreaExcluded && !isFeedbackSubmitted) {\n    return (\n      <CommentComponent\n        rating={rating}\n        feedbackText={feedbackText}\n        positiveFeedbackLabel={positiveFeedbackLabel}\n        negativeFeedbackLabel={negativeFeedbackLabel}\n        loading={loading}\n        handleSubmit={handleSubmit}\n        handleFeedbackTextChange={handleFeedbackTextChange}\n      />\n    );\n  }\n\n  return (\n    <Paragraph>\n      Tusen takk! Tilbakemeldingen din hjelper oss å forbedre løsningen\n    </Paragraph>\n  );\n};\n"],"names":["FlexContainer","styled","flexDirection","css","ddsBaseTokens","RatingContainer","layout","RatingButton","Button","RatingComponent","ratingLabel","loading","thumbUpTooltip","thumbDownTooltip","handleRatingChange","jsxs","jsx","Label","Spinner","Tooltip","Thumbup","Thumbdown","IconLabelSpan","CommentComponent","rating","feedbackText","positiveFeedbackLabel","negativeFeedbackLabel","handleSubmit","handleFeedbackTextChange","Icon","ThumbupFilled","ThumbdownFilled","Paragraph","TextArea","e","Feedback","ratingProp","feedbackTextProp","feedbackTextAreaExcluded","isSubmittedProp","onRating","onFeedbackTextChange","onSubmit","setRating","useState","setFeedbackText","isFeedbackSubmitted","setIsFeedbackSubmitted","useEffect","newRating","newFeedbackText"],"mappings":"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"}