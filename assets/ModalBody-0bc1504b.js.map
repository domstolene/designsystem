{"version":3,"file":"ModalBody-0bc1504b.js","sources":["../../../../packages/components/src/components/Modal/Modal.tokens.tsx","../../../../packages/components/src/components/Modal/Backdrop/Backdrop.tsx","../../../../packages/components/src/components/Modal/Backdrop/Backdrop.utils.tsx","../../../../packages/components/src/components/Modal/Modal.tsx","../../../../packages/components/src/components/Modal/ModalBody.tsx"],"sourcesContent":["import { ddsBaseTokens } from '@norges-domstoler/dds-design-tokens';\n\nconst { spacing } = ddsBaseTokens;\n\nconst container = {\n  padding: `${spacing.SizesDdsSpacingLocalX1} ${spacing.SizesDdsSpacingLocalX1} ${spacing.SizesDdsSpacingLocalX15} ${spacing.SizesDdsSpacingLocalX15}`,\n};\n\nconst contentContainer = {\n  paddingRight: spacing.SizesDdsSpacingLocalX1,\n  gap: spacing.SizesDdsSpacingLocalX1,\n};\nconst actionsContainer = {\n  gap: spacing.SizesDdsSpacingLocalX1,\n};\n\nexport const modalTokens = {\n  container,\n  contentContainer,\n  actionsContainer,\n};\n","import styled from 'styled-components';\nimport { ddsBaseTokens } from '@norges-domstoler/dds-design-tokens';\nimport { changeRGBAAlpha } from '@norges-domstoler/dds-core';\n\ntype BackdropProps = { isOpen: boolean };\n\nexport const Backdrop = styled.div<BackdropProps>`\n  position: fixed;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: ${changeRGBAAlpha(\n    ddsBaseTokens.colors.DdsColorNeutralsGray9,\n    0.5\n  )};\n  overflow-y: auto;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  z-index: 200;\n  opacity: ${({ isOpen }) => (isOpen ? 1 : 0)};\n  @media (prefers-reduced-motion: no-preference) {\n    transition: opacity 0.2s;\n  }\n`;\n","const isVerticalScrollbarDisplayed = (container: HTMLElement) =>\n  container.clientHeight > window.innerHeight;\n\nexport function handleElementWithBackdropMount(container: HTMLElement) {\n  if (isVerticalScrollbarDisplayed(container)) {\n    const scrollY = Math.round(window.scrollY);\n\n    container.style.overflowY = 'scroll';\n    container.style.position = 'fixed';\n    container.style.top = `-${scrollY}px`;\n  }\n}\n\nexport function handleElementWithBackdropUnmount(container: HTMLElement) {\n  const scrollY = parseInt(document.body.style.top) || 0;\n\n  container.style.removeProperty('overflow-y');\n  container.style.removeProperty('position');\n  container.style.removeProperty('top');\n\n  window.scrollTo(0, scrollY * -1);\n}\n","import { forwardRef, ReactNode, RefObject, useEffect, useId } from 'react';\nimport styled from 'styled-components';\nimport { Button } from '../Button';\nimport { modalTokens as tokens } from './Modal.tokens';\nimport { createPortal } from 'react-dom';\nimport { Typography } from '@norges-domstoler/dds-typography';\nimport {\n  useCombinedRef,\n  useOnClickOutside,\n  useOnKeyDown,\n  Paper,\n  selection,\n  useMountTransition,\n  useFocusTrap,\n  BaseComponentPropsWithChildren,\n  getBaseHTMLProps,\n} from '@norges-domstoler/dds-core';\nimport { CloseIcon } from '@norges-domstoler/dds-icons';\nimport { focusVisible } from '@norges-domstoler/dds-form';\n\nimport {\n  handleElementWithBackdropMount,\n  handleElementWithBackdropUnmount,\n  Backdrop,\n} from './Backdrop';\n\nconst { container, contentContainer } = tokens;\n\nconst Container = styled(Paper)`\n  display: flex;\n  flex-direction: column-reverse;\n  min-width: 200px;\n  padding: ${container.padding};\n  &::selection,\n  *::selection {\n    ${selection}\n  }\n  :focus-visible,\n  &.focus-visible {\n    ${focusVisible}\n  }\n`;\nconst ContentContainer = styled.div`\n  display: grid;\n  padding-right: ${contentContainer.paddingRight};\n  gap: ${contentContainer.gap};\n`;\nconst HeaderContainer = styled.div``;\n\nconst StyledButton = styled(Button)`\n  align-self: flex-end;\n`;\n\nexport type ModalProps = BaseComponentPropsWithChildren<\n  HTMLDivElement,\n  {\n    /**Spesifiserer om modal skal vises. */\n    isOpen?: boolean;\n    /**Funksjon kjørt ved lukking; Settes hvis modal skal være lukkbar. Legger en lukkeknapp i hjørnet og kjøres ved Esc-trykk, lukkeknappklikk og museklikk utenfor. */\n    onClose?: () => void;\n    /**Spesifiserer hvilken DOM node `<Modal />` skal ha som forelder via React portal. Brukes med f.eks `document.getElementById(\"id\")` (skaper ikke ny DOM node). */\n    parentElement?: HTMLElement;\n    /**Tittel/header i modal. Setter `aria-labelledby`. */\n    header?: string | ReactNode;\n    /**Ref som brukes til returnering av fokus. */\n    triggerRef?: RefObject<HTMLElement>;\n  }\n>;\n\nexport const Modal = forwardRef<HTMLDivElement, ModalProps>((props, ref) => {\n  const {\n    isOpen = false,\n    parentElement = document.body,\n    children,\n    header,\n    onClose,\n    id,\n    triggerRef,\n    className,\n    htmlProps,\n    ...rest\n  } = props;\n  const generatedId = useId();\n  const modalId = id ?? `${generatedId}-modal`;\n  const headerId = `${modalId}-header`;\n\n  const modalRef = useFocusTrap<HTMLDivElement>(isOpen);\n  const combinedRef = useCombinedRef(ref, modalRef);\n  const handleClose = () => {\n    if (onClose && isOpen) {\n      triggerRef && triggerRef.current?.focus();\n      onClose();\n    }\n  };\n\n  useEffect(() => {\n    if (isOpen) {\n      handleElementWithBackdropMount(document.body);\n    } else {\n      handleElementWithBackdropUnmount(document.body);\n    }\n\n    return () => handleElementWithBackdropUnmount(document.body);\n  }, [isOpen]);\n\n  useOnClickOutside(modalRef.current, () => handleClose());\n\n  useOnKeyDown(['Escape', 'Esc'], () => handleClose());\n\n  const hasTransitionedIn = useMountTransition(isOpen, 200);\n\n  const backdropProps = {\n    isOpen: hasTransitionedIn && isOpen,\n  };\n\n  const containerProps = {\n    ...getBaseHTMLProps(id, className, htmlProps, rest),\n    ref: combinedRef,\n    role: 'dialog',\n    'aria-modal': true,\n    'aria-hidden': !isOpen,\n    tabIndex: -1,\n    'aria-labelledby': headerId,\n    id: modalId,\n  };\n\n  const headerContainerProps = {\n    id: headerId,\n  };\n\n  return isOpen || hasTransitionedIn\n    ? createPortal(\n        <Backdrop {...backdropProps}>\n          <Container {...containerProps} elevation={4}>\n            <ContentContainer>\n              {header && (\n                <HeaderContainer {...headerContainerProps}>\n                  {typeof header === 'string' ? (\n                    <Typography typographyType=\"headingSans03\">\n                      {header}\n                    </Typography>\n                  ) : (\n                    header\n                  )}\n                </HeaderContainer>\n              )}\n              {children}\n            </ContentContainer>\n            {onClose && (\n              <StyledButton\n                size=\"small\"\n                appearance=\"borderless\"\n                purpose=\"secondary\"\n                icon={CloseIcon}\n                onClick={handleClose}\n                aria-label=\"Lukk dialog\"\n              />\n            )}\n          </Container>\n        </Backdrop>,\n        parentElement\n      )\n    : null;\n});\n\nModal.displayName = 'Modal';\n","import { forwardRef } from 'react';\nimport styled from 'styled-components';\nimport {\n  BaseComponentPropsWithChildren,\n  getBaseHTMLProps,\n} from '@norges-domstoler/dds-core';\nimport { ScrollableContainer } from '../ScrollableContainer';\nimport { Property } from 'csstype';\n\nconst Container = styled.div``;\n\nexport type ModalBodyProps = BaseComponentPropsWithChildren<\n  HTMLDivElement,\n  {\n    /**Gjør at innholdet kan scrolles. Det må eventuelt settes (max)bredde og (max)høyde styling på både denne subkomponenten og `<Modal />`.  */\n    scrollable?: boolean;\n    /**Høyde på container. */\n    height?: Property.Height;\n  }\n>;\n\nexport const ModalBody = forwardRef<HTMLDivElement, ModalBodyProps>(\n  (props, ref) => {\n    const { children, scrollable, id, className, htmlProps, height, ...rest } =\n      props;\n\n    const containerProps = {\n      ...getBaseHTMLProps(id, className, htmlProps, rest),\n      ref,\n    };\n\n    return scrollable ? (\n      <Container {...containerProps}>\n        <ScrollableContainer contentHeight={height}>\n          {children}\n        </ScrollableContainer>\n      </Container>\n    ) : (\n      <Container {...containerProps}>{children}</Container>\n    );\n  }\n);\n\nModalBody.displayName = 'ModalBody';\n"],"names":["spacing","ddsBaseTokens","container","contentContainer","actionsContainer","modalTokens","Backdrop","styled","changeRGBAAlpha","isOpen","isVerticalScrollbarDisplayed","handleElementWithBackdropMount","scrollY","handleElementWithBackdropUnmount","tokens","Container","Paper","selection","focusVisible","ContentContainer","HeaderContainer","StyledButton","Button","Modal","forwardRef","props","ref","parentElement","children","header","onClose","id","triggerRef","className","htmlProps","rest","generatedId","useId","modalId","headerId","modalRef","useFocusTrap","combinedRef","useCombinedRef","handleClose","_a","useEffect","useOnClickOutside","useOnKeyDown","hasTransitionedIn","useMountTransition","backdropProps","containerProps","getBaseHTMLProps","headerContainerProps","createPortal","jsx","jsxs","Typography","CloseIcon","ModalBody","scrollable","height","ScrollableContainer"],"mappings":"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"}