{"version":3,"file":"InlineEditTextArea-36936d39.js","sources":["../../../../packages/components/src/components/InlineEdit/InlineTextArea.tsx","../../../../packages/components/src/components/InlineEdit/InlineEditTextArea.tsx"],"sourcesContent":["import { forwardRef, TextareaHTMLAttributes, useId, useRef } from 'react';\nimport { EditIcon } from '@norges-domstoler/dds-icons';\nimport { Icon } from '@norges-domstoler/dds-icons';\nimport {\n  derivativeIdGenerator,\n  spaceSeparatedIdListGenerator,\n} from '@norges-domstoler/dds-core';\nimport {\n  IconWrapper,\n  defaultWidth,\n  StyledInlineTextArea,\n} from './InlineEdit.styles';\nimport { BaseInlineInputProps } from './InlineEdit.types';\nimport { inlineEditVisuallyHidden } from './InlineEdit.utils';\nimport { useCombinedRef } from '@norges-domstoler/dds-core';\nimport { renderInputMessage } from '../../utils/renderInputMessage';\nimport {\n  OuterInputContainer,\n  InputContainer,\n} from '@norges-domstoler/dds-form';\n\nexport type InlineTextAreaProps = BaseInlineInputProps &\n  TextareaHTMLAttributes<HTMLTextAreaElement>;\n\nexport const InlineTextArea = forwardRef<\n  HTMLTextAreaElement,\n  InlineTextAreaProps\n>((props, ref) => {\n  const {\n    id,\n    error,\n    errorMessage,\n    isEditing,\n    width = defaultWidth,\n    'aria-describedby': ariaDescribedby,\n    emptiable,\n    hideIcon,\n    ...rest\n  } = props;\n\n  const genereatedId = useId();\n  const uniqueId = id ?? `${genereatedId}-InlineTextArea`;\n  const hasErrorMessage = !!errorMessage;\n  const errorMessageId = derivativeIdGenerator(uniqueId, 'errorMessage');\n  const descId = derivativeIdGenerator(uniqueId, 'desc');\n\n  const inputRef = useRef<HTMLTextAreaElement>(null);\n  const combinedRef = useCombinedRef(ref, inputRef);\n\n  return (\n    <OuterInputContainer width={width}>\n      <InputContainer>\n        {!isEditing && !hideIcon && (\n          <IconWrapper\n            onClick={() => {\n              inputRef.current?.focus();\n            }}\n          >\n            <Icon icon={EditIcon} iconSize=\"small\" />\n          </IconWrapper>\n        )}\n        <StyledInlineTextArea\n          {...rest}\n          id={uniqueId}\n          ref={combinedRef}\n          hasErrorMessage={!!error || hasErrorMessage}\n          isEditing={isEditing}\n          hideIcon={hideIcon}\n          aria-describedby={spaceSeparatedIdListGenerator([\n            hasErrorMessage ? errorMessageId : undefined,\n            descId,\n            ariaDescribedby,\n          ])}\n        />\n      </InputContainer>\n      {inlineEditVisuallyHidden(descId, emptiable)}\n      {renderInputMessage(undefined, undefined, errorMessage, errorMessageId)}\n    </OuterInputContainer>\n  );\n});\n\nInlineTextArea.displayName = 'InlineTextArea';\n","import { forwardRef, useRef } from 'react';\nimport { InlineEdit } from './InlineEdit';\nimport { useCombinedRef } from '@norges-domstoler/dds-core';\nimport { InlineEditTextAreaProps } from './InlineEdit.types';\nimport { InlineTextArea } from './InlineTextArea';\n\nexport const InlineEditTextArea = forwardRef<\n  HTMLTextAreaElement,\n  InlineEditTextAreaProps\n>((props, ref) => {\n  const { onSetValue, emptiable, value, onFocus, onChange, onBlur, ...rest } =\n    props;\n  const textareaRef = useRef<HTMLTextAreaElement>(null);\n  const combinedRef = useCombinedRef(ref, textareaRef);\n  return (\n    <InlineEdit\n      onSetValue={onSetValue}\n      emptiable={emptiable}\n      inputRef={textareaRef}\n      value={value}\n      onFocus={onFocus}\n      onChange={onChange}\n      onBlur={onBlur}\n    >\n      <InlineTextArea ref={combinedRef} {...rest} />\n    </InlineEdit>\n  );\n});\n"],"names":["InlineTextArea","forwardRef","props","ref","id","error","errorMessage","isEditing","width","defaultWidth","ariaDescribedby","emptiable","hideIcon","rest","genereatedId","useId","uniqueId","hasErrorMessage","errorMessageId","derivativeIdGenerator","descId","inputRef","useRef","combinedRef","useCombinedRef","jsxs","OuterInputContainer","InputContainer","jsx","IconWrapper","_a","Icon","EditIcon","StyledInlineTextArea","spaceSeparatedIdListGenerator","inlineEditVisuallyHidden","renderInputMessage","InlineEditTextArea","onSetValue","value","onFocus","onChange","onBlur","textareaRef","InlineEdit"],"mappings":"8aAwBO,MAAAA,EAAAC,EAAA,WAAA,CAAAC,EAAAC,IAAA,CAIL,KAAA,CAAM,GAAAC,EACJ,MAAAC,EACA,aAAAC,EACA,UAAAC,EACA,MAAAC,EAAAC,EACQ,mBAAAC,EACY,UAAAC,EACpB,SAAAC,EACA,GAAAC,CACG,EAAAX,EAGLY,EAAAC,EAAAA,QACAC,EAAAZ,GAAA,GAAAU,CAAA,kBACAG,EAAA,CAAA,CAAAX,EACAY,EAAAC,EAAAH,EAAA,cAAA,EACAI,EAAAD,EAAAH,EAAA,MAAA,EAEAK,EAAAC,SAAA,IAAA,EACAC,EAAAC,EAAArB,EAAAkB,CAAA,EAEA,OAAAI,EAAAC,EAAA,CAAA,MAAAlB,EAAA,SAAA,CAEIiB,EAAAE,EAAA,CAAA,SAAA,CACG,CAAApB,GAAA,CAAAK,GAAAgB,EACCC,EAAC,CAAA,QAAA,IAAA,QAEGC,EAAAT,EAAA,UAAA,MAAAS,EAAA,OAAwB,EAC1B,SAAAF,EAAAG,EAAA,CAAA,KAAAC,EAAA,SAAA,QAAA,CAEuC,CAAA,EACzCJ,EAEFK,EAAC,CAAA,GAAApB,EACK,GAAAG,EACA,IAAAO,EACC,gBAAA,CAAA,CAAAlB,GAAAY,EACuB,UAAAV,EAC5B,SAAAK,EACA,mBAAAsB,EAAA,CACgDjB,EAAAC,EAAA,OACXE,EACnCV,CACA,CAAA,CACD,CAAA,CACH,EAAA,EACFyB,EAAAf,EAAAT,CAAA,EAC2CyB,EAAA,OAAA,OAAA9B,EAAAY,CAAA,CAC2B,CAAA,CAAA,CAG5E,CAAA,EAEAlB,EAAA,YAAA,4qCC3EO,MAAAqC,EAAApC,EAAA,WAAA,CAAAC,EAAAC,IAAA,CAIL,KAAA,CAAA,WAAAmC,EAAA,UAAA3B,EAAA,MAAA4B,EAAA,QAAAC,EAAA,SAAAC,EAAA,OAAAC,EAAA,GAAA7B,CAAA,EAAAX,EAEAyC,EAAArB,SAAA,IAAA,EACAC,EAAAC,EAAArB,EAAAwC,CAAA,EACA,OAAAf,EACEgB,EAAC,CAAA,WAAAN,EACC,UAAA3B,EACA,SAAAgC,EACU,MAAAJ,EACV,QAAAC,EACA,SAAAC,EACA,OAAAC,EACA,SAAAd,EAAA5B,EAAA,CAAA,IAAAuB,EAAA,GAAAV,EAAA,CAE4C,CAAA,CAGlD,CAAA"}