{"version":3,"file":"Chip-0601175b.js","sources":["../../../../packages/components/src/components/Chip/Chip.tokens.tsx","../../../../packages/components/src/components/Chip/Chip.tsx"],"sourcesContent":["import { ddsBaseTokens } from '@norges-domstoler/dds-design-tokens';\nimport { StaticTypographyType } from '@norges-domstoler/dds-typography';\n\nconst { colors, spacing, borderRadius } = ddsBaseTokens;\n\nexport const typographyType: StaticTypographyType = 'bodySans01';\n\nconst container = {\n  gap: spacing.SizesDdsSpacingLocalX025,\n  padding: `${spacing.SizesDdsSpacingLocalX0125} ${spacing.SizesDdsSpacingLocalX025}`,\n  backgroundColor: colors.DdsColorNeutralsGray1,\n  border: `1px solid ${colors.DdsColorNeutralsGray3}`,\n  borderRadius: borderRadius.RadiiDdsBorderRadius1Radius,\n};\n\nconst group = {\n  gap: spacing.SizesDdsSpacingLocalX075,\n};\n\nexport const chipTokens = {\n  container,\n  group,\n};\n","import { forwardRef, useState } from 'react';\nimport styled from 'styled-components';\nimport {\n  BaseComponentProps,\n  getBaseHTMLProps,\n} from '@norges-domstoler/dds-core';\nimport { CloseIcon } from '@norges-domstoler/dds-icons';\nimport {\n  TextOverflowEllipsisInner,\n  TextOverflowEllipsisWrapper,\n  getFontStyling,\n} from '@norges-domstoler/dds-typography';\n\nimport { Button } from '../Button';\nimport { chipTokens as tokens, typographyType } from './Chip.tokens';\n\nconst { container } = tokens;\n\nconst Container = styled(TextOverflowEllipsisWrapper)`\n  display: flex;\n  align-items: center;\n  max-width: 100%;\n  gap: ${container.gap};\n  padding: ${container.padding};\n  border: ${container.border};\n  border-radius: ${container.borderRadius};\n  background-color: ${container.backgroundColor};\n  ${getFontStyling(typographyType, true)};\n`;\n\nexport type ChipProps = BaseComponentProps<\n  HTMLDivElement,\n  {\n    /** Teksten som vises i komponenten. */\n    text?: string;\n    /** Ekstra logikk nÃ¥r `<Chip />` lukkes. */\n    onClose?: () => void;\n  }\n>;\n\nexport const Chip = forwardRef<HTMLDivElement, ChipProps>((props, ref) => {\n  const { text, onClose, id, className, htmlProps = {}, ...rest } = props;\n\n  const { 'aria-label': ariaLabel, ...restHTMLprops } = htmlProps;\n\n  const [isOpen, setIsOpen] = useState(true);\n\n  const onClick = () => {\n    setIsOpen(false);\n    onClose && onClose();\n  };\n\n  return isOpen ? (\n    <Container\n      {...getBaseHTMLProps(id, className, restHTMLprops, rest)}\n      ref={ref}\n      as=\"div\"\n    >\n      <TextOverflowEllipsisInner>{text}</TextOverflowEllipsisInner>\n      <Button\n        size=\"tiny\"\n        icon={CloseIcon}\n        appearance=\"borderless\"\n        purpose=\"secondary\"\n        onClick={onClick}\n        aria-label={ariaLabel || `Fjern ${text ? `chip ${text}` : 'chip'}`}\n      />\n    </Container>\n  ) : null;\n});\n\nChip.displayName = 'Chip';\n"],"names":["colors","spacing","borderRadius","ddsBaseTokens","typographyType","container","group","chipTokens","tokens","Container","styled","TextOverflowEllipsisWrapper","getFontStyling","Chip","forwardRef","props","ref","text","onClose","id","className","htmlProps","rest","ariaLabel","restHTMLprops","isOpen","setIsOpen","useState","onClick","jsxs","getBaseHTMLProps","jsx","TextOverflowEllipsisInner","Button","CloseIcon"],"mappings":"0lBAGA,KAAM,CAAE,OAAAA,EAAQ,QAAAC,EAAS,aAAAC,CAAA,EAAiBC,EAE7BC,EAAuC,aAE9CC,EAAY,CAChB,IAAKJ,EAAQ,yBACb,QAAS,GAAGA,EAAQ,yBAAyB,IAAIA,EAAQ,wBAAwB,GACjF,gBAAiBD,EAAO,sBACxB,OAAQ,aAAaA,EAAO,qBAAqB,GACjD,aAAcE,EAAa,2BAC7B,EAEMI,EAAQ,CACZ,IAAKL,EAAQ,wBACf,EAEaM,EAAa,CAAA,UACxBF,EACA,MAAAC,CACF,ECNA,CAAA,UAAAD,CAAA,EAAAG,EAEAC,EAAAC,EAAAC,CAAA;AAAA;AAAA;AAAA;AAAA,SAAoDN,EAAA,GAAA;AAAA,aAI9BA,EAAA,OAAA;AAAA,YACQA,EAAA,MAAA;AAAA,mBACFA,EAAA,YAAA;AAAA,sBACaA,EAAA,eAAA;AAAA,IACMO,EAAAR,EAAA,EAAA,CAAA;AAAA,EAcxCS,EAAAC,EAAA,WAAA,CAAAC,EAAAC,IAAA,CACL,KAAA,CAAA,KAAAC,EAAA,QAAAC,EAAA,GAAAC,EAAA,UAAAC,EAAA,UAAAC,EAAA,GAAA,GAAAC,CAAA,EAAAP,EAEA,CAAA,aAAAQ,EAAA,GAAAC,CAAA,EAAAH,EAEA,CAAAI,EAAAC,CAAA,EAAAC,EAAA,SAAA,EAAA,EAEAC,EAAA,IAAA,CACEF,EAAA,EAAA,EACAR,GAAAA,EAAA,CAAmB,EAGrB,OAAAO,EAAAI,EACEpB,EAAC,CAAA,GAAAqB,EAAAX,EAAAC,EAAAI,EAAAF,CAAA,EACwD,IAAAN,EACvD,GAAA,MACG,SAAA,CAEHe,EAAAC,EAAA,CAAA,SAAAf,CAAA,CAAA,EAAiCc,EACjCE,EAAC,CAAA,KAAA,OACM,KAAAC,EACC,WAAA,aACK,QAAA,YACH,QAAAN,EACR,aAAAL,GAAA,SAAAN,EAAA,QAAAA,CAAA,GAAA,MAAA,EACgE,CAAA,CAClE,CAAA,CAAA,EAAA,IAGN,CAAA,EAEAJ,EAAA,YAAA"}