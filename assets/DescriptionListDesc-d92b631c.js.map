{"version":3,"file":"DescriptionListDesc-d92b631c.js","sources":["../../../../packages/components/src/components/DescriptionList/DescriptionList.tokens.tsx","../../../../packages/components/src/components/DescriptionList/DescriptionList.tsx","../../../../packages/components/src/components/DescriptionList/DescriptionListTerm.tsx","../../../../packages/components/src/components/DescriptionList/DescriptionListDesc.tsx"],"sourcesContent":["import { ddsBaseTokens } from '@norges-domstoler/dds-design-tokens';\n\nconst { spacing, colors } = ddsBaseTokens;\n\nconst term = {\n  appearance: {\n    small: {\n      color: colors.DdsColorNeutralsGray7,\n    },\n    bold: {\n      color: colors.DdsColorNeutralsGray9,\n    },\n  },\n  firstOfType: {\n    marginTop: spacing.SizesDdsSpacingLocalX1,\n  },\n};\n\nconst desc = {\n  base: {\n    gap: spacing.SizesDdsSpacingLocalX025,\n    color: colors.DdsColorNeutralsGray9,\n  },\n  lastChild: {\n    marginBottom: spacing.SizesDdsSpacingLocalX1,\n  },\n};\n\nconst list = {\n  beforeNextTerm: {\n    marginTop: spacing.SizesDdsSpacingLocalX2,\n  },\n  rowDirection: {\n    columnGap: spacing.SizesDdsSpacingLocalX2,\n  },\n};\n\nconst group = {\n  base: {\n    margin: spacing.SizesDdsSpacingLocalX2,\n  },\n};\n\nexport const descriptionListTokens = {\n  term,\n  desc,\n  list,\n  group,\n};\n","import { forwardRef } from 'react';\nimport styled, { css } from 'styled-components';\nimport { selection } from '../../helpers/styling';\nimport { BaseComponentPropsWithChildren, getBaseHTMLProps } from '../../types';\nimport { descriptionListTokens as tokens } from './DescriptionList.tokens';\n\nconst { term, desc, list } = tokens;\n\ntype DListProps = Pick<DescriptionListProps, 'appearance' | 'direction'>;\n\nconst DList = styled.dl<DListProps>`\n  margin: 0;\n  *::selection {\n    ${selection}\n  }\n  ${({ appearance }) =>\n    appearance &&\n    css`\n      dt {\n        color: ${term.appearance[appearance].color};\n        ${appearance === 'bold' &&\n        css`\n          font-weight: 600;\n        `}\n      }\n    `}\n  display: flex;\n  flex-direction: column;\n  &:not(:has(> dt):has(> dd)) {\n    flex-direction: ${({ direction = 'column' }) => direction};\n  }\n  flex-wrap: wrap;\n  column-gap: ${list.rowDirection.columnGap};\n  row-gap: 0;\n  & > dt:first-of-type {\n    margin-top: ${term.firstOfType.marginTop};\n  }\n  & > dd:last-child {\n    margin-bottom: ${desc.lastChild.marginBottom};\n  }\n  dd + dt {\n    margin-top: ${list.beforeNextTerm.marginTop};\n  }\n`;\n\nexport type DescriptionListAppearance = 'small' | 'bold';\n\nexport type DescriptionListProps = BaseComponentPropsWithChildren<\n  HTMLDListElement,\n  {\n    /**PÃ¥virker tekst styling. */\n    appearance?: DescriptionListAppearance;\n    /**Setter flex-direction. NB! Fungerer kun ved bruk av `DescriptionListGroup` som barn av `DescriptionList`.\n     *  @default \"column\"\n     */\n    direction?: 'row' | 'column';\n  }\n>;\n\nexport const DescriptionList = forwardRef<\n  HTMLDListElement,\n  DescriptionListProps\n>((props, ref) => {\n  const {\n    appearance = 'bold',\n    direction = 'column',\n    children,\n    id,\n    className,\n    htmlProps,\n    ...rest\n  } = props;\n\n  const dListProps = {\n    ...getBaseHTMLProps(id, className, htmlProps, rest),\n    appearance,\n    direction,\n    ref,\n  };\n\n  return <DList {...dListProps}>{children}</DList>;\n});\n\nDescriptionList.displayName = 'DescriptionList';\n","import { forwardRef, HTMLAttributes } from 'react';\nimport styled from 'styled-components';\n\nconst DListTerm = styled.dt``;\n\nexport type DescriptionListTermProps = HTMLAttributes<HTMLElement>;\n\nexport const DescriptionListTerm = forwardRef<\n  HTMLElement,\n  DescriptionListTermProps\n>(({ children, ...rest }, ref) => {\n  const dListTermProps = {\n    ref,\n    ...rest,\n  };\n\n  return <DListTerm {...dListTermProps}>{children}</DListTerm>;\n});\n\nDescriptionListTerm.displayName = 'DescriptionListTerm';\n","import { forwardRef } from 'react';\nimport styled from 'styled-components';\nimport { descriptionListTokens as tokens } from './DescriptionList.tokens';\nimport { Icon } from '../Icon';\nimport { BaseComponentPropsWithChildren, getBaseHTMLProps } from '../../types';\nimport { SvgIcon } from '../../icons/utils';\n\nconst DListDesc = styled.dd`\n  margin-inline-start: 0;\n  align-items: center;\n  display: flex;\n  color: ${tokens.desc.base.color};\n  gap: ${tokens.desc.base.gap};\n`;\n\nexport type DescriptionListDescProps = BaseComponentPropsWithChildren<\n  HTMLElement,\n  {\n    /**Ikon som vises ved siden av teksten. */\n    icon?: SvgIcon;\n  }\n>;\n\nexport const DescriptionListDesc = forwardRef<\n  HTMLElement,\n  DescriptionListDescProps\n>((props, ref) => {\n  const { children, icon, id, className, htmlProps, ...rest } = props;\n\n  const dListDescProps = {\n    ...getBaseHTMLProps(id, className, htmlProps, rest),\n    children,\n    ref,\n  };\n\n  return (\n    <DListDesc {...dListDescProps}>\n      {icon && <Icon icon={icon} />} {children}\n    </DListDesc>\n  );\n});\n\nDescriptionListDesc.displayName = 'DescriptionListDesc';\n"],"names":["spacing","colors","ddsBaseTokens","term","desc","list","group","descriptionListTokens","tokens","DList","styled","selection","appearance","css","direction","DescriptionList","forwardRef","props","ref","children","id","className","htmlProps","rest","dListProps","getBaseHTMLProps","jsx","DListTerm","DescriptionListTerm","dListTermProps","DListDesc","DescriptionListDesc","icon","dListDescProps","jsxs","Icon"],"mappings":"4PAEA,KAAM,CAAE,QAAAA,EAAS,OAAAC,CAAW,EAAAC,EAEtBC,EAAO,CACX,WAAY,CACV,MAAO,CACL,MAAOF,EAAO,qBAChB,EACA,KAAM,CACJ,MAAOA,EAAO,qBAChB,CACF,EACA,YAAa,CACX,UAAWD,EAAQ,sBACrB,CACF,EAEMI,EAAO,CACX,KAAM,CACJ,IAAKJ,EAAQ,yBACb,MAAOC,EAAO,qBAChB,EACA,UAAW,CACT,aAAcD,EAAQ,sBACxB,CACF,EAEMK,EAAO,CACX,eAAgB,CACd,UAAWL,EAAQ,sBACrB,EACA,aAAc,CACZ,UAAWA,EAAQ,sBACrB,CACF,EAEMM,EAAQ,CACZ,KAAM,CACJ,OAAQN,EAAQ,sBAClB,CACF,EAEaO,EAAwB,CAAA,KACnCJ,EAAA,KACAC,EAAA,KACAC,EACA,MAAAC,CACF,EC1CM,CAAE,KAAAH,EAAM,KAAAC,EAAM,KAAAC,CAAA,EAASG,EAIvBC,EAAQC,EAAO;AAAA;AAAA;AAAA,MAGfC;AAAA;AAAA,IAEF,CAAC,CAAE,WAAAC,KACHA,GACAC;AAAAA;AAAAA,iBAEaV,EAAK,WAAWS,CAAU,EAAE;AAAA,UACnCA,IAAe,QACjBC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,sBAQc,CAAC,CAAE,UAAAC,EAAY,QAAA,IAAeA;AAAA;AAAA;AAAA,gBAGpCT,EAAK,aAAa;AAAA;AAAA;AAAA,kBAGhBF,EAAK,YAAY;AAAA;AAAA;AAAA,qBAGdC,EAAK,UAAU;AAAA;AAAA;AAAA,kBAGlBC,EAAK,eAAe;AAAA;AAAA,EAkBzBU,EAAkBC,EAAA,WAG7B,CAACC,EAAOC,IAAQ,CACV,KAAA,CACJ,WAAAN,EAAa,OACb,UAAAE,EAAY,SACZ,SAAAK,EACA,GAAAC,EACA,UAAAC,EACA,UAAAC,EACA,GAAGC,CACD,EAAAN,EAEEO,EAAa,CACjB,GAAGC,EAAiBL,EAAIC,EAAWC,EAAWC,CAAI,EAClD,WAAAX,EACA,UAAAE,EACA,IAAAI,CAAA,EAGF,OAAQQ,EAAAjB,EAAA,CAAO,GAAGe,EAAa,SAAAL,CAAS,CAAA,CAC1C,CAAC,EAEDJ,EAAgB,YAAc,kBChF9B,MAAMY,EAAYjB,EAAO,KAIZkB,EAAsBZ,aAGjC,CAAC,CAAE,SAAAG,EAAU,GAAGI,GAAQL,IAAQ,CAChC,MAAMW,EAAiB,CACrB,IAAAX,EACA,GAAGK,CAAA,EAGL,OAAQG,EAAAC,EAAA,CAAW,GAAGE,EAAiB,SAAAV,CAAS,CAAA,CAClD,CAAC,EAEDS,EAAoB,YAAc,sBCZlC,MAAME,EAAYpB,EAAO;AAAA;AAAA;AAAA;AAAA,WAIdF,EAAO,KAAK,KAAK;AAAA,SACnBA,EAAO,KAAK,KAAK;AAAA,EAWbuB,EAAsBf,EAAA,WAGjC,CAACC,EAAOC,IAAQ,CACV,KAAA,CAAE,SAAAC,EAAU,KAAAa,EAAM,GAAAZ,EAAI,UAAAC,EAAW,UAAAC,EAAW,GAAGC,CAAS,EAAAN,EAExDgB,EAAiB,CACrB,GAAGR,EAAiBL,EAAIC,EAAWC,EAAWC,CAAI,EAClD,SAAAJ,EACA,IAAAD,CAAA,EAIA,OAAAgB,EAACJ,EAAW,CAAA,GAAGG,EACZ,SAAA,CAAQD,GAAAN,EAACS,GAAK,KAAAH,CAAY,CAAA,EAAG,IAAEb,CAClC,CAAA,CAAA,CAEJ,CAAC,EAEDY,EAAoB,YAAc"}