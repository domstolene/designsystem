{"version":3,"file":"RadioButton-767efa9d.js","sources":["../../../../packages/components/src/components/SelectionControl/RadioButton/RadioButtonGroupContext.tsx","../../../../packages/components/src/components/SelectionControl/RadioButton/RadioButton.tsx"],"sourcesContent":["import { Nullable } from '@norges-domstoler/dds-core';\nimport React, { ChangeEvent, useContext } from 'react';\n\nexport interface RadioButtonGroup {\n  disabled?: boolean;\n  readOnly?: boolean;\n  name?: string;\n  value?: string | number | null;\n  error?: boolean;\n  errorMessageId?: string;\n  required?: boolean;\n  onChange: (event: ChangeEvent<HTMLInputElement>) => void;\n}\n\nexport const RadioButtonGroupContext =\n  React.createContext<Nullable<RadioButtonGroup>>(null);\n\nexport const useRadioButtonGroup = () => {\n  return useContext(RadioButtonGroupContext);\n};\n","import { ChangeEvent, forwardRef, useId } from 'react';\nimport {\n  getBaseHTMLProps,\n  joinClassNames,\n  Nullable,\n} from '@norges-domstoler/dds-core';\nimport { Typography } from '@norges-domstoler/dds-typography';\nimport { HiddenInput } from '@norges-domstoler/dds-form';\n\nimport { RadioButtonProps } from './RadioButton.types';\nimport {\n  RadioButtonGroup,\n  useRadioButtonGroup,\n} from './RadioButtonGroupContext';\nimport { Container, CustomSelectionControl } from '../SelectionControl.styles';\n\nconst isValueEqualToGroupValueOrFalsy = (\n  value: unknown,\n  group: Nullable<RadioButtonGroup>\n): boolean => {\n  if (typeof value !== 'undefined' && value !== null && group) {\n    if (typeof value === 'number') {\n      return value === Number(group?.value);\n    }\n    return value === group?.value;\n  }\n  return !!value;\n};\n\nexport const RadioButton = forwardRef<HTMLInputElement, RadioButtonProps>(\n  (props, ref) => {\n    const {\n      id,\n      name,\n      label,\n      disabled,\n      readOnly,\n      error,\n      checked,\n      value,\n      children,\n      required,\n      onChange,\n      'aria-describedby': ariaDescribedby,\n      className,\n      htmlProps = {},\n      ...rest\n    } = props;\n\n    const {\n      className: htmlPropsClassName,\n      style,\n      ...restHtmlProps\n    } = htmlProps;\n\n    const generatedId = useId();\n    const uniqueId = id ?? `${generatedId}-radioButton`;\n    const hasLabel = !!label;\n\n    const radioButtonGroup = useRadioButtonGroup();\n\n    const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n      onChange && onChange(event);\n      radioButtonGroup?.onChange(event);\n    };\n\n    const describedByIds = [];\n    if (radioButtonGroup?.errorMessageId)\n      describedByIds.push(radioButtonGroup?.errorMessageId);\n    if (ariaDescribedby) describedByIds.push(ariaDescribedby);\n\n    const inputProps = {\n      ...getBaseHTMLProps(uniqueId, restHtmlProps, rest),\n      type: 'radio',\n      name: name ?? radioButtonGroup?.name,\n      disabled:\n        disabled ||\n        readOnly ||\n        radioButtonGroup?.disabled ||\n        radioButtonGroup?.readOnly,\n      required: required || radioButtonGroup?.required,\n      checked:\n        typeof checked !== 'undefined'\n          ? checked\n          : isValueEqualToGroupValueOrFalsy(value, radioButtonGroup),\n      onChange: handleChange,\n      value: value,\n      'aria-describedby':\n        describedByIds.length > 0 ? describedByIds.join(' ') : undefined,\n      'aria-invalid': error || radioButtonGroup?.error ? true : undefined,\n    };\n\n    const containerProps = {\n      error: error || radioButtonGroup?.error,\n      disabled: disabled || radioButtonGroup?.disabled,\n      readOnly: readOnly || radioButtonGroup?.readOnly,\n      style,\n      className: joinClassNames(className, htmlPropsClassName),\n      htmlFor: uniqueId,\n      controlType: 'radio',\n      hasLabel,\n    };\n\n    return (\n      <Container {...containerProps} htmlFor={uniqueId} controlType=\"radio\">\n        <HiddenInput {...inputProps} ref={ref} />\n        <CustomSelectionControl controlType=\"radio\" />\n        <Typography as=\"span\">{children ?? label}</Typography>\n      </Container>\n    );\n  }\n);\n\nRadioButton.displayName = 'RadioButton';\n"],"names":["RadioButtonGroupContext","React","useRadioButtonGroup","useContext","isValueEqualToGroupValueOrFalsy","value","group","RadioButton","forwardRef","props","ref","id","name","label","disabled","readOnly","error","checked","children","required","onChange","ariaDescribedby","className","htmlProps","rest","htmlPropsClassName","style","restHtmlProps","generatedId","useId","uniqueId","hasLabel","radioButtonGroup","handleChange","event","describedByIds","inputProps","getBaseHTMLProps","containerProps","joinClassNames","Container","jsx","HiddenInput","CustomSelectionControl","Typography"],"mappings":"qTAca,MAAAA,EACXC,EAAM,cAA0C,IAAI,EAEzCC,EAAsB,IAC1BC,EAAAA,WAAWH,CAAuB,ECFrCI,EAAkC,CACtCC,EACAC,IAEI,OAAOD,EAAU,KAAeA,IAAU,MAAQC,EAChD,OAAOD,GAAU,SACZA,IAAU,OAAOC,GAAA,YAAAA,EAAO,KAAK,EAE/BD,KAAUC,GAAA,YAAAA,EAAO,OAEnB,CAAC,CAACD,EAGEE,EAAcC,EAAA,WACzB,CAACC,EAAOC,IAAQ,CACR,KAAA,CACJ,GAAAC,EACA,KAAAC,EACA,MAAAC,EACA,SAAAC,EACA,SAAAC,EACA,MAAAC,EACA,QAAAC,EACA,MAAAZ,EACA,SAAAa,EACA,SAAAC,EACA,SAAAC,EACA,mBAAoBC,EACpB,UAAAC,EACA,UAAAC,EAAY,CAAC,EACb,GAAGC,CACD,EAAAf,EAEE,CACJ,UAAWgB,EACX,MAAAC,EACA,GAAGC,CACD,EAAAJ,EAEEK,EAAcC,EAAAA,QACdC,EAAWnB,GAAM,GAAGiB,gBACpBG,EAAW,CAAC,CAAClB,EAEbmB,EAAmB9B,IAEnB+B,EAAgBC,GAAyC,CAC7Dd,GAAYA,EAASc,CAAK,EAC1BF,GAAA,MAAAA,EAAkB,SAASE,EAAK,EAG5BC,EAAiB,CAAA,EACnBH,GAAA,MAAAA,EAAkB,gBACLG,EAAA,KAAKH,GAAA,YAAAA,EAAkB,cAAc,EAClDX,GAAiBc,EAAe,KAAKd,CAAe,EAExD,MAAMe,EAAa,CACjB,GAAGC,EAAiBP,EAAUH,EAAeH,CAAI,EACjD,KAAM,QACN,KAAMZ,IAAQoB,GAAA,YAAAA,EAAkB,MAChC,SACElB,GACAC,IACAiB,GAAA,YAAAA,EAAkB,YAClBA,GAAA,YAAAA,EAAkB,UACpB,SAAUb,IAAYa,GAAA,YAAAA,EAAkB,UACxC,QACE,OAAOf,EAAY,IACfA,EACAb,EAAgCC,EAAO2B,CAAgB,EAC7D,SAAUC,EACV,MAAA5B,EACA,mBACE8B,EAAe,OAAS,EAAIA,EAAe,KAAK,GAAG,EAAI,OACzD,eAAgBnB,GAASgB,GAAA,MAAAA,EAAkB,MAAQ,GAAO,MAAA,EAGtDM,EAAiB,CACrB,MAAOtB,IAASgB,GAAA,YAAAA,EAAkB,OAClC,SAAUlB,IAAYkB,GAAA,YAAAA,EAAkB,UACxC,SAAUjB,IAAYiB,GAAA,YAAAA,EAAkB,UACxC,MAAAN,EACA,UAAWa,EAAejB,EAAWG,CAAkB,EACvD,QAASK,EACT,YAAa,QACb,SAAAC,CAAA,EAGF,SACGS,EAAW,CAAA,GAAGF,EAAgB,QAASR,EAAU,YAAY,QAC5D,SAAA,CAACW,EAAAC,EAAA,CAAa,GAAGN,EAAY,IAAA1B,CAAU,CAAA,EACvC+B,EAACE,EAAuB,CAAA,YAAY,OAAQ,CAAA,EAC3CF,EAAAG,EAAA,CAAW,GAAG,OAAQ,YAAY/B,EAAM,CAC3C,CAAA,CAAA,CAEJ,CACF,EAEAN,EAAY,YAAc"}