{"version":3,"file":"GlobalMessage-7ae95635.js","sources":["../../../../packages/components/src/components/GlobalMessage/GlobalMessage.tokens.tsx","../../../../packages/components/src/components/GlobalMessage/GlobalMessage.tsx"],"sourcesContent":["import { ddsBaseTokens } from '@norges-domstoler/dds-design-tokens';\nimport { ErrorIcon, InfoIcon, WarningIcon } from '@norges-domstoler/dds-icons';\nimport { SvgIcon } from '@norges-domstoler/dds-icons';\nimport { ButtonPurpose } from '../Button';\nimport { StaticTypographyType } from '@norges-domstoler/dds-typography';\nimport { GlobalMessagePurpose } from './GlobalMessage';\n\nconst { colors, spacing } = ddsBaseTokens;\n\nexport const typographyType: StaticTypographyType = 'bodySans02';\n\nconst container = {\n  borderBottom: '2px solid',\n  padding: `0 ${spacing.SizesDdsSpacingLocalX1}`,\n  info: {\n    borderColor: colors.DdsColorInfoLighter,\n    backgroundColor: colors.DdsColorInfoLightest,\n  },\n  danger: {\n    borderColor: colors.DdsColorDangerLighter,\n    backgroundColor: colors.DdsColorDangerLightest,\n  },\n  warning: {\n    borderColor: colors.DdsColorWarningLighter,\n    backgroundColor: colors.DdsColorWarningLightest,\n  },\n};\n\nconst contentContainer = {\n  paddingRight: spacing.SizesDdsSpacingLocalX15,\n  paddingTop: spacing.SizesDdsSpacingLocalX075,\n  paddingBottom: spacing.SizesDdsSpacingLocalX075,\n  gap: spacing.SizesDdsSpacingLocalX075,\n  withClosable: {\n    paddingRight: spacing.SizesDdsSpacingLocalX075,\n  },\n};\n\nexport const purposeVariants: {\n  [k in GlobalMessagePurpose]: {\n    icon: SvgIcon;\n    closeButtonPurpose: ButtonPurpose;\n  };\n} = {\n  info: {\n    icon: InfoIcon,\n    closeButtonPurpose: 'secondary',\n  },\n  danger: {\n    icon: ErrorIcon,\n    closeButtonPurpose: 'danger',\n  },\n  warning: {\n    icon: WarningIcon,\n    closeButtonPurpose: 'secondary',\n  },\n};\n\nexport const globalMessageTokens = {\n  container,\n  contentContainer,\n  icon: {\n    marginRight: `${spacing.SizesDdsSpacingLocalX075}`,\n    info: {\n      color: colors.DdsColorInfoDarkest,\n    },\n    danger: {\n      color: colors.DdsColorDangerDarkest,\n    },\n    warning: {\n      color: colors.DdsColorWarningDarkest,\n    },\n  },\n};\n","import styled, { css } from 'styled-components';\nimport { Button } from '../Button';\nimport { forwardRef, useState } from 'react';\nimport {\n  globalMessageTokens as tokens,\n  purposeVariants,\n  typographyType,\n} from './GlobalMessage.tokens';\nimport { Icon } from '@norges-domstoler/dds-icons';\nimport { Typography } from '@norges-domstoler/dds-typography';\nimport {\n  BaseComponentPropsWithChildren,\n  getBaseHTMLProps,\n} from '@norges-domstoler/dds-core';\nimport { CloseIcon } from '@norges-domstoler/dds-icons';\nimport { getFontStyling } from '@norges-domstoler/dds-typography';\n\nconst { container, contentContainer, icon } = tokens;\n\ntype ContainerProps = Pick<GlobalMessageProps, 'purpose'>;\n\nconst Container = styled.div<ContainerProps>`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  box-sizing: border-box;\n  width: 100%;\n  padding: ${container.padding};\n  border-bottom: ${container.borderBottom};\n  ${getFontStyling(typographyType, true)}\n  ${({ purpose }) =>\n    purpose &&\n    css`\n      border-color: ${container[purpose].borderColor};\n      background-color: ${container[purpose].backgroundColor};\n    `}\n`;\n\nconst MessageIconWrapper = styled(Icon)`\n  margin-right: ${icon.marginRight};\n`;\n\nconst ControlsContainer = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\ntype ContentContainerProps = Pick<GlobalMessageProps, 'closable'>;\n\nconst ContentContainer = styled.div<ContentContainerProps>`\n  display: flex;\n  align-items: center;\n  padding-top: ${contentContainer.paddingTop};\n  padding-bottom: ${contentContainer.paddingBottom};\n  padding-right: ${({ closable }) =>\n    closable\n      ? contentContainer.withClosable.paddingRight\n      : contentContainer.paddingRight};\n`;\n\nexport type GlobalMessagePurpose = 'info' | 'warning' | 'danger';\n\nexport type GlobalMessageProps = BaseComponentPropsWithChildren<\n  HTMLDivElement,\n  {\n    /**Meldingen som vises til brukeren. Brukes kun når meldingen er en `string`. */\n    message?: string;\n    /**Formålet med meldingen. Påvirker styling. */\n    purpose?: GlobalMessagePurpose;\n    /**Indikerer om meldingen skal være lukkbar. */\n    closable?: boolean;\n    /**Ekstra logikk å kjøre når meldingen lukkes. */\n    onClose?: () => void;\n  }\n>;\n\nexport const GlobalMessage = forwardRef<HTMLDivElement, GlobalMessageProps>(\n  (props, ref) => {\n    const {\n      message,\n      purpose = 'info',\n      closable,\n      onClose,\n      children,\n      id,\n      className,\n      htmlProps,\n      ...rest\n    } = props;\n\n    const [isClosed, setClosed] = useState(false);\n\n    const containerProps = {\n      ...getBaseHTMLProps(id, className, htmlProps, rest),\n      ref,\n      purpose,\n    };\n\n    return !isClosed ? (\n      <Container {...containerProps}>\n        <ContentContainer closable={closable}>\n          <MessageIconWrapper\n            icon={purposeVariants[purpose].icon}\n            color={icon[purpose].color}\n          />\n          {children ?? <Typography as=\"span\">{message}</Typography>}\n        </ContentContainer>\n        <ControlsContainer>\n          {closable && (\n            <Button\n              icon={CloseIcon}\n              purpose={purposeVariants[purpose].closeButtonPurpose}\n              appearance=\"borderless\"\n              onClick={() => {\n                setClosed(true);\n                onClose && onClose();\n              }}\n              size=\"small\"\n              aria-label=\"Lukk melding\"\n            />\n          )}\n        </ControlsContainer>\n      </Container>\n    ) : null;\n  },\n);\n\nGlobalMessage.displayName = 'GlobalMessage';\n"],"names":["colors","spacing","ddsBaseTokens","typographyType","container","contentContainer","purposeVariants","InfoIcon","ErrorIcon","WarningIcon","globalMessageTokens","icon","tokens","Container","styled","getFontStyling","purpose","css","MessageIconWrapper","Icon","ControlsContainer","ContentContainer","closable","GlobalMessage","forwardRef","props","ref","message","onClose","children","id","className","htmlProps","rest","isClosed","setClosed","useState","containerProps","getBaseHTMLProps","jsxs","jsx","Typography","Button","CloseIcon"],"mappings":"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"}