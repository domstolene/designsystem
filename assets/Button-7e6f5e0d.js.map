{"version":3,"file":"Button-7e6f5e0d.js","sources":["../../../../packages/components/src/components/Button/Button.styles.tsx","../../../../packages/components/src/components/Button/Button.tsx"],"sourcesContent":["import styled, { css } from 'styled-components';\nimport { normalizeButton, selection } from '@norges-domstoler/dds-core';\nimport { getFontStyling } from '@norges-domstoler/dds-typography';\nimport { buttonTokens as tokens, typographyTypes } from './Button.tokens';\nimport {\n  ButtonAppearance,\n  ButtonPurpose,\n  ButtonSize,\n  IconPosition,\n} from './Button.types';\nimport {\n  focusVisibleTransitionValue,\n  focusVisible,\n} from '@norges-domstoler/dds-form';\n\nconst {\n  button: { base, sizes, appearances },\n} = tokens;\n\nconst getAppearanceAndPurposeStyling = (\n  appearance: ButtonAppearance,\n  purpose: ButtonPurpose\n) => {\n  switch (appearance) {\n    case 'filled':\n    case 'rounded':\n      return css`\n        background-color: ${appearances[appearance].purpose[purpose].base\n          .backgroundColor};\n        border-color: ${appearances[appearance].purpose[purpose].base\n          .borderColor};\n        &:hover {\n          background-color: ${appearances[appearance].purpose[purpose].hover\n            .backgroundColor};\n          border-color: ${appearances[appearance].purpose[purpose].hover\n            .borderColor};\n        }\n        &:active {\n          background-color: ${appearances[appearance].purpose[purpose].active\n            .backgroundColor};\n          border-color: ${appearances[appearance].purpose[purpose].active\n            .borderColor};\n        }\n      `;\n    case 'ghost':\n      return css`\n        background-color: ${appearances.ghost.base.backgroundColor};\n        border-color: ${appearances.ghost.purpose[purpose].base.borderColor};\n        &:hover {\n          color: ${appearances.ghost.purpose[purpose].hover.color};\n          border-color: ${appearances.ghost.purpose[purpose].hover.borderColor};\n          box-shadow: ${appearances.ghost.purpose[purpose].hover.boxShadow};\n        }\n        &:active {\n          color: ${appearances.ghost.purpose[purpose].active.color};\n          border-color: ${appearances.ghost.purpose[purpose].active\n            .borderColor};\n          box-shadow: ${appearances.ghost.purpose[purpose].active.boxShadow};\n        }\n      `;\n    case 'borderless':\n      return css`\n        background-color: ${appearances.borderless.base.backgroundColor};\n        border-color: ${appearances.borderless.base.borderColor};\n        text-decoration: ${appearances.borderless.base.textDecoration};\n        text-decoration-color: ${appearances.borderless.base\n          .textDecorationColor};\n        &:hover {\n          color: ${appearances.borderless.purpose[purpose].hover.color};\n          text-decoration-color: ${appearances.borderless.purpose[purpose].hover\n            .textDecorationColor};\n        }\n        &:active {\n          color: ${appearances.borderless.purpose[purpose].active.color};\n          text-decoration-color: ${appearances.borderless.purpose[purpose]\n            .active.textDecorationColor};\n        }\n      `;\n  }\n};\n\ntype ButtonWrapperProps = {\n  appearance: ButtonAppearance;\n  purpose: ButtonPurpose;\n  size: ButtonSize;\n  fullWidth: boolean;\n  hasIcon: boolean;\n  hasLabel: boolean;\n  isLoading: boolean;\n  iconPosition?: IconPosition;\n};\n\nexport const ButtonWrapper = styled.button<ButtonWrapperProps>`\n  ${normalizeButton}\n  border: ${base.border};\n  user-select: text;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  height: fit-content;\n  width: ${({ fullWidth }) => (fullWidth ? '100%' : 'fit-content')};\n  cursor: ${({ isLoading }) => (isLoading ? 'not-allowed' : 'pointer')};\n  box-shadow: none;\n  text-decoration: none;\n\n  @media (prefers-reduced-motion: no-preference) {\n    transition: background-color 0.2s, text-decoration-color 0.2s,\n      box-shadow 0.2s, border-color 0.2s, color 0.2s,\n      ${focusVisibleTransitionValue};\n  }\n\n  ${({ appearance, purpose }) =>\n    css`\n      border-radius: ${appearances[appearance].base.borderRadius};\n      box-shadow: ${appearances[appearance].base.boxShadow};\n      color: ${appearances[appearance].purpose[purpose].base.color};\n      ${getAppearanceAndPurposeStyling(appearance, purpose)}\n    `}\n\n  ${({ hasIcon, hasLabel, appearance, purpose }) =>\n    hasIcon &&\n    !hasLabel &&\n    appearance === 'borderless' &&\n    css`\n      &:hover {\n        border-color: ${appearances[appearance].purpose[purpose].icon.hover.borderColor};\n        box-shadow: ${appearances[appearance].purpose[purpose].icon.hover.boxShadow};\n      }\n      &:active {\n        border-color:: ${appearances[appearance].purpose[purpose].icon.active.borderColor};\n        box-shadow: ${appearances[appearance].purpose[purpose].icon.active.boxShadow};\n      }\n    `}\n    ${({ hasIcon, hasLabel, size }) =>\n    hasIcon &&\n    hasLabel &&\n    css`\n      gap: ${sizes[size].textAndIcon.gap};\n    `}\n\n  ${({ size, hasLabel }) =>\n    hasLabel\n      ? css`\n          ${getFontStyling(typographyTypes[size])}\n          padding: ${sizes[size].text.padding};\n        `\n      : css`\n          font-size: ${sizes[size].justIcon.icon.fontSize};\n          padding: ${sizes[size].justIcon.icon.padding};\n        `}\n\n  ${({ fullWidth, hasIcon, hasLabel, isLoading, iconPosition }) =>\n    fullWidth &&\n    (!hasIcon || !hasLabel || isLoading\n      ? css`\n          justify-content: center;\n        `\n      : hasIcon && hasLabel && iconPosition === 'left'\n      ? css`\n          justify-content: left;\n        `\n      : css`\n          justify-content: space-between;\n        `)}\n\n  &:focus-visible, &.focus-visible {\n    ${focusVisible}\n  }\n\n  *::selection {\n    ${selection}\n  }\n`;\n\ntype StyledIconWrapperSpanProps = {\n  iconPosition?: IconPosition;\n  size: ButtonSize;\n  absolutePosition?: boolean;\n  isHidden?: boolean;\n  justIcon?: boolean;\n};\n\nexport const StyledIconWrapperSpan = styled.span<StyledIconWrapperSpanProps>`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  ${({ absolutePosition }) =>\n    absolutePosition &&\n    css`\n      position: absolute;\n    `}\n  ${({ isHidden }) =>\n    isHidden &&\n    css`\n      visibility: hidden;\n    `}\n  ${({ justIcon, size }) =>\n    justIcon &&\n    css`\n      height: ${sizes[size].justIcon.wrapper.height};\n      width: ${sizes[size].justIcon.wrapper.width};\n    `}\n`;\n\ntype LabelProps = {\n  isHidden?: boolean;\n};\n\nexport const Label = styled.span<LabelProps>`\n  ${({ isHidden }) =>\n    isHidden &&\n    css`\n      visibility: hidden;\n    `}\n`;\n","import { ElementType, forwardRef, MouseEvent } from 'react';\nimport { Icon } from '@norges-domstoler/dds-icons';\nimport { getBaseHTMLProps } from '@norges-domstoler/dds-core';\n\nimport { buttonTokens as tokens } from './Button.tokens';\nimport { Spinner } from '../Spinner';\nimport { ButtonProps } from './Button.types';\nimport { ButtonWrapper, StyledIconWrapperSpan, Label } from './Button.styles';\n\nconst {\n  button: { sizes, appearances },\n} = tokens;\n\nexport const Button = forwardRef<HTMLButtonElement, ButtonProps>(\n  (props, ref) => {\n    const {\n      label,\n      children,\n      purpose = 'primary',\n      size = 'medium',\n      iconPosition = 'left',\n      appearance = 'filled',\n      href,\n      target,\n      loading = false,\n      loadingTooltip = 'Lagring pågår',\n      fullWidth = false,\n      icon,\n      onClick,\n      onFocus,\n      onBlur,\n      id,\n      className,\n      htmlProps,\n      ...rest\n    } = props;\n\n    const as: ElementType = href ? 'a' : 'button';\n\n    const hasLabel = !!children || !!label;\n    const hasIcon = !!icon;\n\n    const wrapperProps = {\n      ...getBaseHTMLProps(id, className, htmlProps, rest),\n      href,\n      as,\n      rel: href ? 'noreferrer noopener' : undefined,\n      target: href && target ? target : undefined,\n      ref,\n      appearance,\n      purpose,\n      iconPosition,\n      fullWidth,\n      hasLabel: hasLabel,\n      hasIcon: hasIcon,\n      isLoading: loading,\n      size,\n      onClick: (\n        event: MouseEvent<HTMLButtonElement, globalThis.MouseEvent>\n      ) => {\n        if (!loading && onClick) {\n          onClick(event);\n        }\n      },\n      onFocus,\n      onBlur,\n    };\n\n    const isIconButton = !hasLabel && hasIcon;\n\n    const iconElement = icon && (\n      <StyledIconWrapperSpan\n        size={size}\n        isHidden={hasIcon && loading}\n        justIcon={isIconButton}\n      >\n        <Icon icon={icon} iconSize=\"inherit\" />\n      </StyledIconWrapperSpan>\n    );\n\n    return (\n      <ButtonWrapper {...wrapperProps} aria-disabled={loading}>\n        {!isIconButton && (\n          <>\n            {iconPosition === 'left' && iconElement}\n            <Label isHidden={loading} aria-hidden={loading}>\n              {children ?? label}\n            </Label>\n            {iconPosition === 'right' && iconElement}\n          </>\n        )}\n        {isIconButton && iconElement}\n        {loading && (\n          <StyledIconWrapperSpan\n            size={size}\n            absolutePosition={hasIcon || hasLabel}\n          >\n            <Spinner\n              color={appearances[appearance].purpose[purpose].base.color}\n              size={sizes[size].justIcon.icon.fontSize}\n              tooltip={loadingTooltip}\n            />\n          </StyledIconWrapperSpan>\n        )}\n      </ButtonWrapper>\n    );\n  }\n);\n\nButton.displayName = 'Button';\n"],"names":["base","sizes","appearances","tokens","getAppearanceAndPurposeStyling","appearance","purpose","css","ButtonWrapper","styled","normalizeButton","fullWidth","isLoading","focusVisibleTransitionValue","hasIcon","hasLabel","size","getFontStyling","typographyTypes","iconPosition","focusVisible","selection","StyledIconWrapperSpan","absolutePosition","isHidden","justIcon","Label","Button","forwardRef","props","ref","label","children","href","target","loading","loadingTooltip","icon","onClick","onFocus","onBlur","id","className","htmlProps","rest","as","wrapperProps","getBaseHTMLProps","event","isIconButton","iconElement","jsx","Icon","jsxs","Fragment","Spinner"],"mappings":"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"}