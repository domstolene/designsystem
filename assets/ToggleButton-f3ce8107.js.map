{"version":3,"file":"ToggleButton-f3ce8107.js","sources":["../../../../packages/components/src/components/ToggleButton/ToggleButton.tokens.tsx","../../../../packages/components/src/components/ToggleButton/ToggleButton.tsx"],"sourcesContent":["import { ddsBaseTokens } from '@norges-domstoler/dds-design-tokens';\n\nimport { buttonTokens, typographyTypes } from '../Button/Button.tokens';\nimport { selectionControlTokens } from '../SelectionControl/SelectionControl.tokens';\n\nconst { colors, spacing } = ddsBaseTokens;\nconst { button } = buttonTokens;\nconst { selectionControl } = selectionControlTokens;\n\nexport const typographyType = typographyTypes.small;\n\nconst toggleButton = {\n  border: button.base.border,\n  backgroundColor: colors.DdsColorNeutralsWhite,\n  color: colors.DdsColorNeutralsGray7,\n  gap: spacing.SizesDdsSpacingLocalX05,\n  borderRadius: button.appearances.rounded.base.borderRadius,\n  padding: button.sizes.small.text.padding,\n  hover: selectionControl.hover.base,\n  checked: {\n    ...selectionControl.checked.base,\n    color: colors.DdsColorNeutralsWhite,\n    hover: selectionControl.checked.hover,\n  },\n};\n\nconst group = {\n  gap: spacing.SizesDdsSpacingLocalX075,\n};\n\nconst container = {\n  gap: spacing.SizesDdsSpacingLocalX05,\n};\n\nexport const toggleButtonTokens = {\n  toggleButton,\n  group,\n  container,\n};\n","import { forwardRef, useId } from 'react';\nimport styled, { css } from 'styled-components';\nimport { Icon } from '@norges-domstoler/dds-icons';\nimport { selection, getBaseHTMLProps } from '@norges-domstoler/dds-core';\nimport { getFontStyling } from '@norges-domstoler/dds-typography';\nimport {\n  focusVisibleTransitionValue,\n  HiddenInput,\n  focusVisible,\n} from '@norges-domstoler/dds-form';\n\nimport {\n  toggleButtonTokens as tokens,\n  typographyType,\n} from './ToggleButton.tokens';\nimport { ToggleButtonProps } from './ToggleButton.types';\n\nconst { toggleButton } = tokens;\n\ntype ContentProps = {\n  hasIcon?: boolean;\n};\n\nconst Content = styled.span<ContentProps>`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  box-sizing: border-box;\n  cursor: pointer;\n  width: fit-content;\n  border: ${toggleButton.border};\n  background-color: ${toggleButton.backgroundColor};\n  color: ${toggleButton.color};\n  border-radius: ${toggleButton.borderRadius};\n  padding: ${toggleButton.padding};\n  ${getFontStyling(typographyType)}\n  @media (prefers-reduced-motion: no-preference) {\n    transition: border-color 0.2s, background-color 0.2s, box-shadow 0.2s,\n      ${focusVisibleTransitionValue};\n  }\n\n  ${({ hasIcon }) =>\n    hasIcon &&\n    css`\n      gap: ${toggleButton.gap};\n    `}\n\n  &::selection,\n  *::selection {\n    ${selection}\n  }\n  &:hover {\n    background-color: ${toggleButton.hover.backgroundColor};\n    box-shadow: ${toggleButton.hover.boxShadow};\n    border-color: ${toggleButton.hover.borderColor};\n  }\n`;\n\nconst Container = styled.label`\n  width: fit-content;\n  ${HiddenInput}:checked + ${Content} {\n    background-color: ${toggleButton.checked.backgroundColor};\n    border-color: ${toggleButton.checked.borderColor};\n    color: ${toggleButton.checked.color};\n  }\n  ${HiddenInput}:checked + ${Content}:hover {\n    background-color: ${toggleButton.checked.hover.backgroundColor};\n    border-color: ${toggleButton.checked.hover.borderColor};\n    box-shadow: ${toggleButton.checked.hover.boxShadow};\n  }\n  ${HiddenInput}:focus-visible + ${Content} {\n    ${focusVisible}\n  }\n`;\n\nexport const ToggleButton = forwardRef<HTMLInputElement, ToggleButtonProps>(\n  ({ id, label, icon, className, htmlProps, ...rest }, ref) => {\n    const generatedId = useId();\n    const uniqueId = id ?? `${generatedId}-toggleButton`;\n\n    const inputProps = {\n      ...getBaseHTMLProps(uniqueId, className, htmlProps, rest),\n      ref,\n      type: 'checkbox',\n    };\n\n    const containerProps = {\n      htmlFor: uniqueId,\n    };\n\n    return (\n      <Container {...containerProps}>\n        <HiddenInput {...inputProps} />\n        <Content hasIcon={!!icon}>\n          {icon && <Icon icon={icon} iconSize=\"inherit\" />} {label}\n        </Content>\n      </Container>\n    );\n  }\n);\n\nToggleButton.displayName = 'ToggleButton';\n"],"names":["colors","spacing","ddsBaseTokens","button","buttonTokens","selectionControl","selectionControlTokens","typographyType","typographyTypes","toggleButton","group","container","toggleButtonTokens","tokens","Content","styled","getFontStyling","focusVisibleTransitionValue","hasIcon","css","selection","Container","HiddenInput","focusVisible","ToggleButton","forwardRef","id","label","icon","className","htmlProps","rest","ref","generatedId","useId","uniqueId","inputProps","getBaseHTMLProps","jsxs","jsx","Icon"],"mappings":"mrBAKA,KAAM,CAAE,OAAAA,EAAQ,QAAAC,CAAY,EAAAC,EACtB,CAAE,OAAAC,CAAW,EAAAC,EACb,CAAE,iBAAAC,CAAqB,EAAAC,EAEhBC,EAAiBC,EAAgB,MAExCC,EAAe,CACnB,OAAQN,EAAO,KAAK,OACpB,gBAAiBH,EAAO,sBACxB,MAAOA,EAAO,sBACd,IAAKC,EAAQ,wBACb,aAAcE,EAAO,YAAY,QAAQ,KAAK,aAC9C,QAASA,EAAO,MAAM,MAAM,KAAK,QACjC,MAAOE,EAAiB,MAAM,KAC9B,QAAS,CACP,GAAGA,EAAiB,QAAQ,KAC5B,MAAOL,EAAO,sBACd,MAAOK,EAAiB,QAAQ,KAClC,CACF,EAEMK,EAAQ,CACZ,IAAKT,EAAQ,wBACf,EAEMU,EAAY,CAChB,IAAKV,EAAQ,uBACf,EAEaW,EAAqB,CAAA,aAChCH,EACA,MAAAC,EACA,UAAAC,CACF,ECrBA,CAAA,aAAAF,CAAA,EAAAI,EAMAC,EAAAC,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAuBN,EAAA;AAAA,sBAQEA,EAAA;AAAA,WACUA,EAAA;AAAA,mBACXA,EAAA;AAAA,aACQA,EAAA;AAAA,IACNO,EAAAT,CAAA;AAAA;AAAA;AAAA,QACOU;AAAA;AAAA;AAAA,IAGzB,CAAA,CAAA,QAAAC,KAAAA,GAAAC;AAAAA,aAKJV,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACsBW;AAAA;AAAA;AAAA,wBAKpBX,EAAA,MAAA;AAAA,kBAGqCA,EAAA,MAAA;AAAA,oBACNA,EAAA,MAAA;AAAA;AAAA,EAKrCY,EAAAN,EAAA;AAAA;AAAA,IAAyBO,eAAAR;AAAA,wBAEIL,EAAA,QAAA;AAAA,oBACgBA,EAAA,QAAA;AAAA,aACJA,EAAA,QAAA;AAAA;AAAA,IACPa,eAAAR;AAAA,wBAELL,EAAA,QAAA,MAAA;AAAA,oBACsBA,EAAA,QAAA,MAAA;AAAA,kBACJA,EAAA,QAAA,MAAA;AAAA;AAAA,IACFa,qBAAAR;AAAA,MAEVS;AAAA;AAAA,EAK5BC,EAAAC,EAAA,WAAqB,CAAA,CAAA,GAAAC,EAAA,MAAAC,EAAA,KAAAC,EAAA,UAAAC,EAAA,UAAAC,EAAA,GAAAC,CAAA,EAAAC,IAAA,CAExB,MAAAC,EAAAC,EAAAA,QACAC,EAAAT,GAAA,GAAAO,iBAEAG,EAAA,CAAmB,GAAAC,EAAAF,EAAAN,EAAAC,EAAAC,CAAA,EACuC,IAAAC,EACxD,KAAA,UACM,EAOR,OAAAM,EAAAjB,EAAA,CAAA,GAJA,CAAuB,QAAAc,CACZ,EAGX,SAAA,CAEII,EAAAjB,EAAA,CAAA,GAAAc,EAAA,EAA6BE,EAAAxB,EAAA,CAAA,QAAA,CAAA,CAAAc,EAAA,SAAA,CAE1BA,GAAAW,EAAAC,EAAA,CAAA,KAAAZ,EAAA,SAAA,UAAA,EAA6C,IAAGD,CAAE,EAAA,CACrD,CAAA,CAAA,CACF,CAGN,EAEAH,EAAA,YAAA"}