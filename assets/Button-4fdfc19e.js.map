{"version":3,"file":"Button-4fdfc19e.js","sources":["../../../../packages/components/src/components/Button/Button.styles.tsx","../../../../packages/components/src/components/Button/Button.tsx"],"sourcesContent":["import styled, { css } from 'styled-components';\nimport {\n  focusVisible,\n  focusVisibleTransitionValue,\n  normalizeButton,\n  selection,\n} from '../../helpers/styling';\nimport { getFontStyling } from '../Typography/Typography.utils';\nimport { buttonTokens as tokens, typographyTypes } from './Button.tokens';\nimport {\n  ButtonAppearance,\n  ButtonPurpose,\n  ButtonSize,\n  IconPosition,\n} from './Button.types';\n\nconst {\n  button: { base, sizes, appearances },\n} = tokens;\n\nconst getAppearanceAndPurposeStyling = (\n  appearance: ButtonAppearance,\n  purpose: ButtonPurpose\n) => {\n  switch (appearance) {\n    case 'filled':\n    case 'rounded':\n      return css`\n        background-color: ${appearances[appearance].purpose[purpose].base\n          .backgroundColor};\n        border-color: ${appearances[appearance].purpose[purpose].base\n          .borderColor};\n        &:hover {\n          background-color: ${appearances[appearance].purpose[purpose].hover\n            .backgroundColor};\n          border-color: ${appearances[appearance].purpose[purpose].hover\n            .borderColor};\n        }\n        &:active {\n          background-color: ${appearances[appearance].purpose[purpose].active\n            .backgroundColor};\n          border-color: ${appearances[appearance].purpose[purpose].active\n            .borderColor};\n        }\n      `;\n    case 'ghost':\n      return css`\n        background-color: ${appearances.ghost.base.backgroundColor};\n        border-color: ${appearances.ghost.purpose[purpose].base.borderColor};\n        &:hover {\n          color: ${appearances.ghost.purpose[purpose].hover.color};\n          border-color: ${appearances.ghost.purpose[purpose].hover.borderColor};\n          box-shadow: ${appearances.ghost.purpose[purpose].hover.boxShadow};\n        }\n        &:active {\n          color: ${appearances.ghost.purpose[purpose].active.color};\n          border-color: ${appearances.ghost.purpose[purpose].active\n            .borderColor};\n          box-shadow: ${appearances.ghost.purpose[purpose].active.boxShadow};\n        }\n      `;\n    case 'borderless':\n      return css`\n        background-color: ${appearances.borderless.base.backgroundColor};\n        border-color: ${appearances.borderless.base.borderColor};\n        text-decoration: ${appearances.borderless.base.textDecoration};\n        text-decoration-color: ${appearances.borderless.base\n          .textDecorationColor};\n        &:hover {\n          color: ${appearances.borderless.purpose[purpose].hover.color};\n          text-decoration-color: ${appearances.borderless.purpose[purpose].hover\n            .textDecorationColor};\n        }\n        &:active {\n          color: ${appearances.borderless.purpose[purpose].active.color};\n          text-decoration-color: ${appearances.borderless.purpose[purpose]\n            .active.textDecorationColor};\n        }\n      `;\n  }\n};\n\ntype ButtonWrapperProps = {\n  appearance: ButtonAppearance;\n  purpose: ButtonPurpose;\n  size: ButtonSize;\n  fullWidth: boolean;\n  hasIcon: boolean;\n  hasLabel: boolean;\n  isLoading: boolean;\n  iconPosition?: IconPosition;\n};\n\nexport const ButtonWrapper = styled.button<ButtonWrapperProps>`\n  ${normalizeButton}\n  border: ${base.border};\n  user-select: text;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  height: fit-content;\n  width: ${({ fullWidth }) => (fullWidth ? '100%' : 'fit-content')};\n  cursor: ${({ isLoading }) => (isLoading ? 'not-allowed' : 'pointer')};\n  box-shadow: none;\n  text-decoration: none;\n\n  @media (prefers-reduced-motion: no-preference) {\n    transition: background-color 0.2s, text-decoration-color 0.2s,\n      box-shadow 0.2s, border-color 0.2s, color 0.2s,\n      ${focusVisibleTransitionValue};\n  }\n\n  ${({ appearance, purpose }) =>\n    css`\n      border-radius: ${appearances[appearance].base.borderRadius};\n      box-shadow: ${appearances[appearance].base.boxShadow};\n      color: ${appearances[appearance].purpose[purpose].base.color};\n      ${getAppearanceAndPurposeStyling(appearance, purpose)}\n    `}\n\n  ${({ hasIcon, hasLabel, appearance, purpose }) =>\n    hasIcon &&\n    !hasLabel &&\n    appearance === 'borderless' &&\n    css`\n      &:hover {\n        border-color: ${appearances[appearance].purpose[purpose].icon.hover.borderColor};\n        box-shadow: ${appearances[appearance].purpose[purpose].icon.hover.boxShadow};\n      }\n      &:active {\n        border-color:: ${appearances[appearance].purpose[purpose].icon.active.borderColor};\n        box-shadow: ${appearances[appearance].purpose[purpose].icon.active.boxShadow};\n      }\n    `}\n    ${({ hasIcon, hasLabel, size }) =>\n    hasIcon &&\n    hasLabel &&\n    css`\n      gap: ${sizes[size].textAndIcon.gap};\n    `}\n\n  ${({ size, hasLabel }) =>\n    hasLabel\n      ? css`\n          ${getFontStyling(typographyTypes[size])}\n          padding: ${sizes[size].text.padding};\n        `\n      : css`\n          font-size: ${sizes[size].justIcon.icon.fontSize};\n          padding: ${sizes[size].justIcon.icon.padding};\n        `}\n\n  ${({ fullWidth, hasIcon, hasLabel, isLoading, iconPosition }) =>\n    fullWidth &&\n    (!hasIcon || !hasLabel || isLoading\n      ? css`\n          justify-content: center;\n        `\n      : hasIcon && hasLabel && iconPosition === 'left'\n      ? css`\n          justify-content: left;\n        `\n      : css`\n          justify-content: space-between;\n        `)}\n\n  &:focus-visible, &.focus-visible {\n    ${focusVisible}\n  }\n\n  *::selection {\n    ${selection}\n  }\n`;\n\ntype StyledIconWrapperSpanProps = {\n  iconPosition?: IconPosition;\n  size: ButtonSize;\n  absolutePosition?: boolean;\n  isHidden?: boolean;\n  justIcon?: boolean;\n};\n\nexport const StyledIconWrapperSpan = styled.span<StyledIconWrapperSpanProps>`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  ${({ absolutePosition }) =>\n    absolutePosition &&\n    css`\n      position: absolute;\n    `}\n  ${({ isHidden }) =>\n    isHidden &&\n    css`\n      visibility: hidden;\n    `}\n  ${({ justIcon, size }) =>\n    justIcon &&\n    css`\n      height: ${sizes[size].justIcon.wrapper.height};\n      width: ${sizes[size].justIcon.wrapper.width};\n    `}\n`;\n\ntype LabelProps = {\n  isHidden?: boolean;\n};\n\nexport const Label = styled.span<LabelProps>`\n  ${({ isHidden }) =>\n    isHidden &&\n    css`\n      visibility: hidden;\n    `}\n`;\n","import { ElementType, forwardRef, MouseEvent } from 'react';\nimport { buttonTokens as tokens } from './Button.tokens';\nimport { Icon } from '../Icon';\nimport { Spinner } from '../Spinner';\nimport { ButtonProps } from './Button.types';\nimport { ButtonWrapper, StyledIconWrapperSpan, Label } from './Button.styles';\nimport { getBaseHTMLProps } from '../../types';\n\nconst {\n  button: { sizes, appearances },\n} = tokens;\n\nexport const Button = forwardRef<HTMLButtonElement, ButtonProps>(\n  (props, ref) => {\n    const {\n      label,\n      purpose = 'primary',\n      size = 'medium',\n      iconPosition = 'left',\n      appearance = 'filled',\n      href,\n      target,\n      loading = false,\n      loadingTooltip = 'Lagring pågår',\n      fullWidth = false,\n      icon,\n      onClick,\n      onFocus,\n      onBlur,\n      id,\n      className,\n      htmlProps,\n      ...rest\n    } = props;\n\n    const as: ElementType = href ? 'a' : 'button';\n\n    const hasLabel = !!label;\n    const hasIcon = !!icon;\n\n    const wrapperProps = {\n      ...getBaseHTMLProps(id, className, htmlProps, rest),\n      href,\n      label,\n      as,\n      rel: href ? 'noreferrer noopener' : undefined,\n      target: href && target ? target : undefined,\n      ref,\n      appearance,\n      purpose,\n      iconPosition,\n      fullWidth,\n      hasLabel: hasLabel,\n      hasIcon: hasIcon,\n      isLoading: loading,\n      size,\n      onClick: (\n        event: MouseEvent<HTMLButtonElement, globalThis.MouseEvent>\n      ) => {\n        if (!loading && onClick) {\n          onClick(event);\n        }\n      },\n      onFocus,\n      onBlur,\n    };\n\n    const isIconButton = !hasLabel && hasIcon;\n\n    const iconElement = icon && (\n      <StyledIconWrapperSpan\n        size={size}\n        isHidden={hasIcon && loading}\n        justIcon={isIconButton}\n      >\n        <Icon icon={icon} iconSize=\"inherit\" />\n      </StyledIconWrapperSpan>\n    );\n\n    return (\n      <ButtonWrapper {...wrapperProps} aria-disabled={loading}>\n        {!isIconButton && (\n          <>\n            {iconPosition === 'left' && iconElement}\n            <Label isHidden={loading} aria-hidden={loading}>\n              {label}\n            </Label>\n            {iconPosition === 'right' && iconElement}\n          </>\n        )}\n        {isIconButton && iconElement}\n        {loading && (\n          <StyledIconWrapperSpan\n            size={size}\n            absolutePosition={hasIcon || hasLabel}\n          >\n            <Spinner\n              color={appearances[appearance].purpose[purpose].base.color}\n              size={sizes[size].justIcon.icon.fontSize}\n              tooltip={loadingTooltip}\n            />\n          </StyledIconWrapperSpan>\n        )}\n      </ButtonWrapper>\n    );\n  }\n);\n\nButton.displayName = 'Button';\n"],"names":["base","sizes","appearances","tokens","getAppearanceAndPurposeStyling","appearance","purpose","css","ButtonWrapper","styled","normalizeButton","fullWidth","isLoading","focusVisibleTransitionValue","hasIcon","hasLabel","size","getFontStyling","typographyTypes","iconPosition","focusVisible","selection","StyledIconWrapperSpan","absolutePosition","isHidden","justIcon","Label","Button","forwardRef","props","ref","label","href","target","loading","loadingTooltip","icon","onClick","onFocus","onBlur","id","className","htmlProps","rest","as","wrapperProps","getBaseHTMLProps","event","isIconButton","iconElement","jsx","Icon","jsxs","Fragment","Spinner"],"mappings":"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"}