{"version":3,"file":"Tooltip-86dec931.js","sources":["../../../../packages/components/src/components/Tooltip/Tooltip.tokens.tsx","../../../../packages/components/src/components/Tooltip/Tooltip.styles.tsx","../../../../packages/components/src/components/Tooltip/Tooltip.tsx"],"sourcesContent":["import { ddsBaseTokens } from '@norges-domstoler/dds-design-tokens';\n\nconst { colors, spacing } = ddsBaseTokens;\n\nconst wrapper = {\n  padding: `${spacing.SizesDdsSpacingLocalX075}`,\n};\n\nconst svgArrow = {\n  border: {\n    fill: colors.DdsColorPrimaryLighter,\n  },\n  background: {\n    fill: colors.DdsColorNeutralsWhite,\n  },\n};\n\nexport const tooltipTokens = {\n  wrapper,\n  svgArrow,\n};\n","import styled from 'styled-components';\nimport { Paper } from '@norges-domstoler/dds-core';\nimport { visibilityTransition } from '@norges-domstoler/dds-core';\nimport {\n  defaultTypographyType,\n  getFontStyling,\n} from '@norges-domstoler/dds-typography';\nimport { tooltipTokens as tokens } from './Tooltip.tokens';\n\nconst { wrapper } = tokens;\n\nexport const SvgArrow = styled.svg`\n  width: 36px;\n  height: 9px;\n`;\n\nexport const ArrowWrapper = styled.div``;\n\nexport const Container = styled.div`\n  width: fit-content;\n`;\n\ntype WrapperProps = {\n  open: boolean;\n};\n\nexport const TooltipWrapper = styled(Paper)<WrapperProps>`\n  ${({ open }) => visibilityTransition(open)}\n  width: fit-content;\n  position: absolute;\n  z-index: 80;\n  text-align: center;\n  padding: ${wrapper.padding};\n  ${getFontStyling(defaultTypographyType)};\n`;\n","import React, {\n  Children as ReactChildren,\n  cloneElement,\n  forwardRef,\n  HTMLAttributes,\n  isValidElement,\n  useEffect,\n  useId,\n  useRef,\n  useState,\n} from 'react';\nimport {\n  Placement,\n  useCombinedRef,\n  useOnKeyDown,\n  useFloatPosition,\n} from '@norges-domstoler/dds-core';\nimport {\n  BaseComponentProps,\n  getBaseHTMLProps,\n} from '@norges-domstoler/dds-core';\nimport { combineHandlers } from '@norges-domstoler/dds-core';\nimport {\n  ArrowWrapper,\n  Container,\n  SvgArrow,\n  TooltipWrapper,\n} from './Tooltip.styles';\nimport { tooltipTokens as tokens } from './Tooltip.tokens';\n\nconst { svgArrow } = tokens;\n\ntype AnchorElement = React.ReactElement & React.RefAttributes<HTMLElement>;\n\ntype PickedHTMLAttributes = Pick<\n  HTMLAttributes<HTMLDivElement>,\n  'style' | 'onMouseLeave' | 'onMouseOver'\n>;\n\nexport type TooltipProps = BaseComponentProps<\n  HTMLDivElement,\n  {\n    /**Innhold i tooltip. */\n    text: string;\n    /**Plassering i forhold til anchor-elementet. */\n    placement?: Placement;\n    /**Anchor-elementet. */\n    children: AnchorElement;\n    /**Forsinkelse for nÃ¥r tooltip skal dukke opp. Oppgis i millisekunder.  */\n    delay?: number;\n    /**`id` for tooltip. */\n    tooltipId?: string;\n  } & PickedHTMLAttributes,\n  Omit<HTMLAttributes<HTMLDivElement>, 'children' | keyof PickedHTMLAttributes>\n>;\n\nexport const Tooltip = forwardRef<HTMLDivElement, TooltipProps>(\n  (props, ref) => {\n    const {\n      text,\n      placement = 'bottom',\n      children,\n      tooltipId,\n      delay = 100,\n      style,\n      onMouseLeave,\n      onMouseOver,\n      id,\n      className,\n      htmlProps,\n      ...rest\n    } = props;\n\n    const generatedId = useId();\n    const uniqueTooltipId = tooltipId ?? `${generatedId}-tooltip`;\n    const [open, setOpen] = useState(false);\n    const [inView, setInView] = useState(false);\n    const [arrowElement, setArrowElement] = useState<HTMLElement | null>(null);\n    const { reference, floating, styles } = useFloatPosition(arrowElement, {\n      placement,\n    });\n    const tooltipRef = useRef<HTMLDivElement>(null);\n    const combinedRef = useCombinedRef(ref, floating, tooltipRef);\n\n    const closeWhenNotInView: IntersectionObserverCallback = entries => {\n      const [entry] = entries;\n      entry.isIntersecting ? setInView(true) : setInView(false);\n    };\n\n    useEffect(() => {\n      const options = {\n        root: null,\n        rootMargin: '0px',\n      };\n      const ref = tooltipRef.current;\n      const observer = new IntersectionObserver(closeWhenNotInView, options);\n\n      if (ref) observer.observe(ref);\n\n      return () => {\n        if (ref) observer.unobserve(ref);\n      };\n    }, [tooltipRef]);\n\n    useEffect(() => {\n      if (tooltipRef.current) {\n        window.addEventListener('scroll', () => {\n          closeTooltip();\n        });\n      }\n      return () => {\n        if (tooltipRef.current) {\n          window.removeEventListener('scroll', () => {});\n        }\n      };\n    }, []);\n\n    let timer: ReturnType<typeof setTimeout>;\n\n    useEffect(() => {\n      return () => {\n        clearTimeout(timer);\n      };\n    }, []);\n\n    useOnKeyDown(['Escape', 'Esc'], () => {\n      if (open) setOpen(false);\n    });\n\n    const closeTooltip = () => {\n      clearTimeout(timer);\n      setOpen(false);\n    };\n    const openTooltip = () => {\n      if (!open) {\n        clearTimeout(timer);\n        timer = setTimeout(() => setOpen(true), delay);\n      }\n    };\n\n    const anchorProps = children.props as HTMLAttributes<HTMLElement>;\n\n    const anchorElement = ReactChildren.only(\n      isValidElement(children) &&\n        cloneElement(children, {\n          ref: reference,\n          onFocus: combineHandlers(openTooltip, anchorProps.onFocus),\n          onBlur: combineHandlers(closeTooltip, anchorProps.onBlur),\n          'aria-describedby': uniqueTooltipId,\n        })\n    );\n\n    const containerProps = {\n      ...getBaseHTMLProps(id, className, htmlProps, rest),\n      style,\n      onMouseLeave: combineHandlers(closeTooltip, onMouseLeave),\n      onMouseOver: combineHandlers(openTooltip, onMouseOver),\n    };\n\n    const wrapperProps = {\n      id: uniqueTooltipId,\n      ref: combinedRef,\n      role: 'tooltip',\n      'aria-hidden': !open,\n      open: open && inView,\n      style: { ...styles.floating },\n    };\n\n    const arrowWrapperProps = {\n      ref: setArrowElement,\n      style: styles.arrow,\n    };\n\n    return (\n      <Container {...containerProps}>\n        {anchorElement}\n        <TooltipWrapper {...wrapperProps} elevation={1} border=\"light\">\n          {text}\n          <ArrowWrapper {...arrowWrapperProps}>\n            <SvgArrow>\n              <path\n                d=\"M16.586 6.586L10 0h16.154a.373.373 0 00-.263.11l-6.477 6.476a2 2 0 01-2.828 0z\"\n                fill={svgArrow.background.fill}\n              />\n              <path\n                fillRule=\"evenodd\"\n                clipRule=\"evenodd\"\n                d=\"M26.5.5l-6.732 6.94a2.5 2.5 0 01-3.536 0L9.5.5H11l5.94 6.232a1.5 1.5 0 002.12 0L25 .5h1.5z\"\n                fill={svgArrow.border.fill}\n              />\n            </SvgArrow>\n          </ArrowWrapper>\n        </TooltipWrapper>\n      </Container>\n    );\n  }\n);\n\nTooltip.displayName = 'Tooltip';\n"],"names":["colors","spacing","ddsBaseTokens","wrapper","svgArrow","tooltipTokens","tokens","SvgArrow","styled","ArrowWrapper","Container","TooltipWrapper","Paper","open","visibilityTransition","getFontStyling","defaultTypographyType","Tooltip","forwardRef","props","ref","text","placement","children","tooltipId","delay","style","onMouseLeave","onMouseOver","id","className","htmlProps","rest","generatedId","useId","uniqueTooltipId","setOpen","useState","inView","setInView","arrowElement","setArrowElement","reference","floating","styles","useFloatPosition","tooltipRef","useRef","combinedRef","useCombinedRef","closeWhenNotInView","entries","entry","useEffect","options","observer","closeTooltip","timer","useOnKeyDown","openTooltip","anchorProps","anchorElement","ReactChildren","isValidElement","cloneElement","combineHandlers","containerProps","getBaseHTMLProps","wrapperProps","arrowWrapperProps","jsxs","jsx"],"mappings":"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"}