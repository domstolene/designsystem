{"version":3,"file":"Pagination-9859b6ab.js","sources":["../../../../packages/components/src/components/Pagination/paginationGenerator.tsx","../../../../packages/components/src/components/Pagination/Pagination.tokens.tsx","../../../../packages/components/src/components/Pagination/Pagination.tsx"],"sourcesContent":["const arrayRange = (start: number, end: number) => {\n  const length = end - start + 1;\n  return Array.from({ length }, (_, idx) => idx + start);\n};\n\nexport function PaginationGenerator(\n  pagesAmount: number,\n  activePage: number\n): (string | number)[] {\n  const siblingsCount = 1;\n  const maxPagesShown = 7;\n  const pagesBeforeTruncator = 5;\n  const truncator = 'truncator';\n\n  let pageRange: (string | number)[];\n\n  if (pagesAmount > 4) {\n    const middleStartPage = Math.max(\n      1,\n      activePage < pagesBeforeTruncator || pagesAmount <= maxPagesShown\n        ? 1\n        : activePage + siblingsCount + 1 >= pagesAmount\n        ? pagesAmount - 4 // - 4 to fit total columns /\n        : activePage > 4 && pagesAmount > maxPagesShown\n        ? activePage - siblingsCount\n        : 1\n    );\n\n    const middleEndOffset =\n      activePage < pagesBeforeTruncator && pagesAmount > maxPagesShown\n        ? pagesBeforeTruncator\n        : activePage < pagesBeforeTruncator && pagesAmount <= maxPagesShown\n        ? pagesAmount\n        : activePage + siblingsCount + 1 < pagesAmount - 1\n        ? activePage + siblingsCount\n        : activePage + siblingsCount + 1 === pagesAmount - 1\n        ? pagesAmount\n        : pagesAmount;\n\n    const middleEndPage = Math.min(pagesAmount, middleEndOffset);\n    pageRange = arrayRange(middleStartPage, middleEndPage);\n    const truncatedLeft = middleStartPage > 2 && pagesAmount > maxPagesShown;\n    const truncatedRight =\n      pagesAmount - middleEndPage > 1 && pagesAmount > maxPagesShown;\n\n    if (truncatedLeft && truncatedRight) {\n      pageRange = [1, truncator, ...pageRange, truncator, pagesAmount];\n    } else if (truncatedLeft && !truncatedRight) {\n      pageRange = [1, truncator, ...pageRange];\n    } else if (!truncatedLeft && truncatedRight) {\n      pageRange = [...pageRange, truncator, pagesAmount];\n    }\n    return [...pageRange];\n  }\n\n  return arrayRange(1, pagesAmount);\n}\n","import { ddsBaseTokens } from '@norges-domstoler/dds-design-tokens';\n\nconst { spacing, colors } = ddsBaseTokens;\n\nconst list = {\n  gap: spacing.SizesDdsSpacingLocalX075,\n};\n\nconst truncationIcon = {\n  color: colors.DdsColorNeutralsGray7,\n};\n\nconst outerContainer = {\n  gap: spacing.SizesDdsSpacingLocalX075,\n};\nconst indicatorsContainer = {\n  gap: spacing.SizesDdsSpacingLocalX075,\n};\n\nexport const paginationTokens = {\n  outerContainer,\n  indicatorsContainer,\n  truncationIcon,\n  list,\n};\n","import { forwardRef, HTMLAttributes, useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport { Typography } from '@norges-domstoler/dds-typography';\nimport { Button } from '../Button';\nimport { Select } from '../Select';\nimport { PaginationGenerator } from './paginationGenerator';\nimport { Icon } from '@norges-domstoler/dds-icons';\nimport { paginationTokens as tokens } from './Pagination.tokens';\nimport {\n  MoreHorizontalIcon,\n  ChevronLeftIcon,\n  ChevronRightIcon,\n  ChevronFirstIcon,\n  ChevronLastIcon,\n} from '@norges-domstoler/dds-icons';\nimport {\n  BaseComponentProps,\n  getBaseHTMLProps,\n} from '@norges-domstoler/dds-core';\n\nconst { outerContainer, indicatorsContainer, truncationIcon, list } = tokens;\n\nconst Nav = styled.nav`\n  display: flex;\n  align-items: center;\n`;\n\nconst List = styled.ol`\n  display: grid;\n  grid-auto-flow: column;\n  gap: ${list.gap};\n  margin: 0;\n  padding: 0;\n`;\n\ntype ListItemProps = {\n  isHidden?: boolean;\n};\n\nconst ListItem = styled.li<ListItemProps>`\n  display: inline-grid;\n  align-content: center;\n  ${({ isHidden }) =>\n    isHidden &&\n    css`\n      visibility: hidden;\n    `}\n`;\n\nconst OuterContainer = styled.div<{ smallScreen?: boolean }>`\n  display: flex;\n  gap: ${outerContainer.gap};\n  ${({ smallScreen }) =>\n    smallScreen\n      ? css`\n          flex-direction: column;\n          align-items: center;\n        `\n      : css`\n          justify-content: space-between;\n          flex-wrap: wrap;\n        `}\n`;\n\nconst IndicatorsContainer = styled.div`\n  display: grid;\n  grid-auto-flow: column;\n  align-items: center;\n  gap: ${indicatorsContainer.gap};\n`;\n\nexport type PaginationOption = {\n  label: string;\n  value: number;\n};\n\nexport type PaginationProps = BaseComponentProps<\n  HTMLElement,\n  {\n    /**Totalt antall elementer å paginere. */\n    itemsAmount: number;\n    /**Antall elementer per side ved innlastning av komponenten. */\n    defaultItemsPerPage?: number;\n    /**Den aktive siden ved innlastning av komponenten. */\n    defaultActivePage?: number;\n    /**Spesifiserer om selve pagineringen skal vises. */\n    withPagination?: boolean;\n    /**Spesifiserer om teksten `'Vis x-y av z'` skal vises. */\n    withCounter?: boolean;\n    /**Spesifiserer om `<Select />` til å velge antall resultater per side skal vises. */\n    withSelect?: boolean;\n    /**Custom options for `<Select />`. **OBS!** hvis det settes custom `selectOptions` bør \"alle\"-alternativet inkluderes der det er relevant, da brukere ofte liker å ha muligheten. */\n    selectOptions?: PaginationOption[];\n    /**Brukes til å hente side og eventuelt annen logikk ved endring av side. */\n    onChange?: (\n      event: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n      page: number\n    ) => void;\n    /**Brukes til å hente `selectedOption` og eventuelt kjøre annen logikk når `withSelect=true` ved endring av alternativ. */\n    onSelectOptionChange?: (option: PaginationOption | null) => void;\n    /**Spesifiserer om versjonen for små skjermer skal vises; den viser færre sideknapper og stacker subkomponentene. */\n    smallScreen?: boolean;\n  },\n  Omit<HTMLAttributes<HTMLElement>, 'onChange'>\n>;\n\nexport const Pagination = forwardRef<HTMLElement, PaginationProps>(\n  (props, ref) => {\n    const {\n      itemsAmount,\n      defaultItemsPerPage = 10,\n      defaultActivePage = 1,\n      withPagination = true,\n      withCounter,\n      withSelect,\n      selectOptions = [\n        { label: '10', value: 10 },\n        { label: '25', value: 25 },\n        { label: '50', value: 50 },\n        { label: 'Alle', value: itemsAmount },\n      ],\n      smallScreen,\n      onChange,\n      onSelectOptionChange,\n      id,\n      className,\n      htmlProps,\n      ...rest\n    } = props;\n\n    const [activePage, setActivePage] = useState(defaultActivePage);\n    const [itemsPerPage, setItemsPerPage] = useState(defaultItemsPerPage);\n\n    const pagesLength = Math.ceil(itemsAmount / itemsPerPage);\n\n    const items = PaginationGenerator(pagesLength, activePage);\n\n    const onPageChange = (\n      event: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n      page: number\n    ) => {\n      page && setActivePage(page);\n      if (event && onChange) {\n        onChange(event, page);\n      }\n    };\n\n    const handleSelectChange = (option: PaginationOption | null) => {\n      setItemsPerPage(option?.value as number);\n      if (onSelectOptionChange) {\n        onSelectOptionChange(option);\n      }\n    };\n\n    const listItems =\n      items.length > 0\n        ? items.map((item, i) => {\n            const isActive = item === activePage;\n            return (\n              <ListItem key={`pagination-item-${i}`}>\n                {item !== 'truncator' ? (\n                  <Button\n                    label={item.toString()}\n                    purpose={isActive ? 'primary' : 'secondary'}\n                    appearance={isActive ? 'filled' : 'ghost'}\n                    size=\"small\"\n                    onClick={event => {\n                      onPageChange(event, item as number);\n                    }}\n                    aria-label={\n                      isActive\n                        ? `Nåværende side (side ${item})`\n                        : `Gå til side ${item}`\n                    }\n                  />\n                ) : (\n                  <Icon\n                    icon={MoreHorizontalIcon}\n                    color={truncationIcon.color}\n                  />\n                )}\n              </ListItem>\n            );\n          })\n        : undefined;\n\n    const previousPageButton = (\n      <Button\n        purpose=\"secondary\"\n        appearance=\"ghost\"\n        size=\"small\"\n        icon={ChevronLeftIcon}\n        onClick={event => {\n          onPageChange(event, activePage - 1);\n        }}\n        aria-label=\"Gå til forrige siden\"\n      />\n    );\n\n    const nextPageButton = (\n      <Button\n        purpose=\"secondary\"\n        appearance=\"ghost\"\n        size=\"small\"\n        icon={ChevronRightIcon}\n        onClick={event => {\n          onPageChange(event, activePage + 1);\n        }}\n        aria-label=\"Gå til neste siden\"\n      />\n    );\n\n    const navProps = !withSelect &&\n      !withCounter && {\n        ...getBaseHTMLProps(id, className, htmlProps, rest),\n      };\n\n    const containerProps = {\n      ...getBaseHTMLProps(id, className, htmlProps, rest),\n      smallScreen,\n    };\n\n    const isOnFirstPage = activePage === 1;\n    const isOnLastPage = activePage === pagesLength;\n\n    const navigation = withPagination ? (\n      <Nav ref={ref} aria-label=\"paginering\" {...navProps}>\n        <List>\n          <ListItem isHidden={isOnFirstPage} aria-hidden={isOnFirstPage}>\n            {previousPageButton}\n          </ListItem>\n          {listItems}\n          <ListItem isHidden={isOnLastPage} aria-hidden={isOnLastPage}>\n            {nextPageButton}\n          </ListItem>\n        </List>\n      </Nav>\n    ) : null;\n\n    const smallScreenNavigation = withPagination ? (\n      <Nav ref={ref} aria-label=\"paginering\" {...navProps}>\n        <List>\n          <ListItem isHidden={isOnFirstPage} aria-hidden={isOnFirstPage}>\n            <Button\n              purpose=\"secondary\"\n              appearance=\"ghost\"\n              size=\"small\"\n              icon={ChevronFirstIcon}\n              onClick={event => {\n                onPageChange(event, 1);\n              }}\n              aria-label=\"Gå til første siden\"\n            />\n          </ListItem>\n          <ListItem isHidden={isOnFirstPage} aria-hidden={isOnFirstPage}>\n            {previousPageButton}\n          </ListItem>\n          <ListItem>\n            <Button\n              label={activePage.toString()}\n              size=\"small\"\n              onClick={event => {\n                onPageChange(event, activePage);\n              }}\n            />\n          </ListItem>\n          <ListItem isHidden={isOnLastPage} aria-hidden={isOnLastPage}>\n            {nextPageButton}\n          </ListItem>\n          <ListItem isHidden={isOnLastPage} aria-hidden={isOnLastPage}>\n            <Button\n              purpose=\"secondary\"\n              appearance=\"ghost\"\n              size=\"small\"\n              icon={ChevronLastIcon}\n              onClick={event => {\n                onPageChange(event, pagesLength);\n              }}\n              aria-label=\"Gå til siste siden\"\n            />\n          </ListItem>\n        </List>\n      </Nav>\n    ) : null;\n\n    const activePageFirstItem =\n      activePage === 1 ? 1 : activePage * itemsPerPage - itemsPerPage + 1;\n\n    const activePageLastItem =\n      activePage === pagesLength ? itemsAmount : activePage * itemsPerPage;\n\n    const navigationToBeRendered = smallScreen\n      ? smallScreenNavigation\n      : navigation;\n\n    return !withCounter && !withSelect ? (\n      navigationToBeRendered\n    ) : (\n      <OuterContainer {...containerProps}>\n        <IndicatorsContainer>\n          {withSelect && (\n            <Select\n              options={selectOptions}\n              isSearchable={false}\n              width=\"88px\"\n              defaultValue={{\n                label: itemsPerPage.toString(),\n                value: itemsPerPage,\n              }}\n              isClearable={false}\n              onChange={handleSelectChange}\n              aria-label=\"Antall elementer per side\"\n            />\n          )}\n          {withCounter && (\n            <Typography typographyType=\"supportingStyleLabel01\" as=\"p\">\n              Viser {activePageFirstItem}-{activePageLastItem} av {itemsAmount}\n            </Typography>\n          )}\n        </IndicatorsContainer>\n        {navigationToBeRendered}\n      </OuterContainer>\n    );\n  }\n);\n\nPagination.displayName = 'Pagination';\n"],"names":["arrayRange","start","end","length","_","idx","PaginationGenerator","pagesAmount","activePage","truncator","pageRange","middleStartPage","middleEndOffset","middleEndPage","truncatedLeft","truncatedRight","spacing","colors","ddsBaseTokens","list","truncationIcon","outerContainer","indicatorsContainer","paginationTokens","tokens","Nav","styled","List","ListItem","isHidden","css","OuterContainer","smallScreen","IndicatorsContainer","Pagination","forwardRef","props","ref","itemsAmount","defaultItemsPerPage","defaultActivePage","withPagination","withCounter","withSelect","selectOptions","onChange","onSelectOptionChange","id","className","htmlProps","rest","setActivePage","useState","itemsPerPage","setItemsPerPage","pagesLength","items","onPageChange","event","page","handleSelectChange","option","listItems","item","i","isActive","jsx","Button","Icon","MoreHorizontalIcon","previousPageButton","ChevronLeftIcon","nextPageButton","ChevronRightIcon","navProps","getBaseHTMLProps","containerProps","isOnFirstPage","isOnLastPage","navigation","jsxs","smallScreenNavigation","ChevronFirstIcon","ChevronLastIcon","activePageFirstItem","activePageLastItem","navigationToBeRendered","Select","Typography"],"mappings":"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"}