{"version":3,"file":"InternalHeader-a00ed4d2.js","sources":["../../../../packages/components/src/components/InternalHeader/InternalHeader.tokens.tsx","../../../../packages/components/src/components/InternalHeader/InternalHeader.styles.tsx","../../../../packages/components/src/components/InternalHeader/NavigationItem.tsx","../../../../packages/components/src/components/InternalHeader/InternalHeaderListItem.tsx","../../../../packages/components/src/components/InternalHeader/InternalHeader.tsx"],"sourcesContent":["import { ddsBaseTokens } from '@norges-domstoler/dds-design-tokens';\nimport { StaticTypographyType } from '@norges-domstoler/dds-typography';\n\nconst { border, colors, spacing } = ddsBaseTokens;\n\nconst borderStyle = `${border.BordersDdsBorderStyleLightStrokeWeight} ${border.BordersDdsBorderStyleLightStroke} solid `;\n\nexport const typographyTypes: Record<string, StaticTypographyType> = {\n  navLink: 'bodySans01',\n};\n\nconst navLink = {\n  base: {\n    color: colors.DdsColorNeutralsGray9,\n    backgroundColor: colors.DdsColorNeutralsWhite,\n    padding: `${spacing.SizesDdsSpacingLocalX075} ${spacing.SizesDdsSpacingLocalX15}`,\n  },\n  hover: {\n    color: colors.DdsColorInteractiveDark,\n  },\n  active: {\n    color: colors.DdsColorInteractiveDark,\n  },\n  current: {\n    color: colors.DdsColorInteractiveDarkest,\n    backgroundColor: colors.DdsColorPrimaryLightest,\n  },\n};\n\nconst outerContainer = {\n  backgroundColor: colors.DdsColorNeutralsWhite,\n};\n\nconst applicationNameWrapper = {\n  padding: `${spacing.SizesDdsSpacingLocalX1} ${spacing.SizesDdsSpacingLocalX15}`,\n};\n\nconst lovisaWrapper = {\n  padding: `${spacing.SizesDdsSpacingLocalX1} ${spacing.SizesDdsSpacingLocalX15}`,\n  borderRight: borderStyle,\n};\n\nconst banner = {\n  borderBottom: borderStyle,\n  paddingRight: spacing.SizesDdsSpacingLocalX1,\n  hasContextMenu: {\n    paddingRight: spacing.SizesDdsSpacingLayoutX4,\n  },\n};\n\nconst navigation = {\n  borderBottom: borderStyle,\n};\n\nconst contextGroup = {\n  right: spacing.SizesDdsSpacingLocalX075,\n  top: spacing.SizesDdsSpacingLocalX025,\n};\n\nexport const internalHeaderTokens = {\n  navLink,\n  outerContainer,\n  applicationNameWrapper,\n  lovisaWrapper,\n  banner,\n  navigation,\n  contextGroup,\n};\n","import styled, { css } from 'styled-components';\nimport { internalHeaderTokens as tokens } from './InternalHeader.tokens';\nimport { InternalHeaderProps } from './InternalHeader.types';\nimport { OverflowMenu } from '../OverflowMenu';\nimport { selection } from '@norges-domstoler/dds-core';\n\nconst {\n  outerContainer,\n  applicationNameWrapper,\n  lovisaWrapper,\n  banner,\n  navigation,\n  contextGroup,\n} = tokens;\n\nexport const OuterContainer = styled.div`\n  position: relative;\n  *::selection {\n    ${selection}\n  }\n  background-color: ${outerContainer.backgroundColor};\n`;\n\ninterface BannerProps {\n  hasContextMenu?: boolean;\n}\n\nexport const BannerWrapper = styled.div<BannerProps>`\n  position: relative;\n  display: flex;\n  align-items: center;\n  border-bottom: ${banner.borderBottom};\n  padding-right: ${banner.paddingRight};\n  ${({ hasContextMenu }) =>\n    hasContextMenu &&\n    css`\n      padding-right: ${banner.hasContextMenu.paddingRight};\n    `}\n`;\n\nexport const BannerLeftWrapper = styled.div`\n  display: flex;\n`;\n\nexport const ApplicationNameWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  padding: ${applicationNameWrapper.padding};\n`;\n\nexport const LovisaWrapper = styled.div`\n  padding: ${lovisaWrapper.padding};\n  border-right: ${lovisaWrapper.borderRight};\n`;\n\nexport const Navigation = styled.nav`\n  border-bottom: ${navigation.borderBottom};\n`;\n\ntype NavListProps = Pick<InternalHeaderProps, 'smallScreen'>;\n\nexport const NavigationList = styled.ul<NavListProps>`\n  box-sizing: border-box;\n  display: flex;\n  ${({ smallScreen }) =>\n    smallScreen &&\n    css`\n      flex-direction: column;\n    `}\n  list-style-type: none;\n  padding: 0;\n  margin: 0;\n`;\n\nexport const ContextMenuGroup = styled.div`\n  position: absolute;\n  top: ${contextGroup.top};\n  right: ${contextGroup.right};\n`;\n\nexport const StyledOverflowMenu = styled(OverflowMenu)`\n  max-height: calc(100vh - 110px);\n`;\n","import { AnchorHTMLAttributes, forwardRef } from 'react';\nimport styled, { css } from 'styled-components';\nimport { getFontStyling } from '@norges-domstoler/dds-typography';\nimport {\n  internalHeaderTokens as tokens,\n  typographyTypes,\n} from './InternalHeader.tokens';\nimport { focusVisible } from '@norges-domstoler/dds-form';\n\nconst { navLink } = tokens;\n\ninterface LinkProps {\n  isCurrent?: boolean;\n}\n\nexport const Link = styled.a<LinkProps>`\n  display: flex;\n  align-items: center;\n  height: 100%;\n  box-sizing: border-box;\n  text-decoration: none;\n  @media (prefers-reduced-motion: no-preference) {\n    transition: background-color 0.2s;\n  }\n  color: ${navLink.base.color};\n  background-color: ${navLink.base.backgroundColor};\n  padding: ${navLink.base.padding};\n  ${getFontStyling(typographyTypes.navLink)}\n  &:hover {\n    color: ${navLink.hover.color};\n  }\n  &:active {\n    color: ${navLink.active.color};\n  }\n  &:focus-visible,\n  &.focus-visible {\n    ${focusVisible};\n  }\n  ${({ isCurrent }) =>\n    isCurrent &&\n    css`\n      color: ${navLink.current.color};\n      background-color: ${navLink.current.backgroundColor};\n      &:hover {\n        color: ${navLink.current.color};\n      }\n    `}\n`;\n\nexport type NavigationItemProps = {\n  title: string;\n  isCurrent?: boolean;\n} & AnchorHTMLAttributes<HTMLAnchorElement>;\n\nexport const NavigationItem = forwardRef<\n  HTMLAnchorElement,\n  NavigationItemProps\n>(({ title, isCurrent, ...rest }, ref) => {\n  const linkProps = {\n    ref,\n    isCurrent,\n\n    ...rest,\n  };\n\n  return (\n    <Link {...linkProps} aria-current={isCurrent ? 'page' : undefined}>\n      {title}\n    </Link>\n  );\n});\n","import { forwardRef, HTMLAttributes } from 'react';\nimport styled from 'styled-components';\n\nconst Li = styled.li`\n  box-sizing: border-box;\n`;\n\nexport type InternalHeaderListItemProps = HTMLAttributes<HTMLLIElement>;\n\nexport const InternalHeaderListItem = forwardRef<\n  HTMLLIElement,\n  InternalHeaderListItemProps\n>(({ children, ...rest }, ref) => {\n  const props = {\n    ref,\n    ...rest,\n  };\n\n  return <Li {...props}>{children}</Li>;\n});\n","import { useRef, useState } from 'react';\nimport { Typography } from '@norges-domstoler/dds-typography';\nimport { Button } from '../Button';\nimport { InternalHeaderProps } from './InternalHeader.types';\nimport {\n  OuterContainer,\n  Navigation,\n  NavigationList,\n  BannerWrapper,\n  BannerLeftWrapper,\n  LovisaWrapper,\n  ApplicationNameWrapper,\n  ContextMenuGroup,\n  StyledOverflowMenu,\n} from './InternalHeader.styles';\nimport { NavigationItem } from './NavigationItem';\nimport { InternalHeaderListItem } from './InternalHeaderListItem';\nimport { getBaseHTMLProps } from '@norges-domstoler/dds-core';\nimport { MenuIcon, MoreVerticalIcon } from '@norges-domstoler/dds-icons';\n\nexport const InternalHeader = (props: InternalHeaderProps) => {\n  const {\n    applicationDesc,\n    applicationName,\n    smallScreen,\n    navigationElements,\n    contextMenuElements,\n    currentPageHref,\n    userProps,\n    onCurrentPageChange,\n    id,\n    className,\n    htmlProps,\n    ...rest\n  } = props;\n\n  const [contextMenuIsClosed, setContextMenuIsClosed] = useState(true);\n  const [currentPage, setCurrentPage] = useState<string | undefined>(\n    currentPageHref,\n  );\n\n  const buttonRef = useRef<HTMLButtonElement>(null);\n\n  const handleCurrentPageChange = (href: string) => {\n    setCurrentPage(href);\n    onCurrentPageChange && onCurrentPageChange();\n  };\n\n  const handleContextMenuClick = () => {\n    setContextMenuIsClosed(!contextMenuIsClosed);\n  };\n\n  const onOveflowMenuClose = () => setContextMenuIsClosed(true);\n\n  const hasNavigationElements =\n    !!navigationElements && navigationElements.length > 0;\n  const hasContextMenuElements =\n    !!contextMenuElements && contextMenuElements.length > 0;\n  const hasNavInContextMenu = smallScreen && hasNavigationElements;\n\n  const navigation =\n    hasNavigationElements && !smallScreen ? (\n      <Navigation aria-label=\"sidenavigasjon\">\n        <NavigationList>\n          {navigationElements.map((item, index) => {\n            const { href, ...rest } = item;\n            const isCurrent = href === currentPage;\n            return (\n              <InternalHeaderListItem key={index}>\n                <NavigationItem\n                  href={href}\n                  {...rest}\n                  isCurrent={isCurrent}\n                  onClick={() => handleCurrentPageChange(href)}\n                />\n              </InternalHeaderListItem>\n            );\n          })}\n        </NavigationList>\n      </Navigation>\n    ) : null;\n\n  const hasContextMenu =\n    hasContextMenuElements || !!userProps || hasNavInContextMenu;\n  return (\n    <OuterContainer {...getBaseHTMLProps(id, className, htmlProps, rest)}>\n      <BannerWrapper hasContextMenu={hasContextMenu}>\n        <BannerLeftWrapper>\n          <LovisaWrapper>\n            <Typography typographyType=\"bodySans02\" bold as=\"span\">\n              {applicationName}\n            </Typography>\n          </LovisaWrapper>\n          <ApplicationNameWrapper>\n            <Typography typographyType=\"bodySans02\" as=\"span\">\n              {applicationDesc}\n            </Typography>\n          </ApplicationNameWrapper>\n        </BannerLeftWrapper>\n      </BannerWrapper>\n      {navigation}\n      {hasContextMenu && (\n        <ContextMenuGroup>\n          <Button\n            ref={buttonRef}\n            icon={hasNavInContextMenu ? MenuIcon : MoreVerticalIcon}\n            appearance=\"borderless\"\n            purpose=\"secondary\"\n            onClick={handleContextMenuClick}\n            aria-haspopup=\"menu\"\n            aria-expanded={!contextMenuIsClosed ? true : undefined}\n            aria-label=\"åpne meny\"\n          />\n          <StyledOverflowMenu\n            isOpen={!contextMenuIsClosed}\n            onClose={onOveflowMenuClose}\n            anchorRef={buttonRef}\n            navItems={hasNavInContextMenu ? navigationElements : undefined}\n            items={hasContextMenuElements ? contextMenuElements : undefined}\n            userProps={userProps}\n          />\n        </ContextMenuGroup>\n      )}\n    </OuterContainer>\n  );\n};\n\nInternalHeader.displayName = 'InternalHeader';\n"],"names":["border","colors","spacing","ddsBaseTokens","borderStyle","typographyTypes","navLink","outerContainer","applicationNameWrapper","lovisaWrapper","banner","navigation","contextGroup","internalHeaderTokens","tokens","OuterContainer","styled","selection","BannerWrapper","hasContextMenu","css","BannerLeftWrapper","ApplicationNameWrapper","LovisaWrapper","Navigation","NavigationList","smallScreen","ContextMenuGroup","StyledOverflowMenu","OverflowMenu","Link","getFontStyling","focusVisible","isCurrent","NavigationItem","forwardRef","title","rest","ref","linkProps","jsx","Li","InternalHeaderListItem","children","props","InternalHeader","applicationDesc","applicationName","navigationElements","contextMenuElements","currentPageHref","userProps","onCurrentPageChange","id","className","htmlProps","contextMenuIsClosed","setContextMenuIsClosed","useState","currentPage","setCurrentPage","buttonRef","useRef","handleCurrentPageChange","href","handleContextMenuClick","onOveflowMenuClose","hasNavigationElements","hasContextMenuElements","hasNavInContextMenu","item","index","rest2","jsxs","getBaseHTMLProps","Typography","Button","MenuIcon","MoreVerticalIcon"],"mappings":"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"}