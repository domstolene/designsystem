{"version":3,"file":"OverflowMenu-a3528fee.js","sources":["../../../../packages/components/src/components/OverflowMenu/OverflowMenu.tsx"],"sourcesContent":["import { forwardRef, useEffect, useId } from 'react';\nimport styled from 'styled-components';\nimport { selection, visibilityTransition } from '@norges-domstoler/dds-core';\nimport { scrollbarStyling } from '../ScrollableContainer';\nimport {\n  useCombinedRef,\n  useOnClickOutside,\n  useOnKeyDown,\n  useFloatPosition,\n  useRoveFocus,\n} from '@norges-domstoler/dds-core';\nimport { OverflowMenuItem } from './OverflowMenuItem';\nimport { overflowMenuTokens as tokens } from './OverflowMenu.tokens';\nimport { Divider } from '../Divider';\nimport {\n  OverflowMenuContextItem,\n  OverflowMenuNavItem,\n  OverflowMenuProps,\n} from '.';\nimport { getBaseHTMLProps } from '@norges-domstoler/dds-core';\nimport { PersonIcon } from '@norges-domstoler/dds-icons';\n\nconst { container, divider } = tokens;\n\ntype ContainerProps = { isOpen: boolean };\n\nexport const Container = styled.div<ContainerProps>`\n  box-sizing: border-box;\n  z-index: 100;\n  overflow-y: auto;\n  min-width: 180px;\n  max-width: 300px;\n  ${({ isOpen }) => visibilityTransition(isOpen)}\n  border: ${container.border};\n  background-color: ${container.backgroundColor};\n  border-radius: ${container.borderRadius};\n\n  ${scrollbarStyling.webkit}\n  ${scrollbarStyling.firefox}\n\n  *::selection {\n    ${selection}\n  }\n`;\n\nexport const OverflowMenuList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  list-style-type: none;\n  padding: 0;\n  margin: 0;\n`;\n\nconst StyledDivider = styled(Divider)`\n  margin-left: ${divider.marginLeft};\n  margin-right: ${divider.marginRight};\n`;\n\nexport const OverflowMenu = forwardRef<HTMLDivElement, OverflowMenuProps>(\n  (props, ref) => {\n    const {\n      anchorRef,\n      onClose,\n      onToggle,\n      isOpen = false,\n      placement = 'bottom-end',\n      items,\n      navItems,\n      userProps,\n      id,\n      offset = tokens.offset,\n      className,\n      htmlProps = {},\n      ...rest\n    } = props;\n\n    const { refs, styles } = useFloatPosition(null, {\n      placement,\n      offset,\n    });\n\n    const combinedRef = useCombinedRef(ref, refs.setFloating);\n\n    useEffect(() => {\n      anchorRef\n        ? refs.setReference(anchorRef.current)\n        : refs.setReference(null);\n    }, [anchorRef]);\n\n    useOnClickOutside(\n      [refs?.floating?.current, refs?.reference?.current as HTMLElement | null],\n      () => {\n        if (isOpen) {\n          onClose && onClose();\n          onToggle && onToggle();\n        }\n      }\n    );\n\n    useOnKeyDown(['Esc', 'Escape'], () => {\n      if (isOpen) {\n        onClose && onClose();\n        onToggle && onToggle();\n        anchorRef && anchorRef.current?.focus();\n      }\n    });\n\n    useOnKeyDown(['Tab'], () => {\n      if (isOpen) {\n        onClose && onClose();\n        onToggle && onToggle();\n      }\n    });\n\n    const interactiveItems: (OverflowMenuContextItem | OverflowMenuNavItem)[] =\n      [];\n\n    const hasContextItems = !!items && items.length > 0;\n    const hasNavItems = !!navItems && navItems.length > 0;\n    const { name: username, ...userPropsRest } = userProps || {};\n    const hasStaticUser =\n      username && userProps && !userProps.href && !userProps.onClick;\n    const hasInteractiveUser =\n      username && userProps && (!!userProps.href || !!userProps.onClick);\n\n    hasInteractiveUser &&\n      interactiveItems.push({ title: username, ...userPropsRest });\n    hasNavItems && interactiveItems.push(...navItems);\n    hasContextItems && interactiveItems.push(...items);\n\n    const hasInteractiveItems = interactiveItems.length > 0;\n\n    const [focus, setFocus] = useRoveFocus(\n      interactiveItems && interactiveItems.length,\n      !isOpen\n    );\n\n    const interactiveItemsList = hasInteractiveItems\n      ? interactiveItems.map((item, index) => (\n          <li key={index}>\n            <OverflowMenuItem\n              index={index}\n              focus={focus === index && isOpen}\n              setFocus={setFocus}\n              icon={hasInteractiveUser && index === 0 ? PersonIcon : undefined}\n              {...item}\n              onClick={(\n                e: React.MouseEvent<HTMLAnchorElement, MouseEvent> &\n                  React.MouseEvent<HTMLButtonElement, MouseEvent>\n              ) => {\n                item.onClick && item.onClick(e);\n                onToggle && onToggle();\n                onClose && onClose();\n              }}\n            />\n          </li>\n        ))\n      : null;\n\n    const interactiveContent = () => {\n      if (hasInteractiveItems) {\n        const userPropsPos = hasInteractiveUser ? 0 : -1;\n        const navItemsFirstPos = hasNavItems ? userPropsPos + 1 : -1;\n        const navItemsLastPos = hasNavItems\n          ? userPropsPos + navItems.length\n          : -1;\n        const contextItemsFirstPos = !hasContextItems\n          ? -1\n          : hasNavItems\n          ? navItemsLastPos + 1\n          : userPropsPos + 1;\n        return (\n          <>\n            {hasInteractiveUser && (\n              <OverflowMenuList>{interactiveItemsList?.[0]}</OverflowMenuList>\n            )}\n            {hasNavItems && (\n              <nav>\n                <OverflowMenuList>\n                  {interactiveItemsList?.slice(\n                    navItemsFirstPos,\n                    navItemsLastPos + 1\n                  )}\n                </OverflowMenuList>\n              </nav>\n            )}\n            {hasNavItems && hasContextItems && (\n              <StyledDivider color=\"primaryLighter\" />\n            )}\n            {hasContextItems && (\n              <OverflowMenuList aria-label=\"kontekstmeny\">\n                {interactiveItemsList?.slice(\n                  contextItemsFirstPos,\n                  interactiveItemsList.length\n                )}\n              </OverflowMenuList>\n            )}\n          </>\n        );\n      }\n    };\n\n    const { style = {}, ...restHTMLProps } = htmlProps;\n    const generatedId = useId();\n\n    const containerProps = {\n      ...getBaseHTMLProps(id, className, restHTMLProps, rest),\n      ref: combinedRef,\n      id: id ?? `${generatedId}-overflowMenu`,\n      isOpen,\n      style: { ...style, ...styles.floating },\n      'aria-hidden': !isOpen,\n      role: 'menu',\n    };\n\n    return (\n      <Container {...containerProps} aria-label=\"bruk piltaster for Ã¥ navigere\">\n        {hasStaticUser && (\n          <OverflowMenuItem title={username} icon={PersonIcon} />\n        )}\n\n        {interactiveContent()}\n      </Container>\n    );\n  }\n);\n\nOverflowMenu.displayName = 'OverflowMenu';\n"],"names":["container","divider","tokens","Container","styled","isOpen","visibilityTransition","scrollbarStyling","selection","OverflowMenuList","StyledDivider","Divider","OverflowMenu","forwardRef","props","ref","anchorRef","onClose","onToggle","placement","items","navItems","userProps","id","offset","className","htmlProps","rest","refs","styles","useFloatPosition","combinedRef","useCombinedRef","useEffect","useOnClickOutside","_a","_b","useOnKeyDown","interactiveItems","hasContextItems","hasNavItems","username","userPropsRest","hasStaticUser","hasInteractiveUser","hasInteractiveItems","focus","setFocus","useRoveFocus","interactiveItemsList","item","index","jsx","OverflowMenuItem","PersonIcon","e","interactiveContent","userPropsPos","navItemsFirstPos","navItemsLastPos","contextItemsFirstPos","jsxs","Fragment","style","restHTMLProps","generatedId","useId","containerProps","getBaseHTMLProps"],"mappings":"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"}