{"version":3,"file":"Popover.stories-3712042b.js","sources":["../../../../packages/components/src/components/Popover/Popover.tokens.tsx","../../../../packages/components/src/components/Popover/Popover.tsx","../../../../packages/components/src/components/Popover/PopoverGroup.tsx"],"sourcesContent":["import { ddsBaseTokens } from '@norges-domstoler/dds-design-tokens';\n\nconst { spacing } = ddsBaseTokens;\n\nconst wrapper = {\n  padding: `${spacing.SizesDdsSpacingLocalX075} ${spacing.SizesDdsSpacingLocalX1} ${spacing.SizesDdsSpacingLocalX15} ${spacing.SizesDdsSpacingLocalX1}`,\n};\nconst closeButton = {\n  top: spacing.SizesDdsSpacingLocalX025,\n  right: spacing.SizesDdsSpacingLocalX025,\n};\n\nconst title = {\n  marginRight: spacing.SizesDdsSpacingLocalX2,\n};\n\nconst content = {\n  noTitle: {\n    marginTop: spacing.SizesDdsSpacingLocalX2,\n  },\n};\n\nexport const popoverTokens = {\n  content,\n  wrapper,\n  closeButton,\n  title,\n};\n","import { ddsBaseTokens } from '@norges-domstoler/dds-design-tokens';\nimport { Property } from 'csstype';\nimport { forwardRef, ReactNode, useEffect } from 'react';\nimport styled, { css } from 'styled-components';\nimport { visibilityTransition } from '@norges-domstoler/dds-core';\nimport {\n  Placement,\n  useCombinedRef,\n  useFloatPosition,\n  useReturnFocusOnBlur,\n  useMountTransition,\n  useOnClickOutside,\n} from '@norges-domstoler/dds-core';\nimport {\n  BaseComponentPropsWithChildren,\n  getBaseHTMLProps,\n} from '@norges-domstoler/dds-core';\nimport { Button } from '../Button';\nimport { Typography } from '@norges-domstoler/dds-typography';\nimport { popoverTokens as tokens } from './Popover.tokens';\nimport { CloseIcon } from '@norges-domstoler/dds-icons';\nimport { Paper } from '@norges-domstoler/dds-core';\nimport { focusVisible } from '@norges-domstoler/dds-form';\n\nconst { spacing: Spacing } = ddsBaseTokens;\nconst { wrapper, content, closeButton, title } = tokens;\n\ntype WrapperProps = {\n  sizeProps?: PopoverSizeProps;\n  hasTransitionedIn?: boolean;\n  isOpen: boolean;\n};\n\nconst Wrapper = styled(Paper)<WrapperProps>`\n  opacity: 0;\n  ${({ hasTransitionedIn, isOpen }) =>\n    hasTransitionedIn && visibilityTransition(hasTransitionedIn && isOpen)}\n  position: absolute;\n  width: fit-content;\n  z-index: 100;\n  padding: ${wrapper.padding};\n\n  &:focus-visible {\n    ${focusVisible}\n  }\n  ${({ sizeProps }) =>\n    sizeProps &&\n    css`\n      ${sizeProps}\n    `}\n`;\n\nconst TitleContainer = styled.div`\n  margin-right: ${title.marginRight};\n`;\n\ntype ContentContainerProps = {\n  hasTitle: boolean;\n  withCloseButton: boolean;\n};\n\nconst ContentContainer = styled.div<ContentContainerProps>`\n  ${({ withCloseButton, hasTitle }) =>\n    withCloseButton &&\n    !hasTitle &&\n    css`\n      margin-top: ${content.noTitle.marginTop};\n    `}\n`;\n\nconst StyledButton = styled(Button)`\n  position: absolute;\n  top: ${closeButton.top};\n  right: ${closeButton.right};\n`;\n\nexport type PopoverSizeProps = {\n  width?: Property.Width<string>;\n  height?: Property.Height<string>;\n  minWidth?: Property.MinWidth<string>;\n  minHeight?: Property.MinHeight<string>;\n  maxWidth?: Property.MaxWidth<string>;\n  maxHeight?: Property.MaxHeight<string>;\n};\n\nexport type PopoverProps = BaseComponentPropsWithChildren<\n  HTMLDivElement,\n  {\n    /**Tittel. */\n    title?: string | ReactNode;\n    /** **OBS!** Propen settes automatisk av `<PopoverGroup />`. Spesifiserer om `<Popover />` skal vises. */\n    isOpen?: boolean;\n    /**Om lukkeknapp skal vises. */\n    withCloseButton?: boolean;\n    /** **OBS!** Propen settes automatisk av `<PopoverGroup />`. Anchor-elementet. */\n    anchorElement?: HTMLElement;\n    /**Spesifiserer hvor komponenten skal plasseres i forhold til anchor-elementet. */\n    placement?: Placement;\n    /**Avstand fra anchor-elementet i px. */\n    offset?: number;\n    /** Ekstra logikk kjørt når lukkeknappen trykkes. */\n    onCloseButtonClick?: () => void;\n    /** Ekstra logikk kjørt når popover mister fokus. */\n    onBlur?: () => void;\n    /**Custom størrelse. */\n    sizeProps?: PopoverSizeProps;\n    /** **OBS!** Propen settes automatisk av `<PopoverGroup />`. Funksjon kjørt ved lukking. */\n    onClose?: () => void;\n  }\n>;\n\nexport const Popover = forwardRef<HTMLDivElement, PopoverProps>(\n  (props, ref) => {\n    const {\n      title,\n      isOpen = false,\n      withCloseButton = true,\n      onBlur,\n      onCloseButtonClick,\n      onClose,\n      anchorElement,\n      children,\n      placement = 'bottom',\n      offset = Spacing.SizesDdsSpacingLocalX05NumberPx,\n      id,\n      className,\n      htmlProps = {},\n      ...rest\n    } = props;\n\n    const popoverRef = useReturnFocusOnBlur(\n      isOpen,\n      () => {\n        onClose && onClose();\n        onBlur && onBlur();\n      },\n      anchorElement && anchorElement\n    );\n\n    const { reference, floating, styles } = useFloatPosition(null, {\n      placement,\n      offset,\n    });\n    const multiRef = useCombinedRef(ref, popoverRef, floating);\n\n    useEffect(() => {\n      anchorElement ? reference(anchorElement) : reference(null);\n    }, [anchorElement]);\n\n    const elements: (HTMLElement | null)[] = [\n      popoverRef.current as HTMLElement,\n    ];\n    if (anchorElement) elements.push(anchorElement);\n\n    useOnClickOutside(elements, () => {\n      if (isOpen) onClose && onClose();\n    });\n\n    const hasTransitionedIn = useMountTransition(isOpen, 400);\n\n    const wrapperProps = {\n      ...getBaseHTMLProps(id, className, htmlProps, rest),\n      ref: multiRef,\n      isOpen,\n      hasTransitionedIn,\n      tabIndex: -1,\n      style: { ...htmlProps.style, ...styles.floating },\n      role: 'dialog',\n    };\n\n    return isOpen || hasTransitionedIn ? (\n      <Wrapper {...wrapperProps} elevation={3} border=\"light\">\n        {title && (\n          <TitleContainer>\n            {typeof title === 'string' ? (\n              <Typography typographyType=\"headingSans02\">{title}</Typography>\n            ) : (\n              title\n            )}\n          </TitleContainer>\n        )}\n        <ContentContainer hasTitle={!!title} withCloseButton={withCloseButton}>\n          {children}\n        </ContentContainer>\n        {withCloseButton && (\n          <StyledButton\n            icon={CloseIcon}\n            appearance=\"borderless\"\n            purpose=\"secondary\"\n            size=\"small\"\n            onClick={onCloseButtonClick}\n            aria-label=\"Lukk\"\n          />\n        )}\n      </Wrapper>\n    ) : null;\n  }\n);\n\nPopover.displayName = 'Popover';\n","import {\n  useState,\n  ReactElement,\n  Children as ReactChildren,\n  cloneElement,\n  isValidElement,\n  useRef,\n  ReactNode,\n  useId,\n} from 'react';\nimport { useOnKeyDown } from '@norges-domstoler/dds-core';\n\nexport type PopoverGroupProps = {\n  /**Callback når det trykkes på lukkeknappen. */\n  onCloseButtonClick?: () => void;\n  /** Callback når det trykkes på anchor-elementet (trigger-elementet). */\n  onTriggerClick?: () => void;\n  /**Forteller `<Popover />` om den skal være åpen.  */\n  isOpen?: boolean;\n  /** `id` til `<Popover />.` */\n  popoverId?: string;\n  /** Barna til wrapperen: anchor-element som det første og `<Popover />` so det adnre.  */\n  children: ReactNode;\n};\n\nexport const PopoverGroup = ({\n  isOpen = false,\n  onCloseButtonClick,\n  onTriggerClick,\n  children,\n  popoverId,\n}: PopoverGroupProps) => {\n  const [open, setOpen] = useState(isOpen);\n\n  const generatedId = useId();\n  const uniquePopoverId = popoverId ?? `${generatedId}-popover`;\n\n  const handleOnCloseButtonClick = () => {\n    setOpen(false);\n    onCloseButtonClick && onCloseButtonClick();\n  };\n\n  const handleOnTriggerClick = () => {\n    setOpen(!open);\n    onTriggerClick && onTriggerClick();\n  };\n\n  const buttonRef = useRef<HTMLElement>(null);\n  const popoverRef = useRef<HTMLDivElement>(null);\n\n  useOnKeyDown(['Esc', 'Escape'], () => {\n    if (open) {\n      setOpen(false);\n      buttonRef.current?.focus();\n    }\n  });\n\n  const handleClose = () => setOpen(false);\n\n  const Children = ReactChildren.map(children, (child, childIndex) => {\n    return (\n      isValidElement(child) &&\n      (childIndex === 0\n        ? cloneElement(child as ReactElement, {\n            'aria-haspopup': 'dialog',\n            'aria-controls': uniquePopoverId,\n            'aria-expanded': open,\n            onClick: handleOnTriggerClick,\n            ref: buttonRef,\n          })\n        : cloneElement(child as ReactElement, {\n            isOpen: open,\n            'aria-hidden': !open,\n            id: uniquePopoverId,\n            onCloseButtonClick: handleOnCloseButtonClick,\n            anchorElement: buttonRef.current,\n            ref: popoverRef,\n            onClose: handleClose,\n          }))\n    );\n  });\n\n  return <>{Children}</>;\n};\n\nPopoverGroup.displayName = 'PopoverGroup';\n"],"names":["spacing","ddsBaseTokens","wrapper","closeButton","title","content","popoverTokens","Spacing","tokens","Wrapper","styled","Paper","hasTransitionedIn","isOpen","visibilityTransition","focusVisible","sizeProps","css","TitleContainer","ContentContainer","withCloseButton","hasTitle","StyledButton","Button","Popover","forwardRef","props","ref","onBlur","onCloseButtonClick","onClose","anchorElement","children","placement","offset","id","className","htmlProps","rest","popoverRef","useReturnFocusOnBlur","reference","floating","styles","useFloatPosition","multiRef","useCombinedRef","useEffect","elements","useOnClickOutside","useMountTransition","wrapperProps","getBaseHTMLProps","jsxs","jsx","Typography","CloseIcon","PopoverGroup","onTriggerClick","popoverId","open","setOpen","useState","generatedId","useId","uniquePopoverId","handleOnCloseButtonClick","handleOnTriggerClick","buttonRef","useRef","useOnKeyDown","_a","handleClose","Children","ReactChildren","child","childIndex","isValidElement","cloneElement"],"mappings":"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"}