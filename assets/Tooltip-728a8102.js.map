{"version":3,"file":"Tooltip-728a8102.js","sources":["../../../../packages/components/src/components/Tooltip/Tooltip.tokens.tsx","../../../../packages/components/src/components/Tooltip/Tooltip.styles.tsx","../../../../packages/components/src/components/Tooltip/Tooltip.tsx"],"sourcesContent":["import { ddsBaseTokens } from '@norges-domstoler/dds-design-tokens';\n\nconst { colors, spacing } = ddsBaseTokens;\n\nconst wrapper = {\n  padding: `${spacing.SizesDdsSpacingLocalX075}`,\n};\n\nconst svgArrow = {\n  border: {\n    fill: colors.DdsColorPrimaryLighter,\n  },\n  background: {\n    fill: colors.DdsColorNeutralsWhite,\n  },\n};\n\nexport const tooltipTokens = {\n  wrapper,\n  svgArrow,\n};\n","import styled from 'styled-components';\nimport { Paper } from '@norges-domstoler/dds-core';\nimport { visibilityTransition } from '@norges-domstoler/dds-core';\nimport {\n  defaultTypographyType,\n  getFontStyling,\n} from '@norges-domstoler/dds-typography';\nimport { tooltipTokens as tokens } from './Tooltip.tokens';\n\nconst { wrapper } = tokens;\n\nexport const SvgArrow = styled.svg`\n  width: 36px;\n  height: 9px;\n`;\n\nexport const ArrowWrapper = styled.div``;\n\nexport const Container = styled.div`\n  width: fit-content;\n`;\n\ntype WrapperProps = {\n  open: boolean;\n};\n\nexport const TooltipWrapper = styled(Paper)<WrapperProps>`\n  ${({ open }) => visibilityTransition(open)}\n  width: fit-content;\n  position: absolute;\n  z-index: 80;\n  text-align: center;\n  padding: ${wrapper.padding};\n  ${getFontStyling(defaultTypographyType)};\n`;\n","import React, {\n  Children as ReactChildren,\n  cloneElement,\n  forwardRef,\n  HTMLAttributes,\n  isValidElement,\n  useEffect,\n  useId,\n  useRef,\n  useState,\n} from 'react';\nimport {\n  Placement,\n  useCombinedRef,\n  useOnKeyDown,\n  useFloatPosition,\n} from '@norges-domstoler/dds-core';\nimport {\n  BaseComponentProps,\n  getBaseHTMLProps,\n} from '@norges-domstoler/dds-core';\nimport { combineHandlers } from '@norges-domstoler/dds-core';\nimport {\n  ArrowWrapper,\n  Container,\n  SvgArrow,\n  TooltipWrapper,\n} from './Tooltip.styles';\nimport { tooltipTokens as tokens } from './Tooltip.tokens';\n\nconst { svgArrow } = tokens;\n\ntype AnchorElement = React.ReactElement & React.RefAttributes<HTMLElement>;\n\ntype PickedHTMLAttributes = Pick<\n  HTMLAttributes<HTMLDivElement>,\n  'style' | 'onMouseLeave' | 'onMouseOver'\n>;\n\nexport type TooltipProps = BaseComponentProps<\n  HTMLDivElement,\n  {\n    /**Innhold i tooltip. */\n    text: string;\n    /**Plassering i forhold til anchor-elementet. */\n    placement?: Placement;\n    /**Anchor-elementet. */\n    children: AnchorElement;\n    /**Forsinkelse for nÃ¥r tooltip skal dukke opp. Oppgis i millisekunder.  */\n    delay?: number;\n    /**`id` for tooltip. */\n    tooltipId?: string;\n  } & PickedHTMLAttributes,\n  Omit<HTMLAttributes<HTMLDivElement>, 'children' | keyof PickedHTMLAttributes>\n>;\n\nexport const Tooltip = forwardRef<HTMLDivElement, TooltipProps>(\n  (props, ref) => {\n    const {\n      text,\n      placement = 'bottom',\n      children,\n      tooltipId,\n      delay = 100,\n      style,\n      onMouseLeave,\n      onMouseOver,\n      id,\n      className,\n      htmlProps,\n      ...rest\n    } = props;\n\n    const generatedId = useId();\n    const uniqueTooltipId = tooltipId ?? `${generatedId}-tooltip`;\n    const [open, setOpen] = useState(false);\n    const [inView, setInView] = useState(false);\n    const [arrowElement, setArrowElement] = useState<HTMLElement | null>(null);\n    const { reference, floating, styles } = useFloatPosition(arrowElement, {\n      placement,\n    });\n    const tooltipRef = useRef<HTMLDivElement>(null);\n    const combinedRef = useCombinedRef(ref, floating, tooltipRef);\n\n    const closeWhenNotInView: IntersectionObserverCallback = entries => {\n      const [entry] = entries;\n      entry.isIntersecting ? setInView(true) : setInView(false);\n    };\n\n    useEffect(() => {\n      const options = {\n        root: null,\n        rootMargin: '0px',\n      };\n      const ref = tooltipRef.current;\n      const observer = new IntersectionObserver(closeWhenNotInView, options);\n\n      if (ref) observer.observe(ref);\n\n      return () => {\n        if (ref) observer.unobserve(ref);\n      };\n    }, [tooltipRef]);\n\n    useEffect(() => {\n      if (tooltipRef.current) {\n        window.addEventListener('scroll', () => {\n          closeTooltip();\n        });\n      }\n      return () => {\n        if (tooltipRef.current) {\n          window.removeEventListener('scroll', () => {});\n        }\n      };\n    }, []);\n\n    let timer: ReturnType<typeof setTimeout>;\n\n    useEffect(() => {\n      return () => {\n        clearTimeout(timer);\n      };\n    }, []);\n\n    useOnKeyDown(['Escape', 'Esc'], () => {\n      if (open) setOpen(false);\n    });\n\n    const closeTooltip = () => {\n      clearTimeout(timer);\n      setOpen(false);\n    };\n    const openTooltip = () => {\n      if (!open) {\n        clearTimeout(timer);\n        timer = setTimeout(() => setOpen(true), delay);\n      }\n    };\n\n    const anchorProps = children.props as HTMLAttributes<HTMLElement>;\n\n    const anchorElement = ReactChildren.only(\n      isValidElement(children) &&\n        cloneElement(children, {\n          ref: reference,\n          onFocus: combineHandlers(openTooltip, anchorProps.onFocus),\n          onBlur: combineHandlers(closeTooltip, anchorProps.onBlur),\n          'aria-describedby': uniqueTooltipId,\n        })\n    );\n\n    const containerProps = {\n      ...getBaseHTMLProps(id, className, htmlProps, rest),\n      style,\n      onMouseLeave: combineHandlers(closeTooltip, onMouseLeave),\n      onMouseOver: combineHandlers(openTooltip, onMouseOver),\n    };\n\n    const wrapperProps = {\n      id: uniqueTooltipId,\n      ref: combinedRef,\n      role: 'tooltip',\n      'aria-hidden': !open,\n      open: open && inView,\n      style: { ...styles.floating },\n    };\n\n    const arrowWrapperProps = {\n      ref: setArrowElement,\n      style: styles.arrow,\n    };\n\n    return (\n      <Container {...containerProps}>\n        {anchorElement}\n        <TooltipWrapper {...wrapperProps} elevation={1} border=\"light\">\n          {text}\n          <ArrowWrapper {...arrowWrapperProps}>\n            <SvgArrow>\n              <path\n                d=\"M16.586 6.586L10 0h16.154a.373.373 0 00-.263.11l-6.477 6.476a2 2 0 01-2.828 0z\"\n                fill={svgArrow.background.fill}\n              />\n              <path\n                fillRule=\"evenodd\"\n                clipRule=\"evenodd\"\n                d=\"M26.5.5l-6.732 6.94a2.5 2.5 0 01-3.536 0L9.5.5H11l5.94 6.232a1.5 1.5 0 002.12 0L25 .5h1.5z\"\n                fill={svgArrow.border.fill}\n              />\n            </SvgArrow>\n          </ArrowWrapper>\n        </TooltipWrapper>\n      </Container>\n    );\n  }\n);\n\nTooltip.displayName = 'Tooltip';\n"],"names":["colors","spacing","ddsBaseTokens","wrapper","svgArrow","tooltipTokens","tokens","SvgArrow","styled","ArrowWrapper","Container","TooltipWrapper","Paper","open","visibilityTransition","getFontStyling","defaultTypographyType","Tooltip","forwardRef","props","ref","text","placement","children","tooltipId","delay","style","onMouseLeave","onMouseOver","id","className","htmlProps","rest","generatedId","useId","uniqueTooltipId","setOpen","useState","inView","setInView","arrowElement","setArrowElement","reference","floating","styles","useFloatPosition","tooltipRef","useRef","combinedRef","useCombinedRef","closeWhenNotInView","entries","entry","useEffect","options","ref2","observer","closeTooltip","timer","useOnKeyDown","openTooltip","anchorProps","anchorElement","ReactChildren","isValidElement","cloneElement","combineHandlers","containerProps","getBaseHTMLProps","wrapperProps","arrowWrapperProps","jsxs","jsx"],"mappings":"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"}