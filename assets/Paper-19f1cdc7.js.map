{"version":3,"file":"Paper-19f1cdc7.js","sources":["../../../../packages/components/src/helpers/Paper/Paper.tokens.tsx","../../../../packages/components/src/helpers/Paper/Paper.tsx"],"sourcesContent":["import { ddsBaseTokens } from '@norges-domstoler/dds-design-tokens';\n\nconst { colors, borderRadius, font } = ddsBaseTokens;\n\nconst paper = {\n  backgroundColor: colors.DdsColorNeutralsWhite,\n  borderRadius: borderRadius.RadiiDdsBorderRadius1Radius,\n  fontFamily: font.DdsFontBodySans01FontFamily,\n};\n\nexport const paperTokens = {\n  paper,\n};\n","import styled, { css } from 'styled-components';\nimport { selection } from '../styling';\nimport { paperTokens as tokens } from './Paper.tokens';\nimport { ddsBaseTokens } from '@norges-domstoler/dds-design-tokens';\nconst { outerShadow, border } = ddsBaseTokens;\n\ntype Elevation = 1 | 2 | 3 | 4;\n\nconst getElevation = (elevation: Elevation) => {\n  switch (elevation) {\n    case 1:\n      return outerShadow.DdsShadow1Onlight;\n    case 2:\n      return outerShadow.DdsShadow2Onlight;\n    case 3:\n      return outerShadow.DdsShadow3Onlight;\n    case 4:\n      return outerShadow.DdsShadow4Onlight;\n  }\n};\n\ntype Border = 'light' | 'dark';\n\nconst getBorder = (borderStyle: Border) => {\n  switch (borderStyle) {\n    case 'light':\n      return `${border.BordersDdsBorderStyleLightStrokeWeight} solid ${border.BordersDdsBorderStyleLightStroke}`;\n    case 'dark':\n      return `${border.BordersDdsBorderStyleDarkStrokeWeight} solid ${border.BordersDdsBorderStyleDarkStroke}`;\n  }\n};\n\ntype PaperProps = {\n  elevation?: Elevation;\n  border?: Border;\n};\n\nexport const Paper = styled.div<PaperProps>`\n  box-sizing: border-box;\n  margin: 0;\n  background-color: ${tokens.paper.backgroundColor};\n  font-family: ${tokens.paper.fontFamily};\n  border-radius: ${tokens.paper.borderRadius};\n  &::selection,\n  *::selection {\n    ${selection}\n  }\n  ${({ elevation }) =>\n    elevation &&\n    css`\n      box-shadow: ${getElevation(elevation)};\n    `}\n  border: ${({ border }) => (border ? getBorder(border) : 'none')}\n`;\n"],"names":["colors","borderRadius","font","ddsBaseTokens","paper","paperTokens","outerShadow","border","getElevation","elevation","getBorder","borderStyle","Paper","styled","tokens","selection","css"],"mappings":"qGAEA,KAAM,CAAE,OAAAA,EAAQ,aAAAC,EAAc,KAAAC,CAAA,EAASC,EAEjCC,EAAQ,CACZ,gBAAiBJ,EAAO,sBACxB,aAAcC,EAAa,4BAC3B,WAAYC,EAAK,2BACnB,EAEaG,EAAc,CACzB,MAAAD,CACF,ECRM,CAAE,YAAAE,EAAa,OAAAC,CAAW,EAAAJ,EAI1BK,EAAgBC,GAAyB,CAC7C,OAAQA,EAAW,CACjB,IAAK,GACH,OAAOH,EAAY,kBACrB,IAAK,GACH,OAAOA,EAAY,kBACrB,IAAK,GACH,OAAOA,EAAY,kBACrB,IAAK,GACH,OAAOA,EAAY,iBACvB,CACF,EAIMI,EAAaC,GAAwB,CACzC,OAAQA,EAAa,CACnB,IAAK,QACI,MAAA,GAAGJ,EAAO,gDAAgDA,EAAO,mCAC1E,IAAK,OACI,MAAA,GAAGA,EAAO,+CAA+CA,EAAO,iCAC3E,CACF,EAOaK,EAAQC,EAAO;AAAA;AAAA;AAAA,sBAGNC,EAAO,MAAM;AAAA,iBAClBA,EAAO,MAAM;AAAA,mBACXA,EAAO,MAAM;AAAA;AAAA;AAAA,MAG1BC;AAAA;AAAA,IAEF,CAAC,CAAE,UAAAN,KACHA,GACAO;AAAAA,oBACgBR,EAAaC,CAAS;AAAA;AAAA,YAE9B,CAAC,CAAE,OAAAF,KAAcA,EAASG,EAAUH,CAAM,EAAI;"}