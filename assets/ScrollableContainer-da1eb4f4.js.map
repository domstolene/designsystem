{"version":3,"file":"ScrollableContainer-da1eb4f4.js","sources":["../../../../packages/components/src/components/ScrollableContainer/Scrollbar.tsx","../../../../packages/components/src/components/ScrollableContainer/ScrollableContainer.tsx"],"sourcesContent":["import {\n  RefObject,\n  useEffect,\n  useRef,\n  useState,\n  useCallback,\n  MouseEvent,\n} from 'react';\nimport styled from 'styled-components';\nimport {\n  BaseComponentProps,\n  getBaseHTMLProps,\n} from '@norges-domstoler/dds-core';\nimport { scrollbarTokens as tokens } from './ScrollableContainer.tokens';\n\nconst { track, thumb, minThumbHeightPx } = tokens;\n\nconst ScrollbarOuterWrapper = styled.div``;\n\nconst ScrollbarElements = styled.div`\n  display: block;\n  height: 100%;\n  position: relative;\n  display: grid;\n  justify-items: center;\n`;\n\nconst Track = styled.div`\n  bottom: 0;\n  top: 0;\n  position: absolute;\n  background-color: ${track.backgroundColor};\n  border-radius: ${track.borderRadius};\n  width: ${track.width};\n`;\n\nconst Thumb = styled.div`\n  position: absolute;\n  background-color: ${thumb.base.backgroundColor};\n  border-radius: ${thumb.base.borderRadius};\n  width: ${thumb.base.width};\n  transition: background-color 0.2s;\n  &:hover {\n    background-color: ${thumb.hover.backgroundColor};\n  }\n`;\n\nexport type ScrollbarProps = BaseComponentProps<\n  HTMLDivElement,\n  {\n    /** Ref til container med innholdet som skal scrolles. */\n    contentRef?: RefObject<HTMLDivElement>;\n  }\n>;\n\nexport const Scrollbar = (props: ScrollbarProps) => {\n  const { id, className, htmlProps, contentRef, ...rest } = props;\n  const trackRef = useRef<HTMLDivElement>(null);\n  const thumbRef = useRef<HTMLDivElement>(null);\n  const [thumbHeight, setThumbHeight] = useState(minThumbHeightPx);\n  const [isScrollable, setIsScrollable] = useState(true);\n  const [thumbTop, setThumbTop] = useState<number>(0);\n  const observer = useRef<ResizeObserver | null>(null);\n  const [scrollStartPosition, setScrollStartPosition] = useState<number>(0);\n  const [initialScrollTop, setInitialScrollTop] = useState<number>(0);\n  const [isDragging, setIsDragging] = useState(false);\n\n  function handleResize(ref: HTMLDivElement, trackSize: number) {\n    const { clientHeight, scrollHeight } = ref;\n    setIsScrollable(clientHeight !== scrollHeight);\n    setThumbHeight(\n      Math.max((clientHeight / scrollHeight) * trackSize, minThumbHeightPx)\n    );\n  }\n\n  const handleTrackClick = useCallback(\n    (e: MouseEvent<HTMLDivElement>) => {\n      if (contentRef && contentRef.current) {\n        const { current: trackCurrent } = trackRef;\n        const { current: contentCurrent } = contentRef;\n        if (trackCurrent && contentCurrent) {\n          const { clientY } = e;\n          const target = e.target as HTMLDivElement;\n          const rect = target.getBoundingClientRect();\n          const trackTop = rect.top;\n          const thumbOffset = -(thumbHeight / 2);\n          const clickRatio =\n            (clientY - trackTop + thumbOffset) / trackCurrent.clientHeight;\n          const scrollAmount = Math.floor(\n            clickRatio * contentCurrent.scrollHeight\n          );\n          contentCurrent.scrollTo({\n            top: scrollAmount,\n            behavior: 'smooth',\n          });\n        }\n      }\n    },\n    [thumbHeight]\n  );\n\n  const handleThumbPositioning = useCallback(() => {\n    if (!contentRef?.current || !trackRef.current || !thumbRef.current) {\n      return;\n    }\n    const { scrollTop: contentTop, scrollHeight: contentHeight } =\n      contentRef.current;\n    const { clientHeight } = trackRef.current;\n    let newTop = (+contentTop / +contentHeight) * clientHeight;\n    newTop = Math.min(newTop, clientHeight - thumbHeight);\n    setThumbTop(newTop);\n  }, []);\n\n  useEffect(() => {\n    if (contentRef && contentRef.current && trackRef.current) {\n      const ref = contentRef.current;\n      const { clientHeight } = trackRef.current;\n      observer.current = new ResizeObserver(() => {\n        handleResize(ref, clientHeight);\n      });\n      observer.current.observe(ref);\n      ref.addEventListener('scroll', handleThumbPositioning);\n      return () => {\n        observer.current?.unobserve(ref);\n        ref.removeEventListener('scroll', handleThumbPositioning);\n      };\n    }\n  }, []);\n\n  const handleThumbMousedown = useCallback((e: MouseEvent<HTMLDivElement>) => {\n    setScrollStartPosition(e.clientY);\n    if (contentRef && contentRef.current)\n      setInitialScrollTop(contentRef.current.scrollTop);\n    setIsDragging(true);\n  }, []);\n\n  const handleThumbMouseup = useCallback(() => {\n    if (isDragging) {\n      setIsDragging(false);\n    }\n  }, [isDragging]);\n\n  const handleThumbMousemove = useCallback(\n    (e: globalThis.MouseEvent) => {\n      if (contentRef && contentRef.current) {\n        if (isDragging) {\n          const {\n            scrollHeight: contentScrollHeight,\n            offsetHeight: contentOffsetHeight,\n          } = contentRef.current;\n\n          const deltaY =\n            (e.clientY - scrollStartPosition) *\n            (contentOffsetHeight / thumbHeight);\n          const newScrollTop = Math.min(\n            initialScrollTop + deltaY,\n            contentScrollHeight - contentOffsetHeight\n          );\n\n          contentRef.current.scrollTop = newScrollTop;\n        }\n      }\n    },\n    [isDragging, scrollStartPosition, thumbHeight]\n  );\n\n  useEffect(() => {\n    document.addEventListener('mousemove', handleThumbMousemove);\n    document.addEventListener('mouseup', handleThumbMouseup);\n    document.addEventListener('mouseleave', handleThumbMouseup);\n    return () => {\n      document.removeEventListener('mousemove', handleThumbMousemove);\n      document.removeEventListener('mouseup', handleThumbMouseup);\n      document.removeEventListener('mouseleave', handleThumbMouseup);\n    };\n  }, [handleThumbMousemove, handleThumbMouseup]);\n\n  return isScrollable ? (\n    <ScrollbarOuterWrapper\n      {...getBaseHTMLProps(id, className, htmlProps, rest)}\n    >\n      <ScrollbarElements>\n        <Track ref={trackRef} onClick={handleTrackClick} />\n        <Thumb\n          style={{\n            height: thumbHeight,\n            top: thumbTop,\n          }}\n          ref={thumbRef}\n          onMouseDown={handleThumbMousedown}\n        />\n      </ScrollbarElements>\n    </ScrollbarOuterWrapper>\n  ) : null;\n};\n\nScrollbar.displayName = 'Scrollbar';\n","import { useRef } from 'react';\nimport styled from 'styled-components';\nimport {\n  BaseComponentPropsWithChildren,\n  getBaseHTMLProps,\n} from '@norges-domstoler/dds-core';\nimport { Scrollbar } from './Scrollbar';\nimport { Property } from 'csstype';\nimport { scrollbarTokens as tokens } from './ScrollableContainer.tokens';\nimport {\n  focusVisibleTransitionValue,\n  focusVisible,\n} from '@norges-domstoler/dds-form';\n\nconst { track, content, outerContainer } = tokens;\n\nconst StyledScrollableContainer = styled.div`\n  grid-template: auto / 1fr ${track.width};\n  overflow: hidden;\n  position: relative;\n  display: grid;\n  padding: ${outerContainer.padding};\n`;\n\ntype ContentProps = {\n  height: Property.Height;\n};\n\nconst Content = styled.div<ContentProps>`\n  height: ${({ height }) => height};\n  overflow: auto;\n  scrollbar-width: none;\n  ::-webkit-scrollbar {\n    display: none;\n  }\n  padding-right: ${content.paddingRight};\n  @media (prefers-reduced-motion: no-preference) {\n    transition: ${focusVisibleTransitionValue};\n  }\n  :focus-visible,\n  .focus-visible {\n    outline: ${focusVisible.outline};\n    outline-offset: ${focusVisible.outlineOffset};\n  }\n`;\n\nexport type ScrollableContainerProps = BaseComponentPropsWithChildren<\n  HTMLDivElement,\n  {\n    /**Høyde på innholdscontainer. */\n    contentHeight?: Property.Height;\n  }\n>;\n\nexport const ScrollableContainer = (props: ScrollableContainerProps) => {\n  const {\n    children,\n    id,\n    className,\n    contentHeight = '90vh',\n    htmlProps,\n    ...rest\n  } = props;\n  const ref = useRef<HTMLDivElement>(null);\n\n  return (\n    <StyledScrollableContainer\n      {...getBaseHTMLProps(id, className, htmlProps, rest)}\n    >\n      <Content height={contentHeight} ref={ref} tabIndex={0}>\n        {children}\n      </Content>\n      <Scrollbar contentRef={ref} />\n    </StyledScrollableContainer>\n  );\n};\n\nScrollableContainer.displayName = 'ScrollableContainer';\n"],"names":["track","thumb","minThumbHeightPx","tokens","ScrollbarOuterWrapper","styled","ScrollbarElements","Track","Thumb","Scrollbar","props","id","className","htmlProps","contentRef","rest","trackRef","useRef","thumbRef","thumbHeight","setThumbHeight","useState","isScrollable","setIsScrollable","thumbTop","setThumbTop","observer","scrollStartPosition","setScrollStartPosition","initialScrollTop","setInitialScrollTop","isDragging","setIsDragging","handleResize","ref","trackSize","clientHeight","scrollHeight","handleTrackClick","useCallback","e","trackCurrent","contentCurrent","clientY","trackTop","thumbOffset","clickRatio","scrollAmount","handleThumbPositioning","contentTop","contentHeight","newTop","useEffect","_a","handleThumbMousedown","handleThumbMouseup","handleThumbMousemove","contentScrollHeight","contentOffsetHeight","deltaY","newScrollTop","jsx","getBaseHTMLProps","content","outerContainer","StyledScrollableContainer","Content","height","focusVisibleTransitionValue","focusVisible","ScrollableContainer","children","jsxs"],"mappings":"gQAeA,KAAM,CAAA,MAAEA,EAAO,MAAAC,EAAO,iBAAAC,CAAA,EAAqBC,EAErCC,EAAwBC,EAAO,MAE/BC,EAAoBD,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQ3BE,EAAQF,EAAO;AAAA;AAAA;AAAA;AAAA,sBAICL,EAAM;AAAA,mBACTA,EAAM;AAAA,WACdA,EAAM;AAAA,EAGXQ,EAAQH,EAAO;AAAA;AAAA,sBAECJ,EAAM,KAAK;AAAA,mBACdA,EAAM,KAAK;AAAA,WACnBA,EAAM,KAAK;AAAA;AAAA;AAAA,wBAGEA,EAAM,MAAM;AAAA;AAAA,EAYvBQ,EAAaC,GAA0B,CAClD,KAAM,CAAE,GAAAC,EAAI,UAAAC,EAAW,UAAAC,EAAW,WAAAC,EAAY,GAAGC,CAAS,EAAAL,EACpDM,EAAWC,SAAuB,IAAI,EACtCC,EAAWD,SAAuB,IAAI,EACtC,CAACE,EAAaC,CAAc,EAAIC,WAASnB,CAAgB,EACzD,CAACoB,EAAcC,CAAe,EAAIF,WAAS,EAAI,EAC/C,CAACG,EAAUC,CAAW,EAAIJ,WAAiB,CAAC,EAC5CK,EAAWT,SAA8B,IAAI,EAC7C,CAACU,EAAqBC,CAAsB,EAAIP,WAAiB,CAAC,EAClE,CAACQ,EAAkBC,CAAmB,EAAIT,WAAiB,CAAC,EAC5D,CAACU,EAAYC,CAAa,EAAIX,WAAS,EAAK,EAEzC,SAAAY,EAAaC,EAAqBC,EAAmB,CACtD,KAAA,CAAE,aAAAC,EAAc,aAAAC,CAAiB,EAAAH,EACvCX,EAAgBa,IAAiBC,CAAY,EAC7CjB,EACE,KAAK,IAAKgB,EAAeC,EAAgBF,EAAWjC,CAAgB,CAAA,CAExE,CAEA,MAAMoC,EAAmBC,EAAA,YACtBC,GAAkC,CAC7B,GAAA1B,GAAcA,EAAW,QAAS,CAC9B,KAAA,CAAE,QAAS2B,CAAiB,EAAAzB,EAC5B,CAAE,QAAS0B,CAAmB,EAAA5B,EACpC,GAAI2B,GAAgBC,EAAgB,CAC5B,KAAA,CAAE,QAAAC,CAAY,EAAAH,EAGdI,EAFSJ,EAAE,OACG,wBACE,IAChBK,EAAc,EAAE1B,EAAc,GAC9B2B,GACHH,EAAUC,EAAWC,GAAeJ,EAAa,aAC9CM,EAAe,KAAK,MACxBD,EAAaJ,EAAe,YAAA,EAE9BA,EAAe,SAAS,CACtB,IAAKK,EACL,SAAU,QAAA,CACX,GAGP,EACA,CAAC5B,CAAW,CAAA,EAGR6B,EAAyBT,EAAAA,YAAY,IAAM,CAC3C,GAAA,EAACzB,GAAA,MAAAA,EAAY,UAAW,CAACE,EAAS,SAAW,CAACE,EAAS,QACzD,OAEF,KAAM,CAAE,UAAW+B,EAAY,aAAcC,GAC3CpC,EAAW,QACP,CAAE,aAAAsB,CAAa,EAAIpB,EAAS,QAClC,IAAImC,EAAU,CAACF,EAAa,CAACC,EAAiBd,EAC9Ce,EAAS,KAAK,IAAIA,EAAQf,EAAejB,CAAW,EACpDM,EAAY0B,CAAM,CACpB,EAAG,CAAE,CAAA,EAELC,EAAAA,UAAU,IAAM,CACd,GAAItC,GAAcA,EAAW,SAAWE,EAAS,QAAS,CACxD,MAAMkB,EAAMpB,EAAW,QACjB,CAAE,aAAAsB,CAAa,EAAIpB,EAAS,QACzB,OAAAU,EAAA,QAAU,IAAI,eAAe,IAAM,CAC1CO,EAAaC,EAAKE,CAAY,CAAA,CAC/B,EACQV,EAAA,QAAQ,QAAQQ,CAAG,EACxBA,EAAA,iBAAiB,SAAUc,CAAsB,EAC9C,IAAM,QACFK,EAAA3B,EAAA,UAAA,MAAA2B,EAAS,UAAUnB,GACxBA,EAAA,oBAAoB,SAAUc,CAAsB,CAAA,EAG9D,EAAG,CAAE,CAAA,EAEC,MAAAM,EAAuBf,cAAaC,GAAkC,CAC1EZ,EAAuBY,EAAE,OAAO,EAC5B1B,GAAcA,EAAW,SACPgB,EAAAhB,EAAW,QAAQ,SAAS,EAClDkB,EAAc,EAAI,CACpB,EAAG,CAAE,CAAA,EAECuB,EAAqBhB,EAAAA,YAAY,IAAM,CACvCR,GACFC,EAAc,EAAK,CACrB,EACC,CAACD,CAAU,CAAC,EAETyB,EAAuBjB,EAAA,YAC1BC,GAA6B,CACxB,GAAA1B,GAAcA,EAAW,SACvBiB,EAAY,CACR,KAAA,CACJ,aAAc0B,EACd,aAAcC,CAAA,EACZ5C,EAAW,QAET6C,GACHnB,EAAE,QAAUb,IACZ+B,EAAsBvC,GACnByC,EAAe,KAAK,IACxB/B,EAAmB8B,EACnBF,EAAsBC,CAAA,EAGxB5C,EAAW,QAAQ,UAAY8C,EAGrC,EACA,CAAC7B,EAAYJ,EAAqBR,CAAW,CAAA,EAG/CiC,OAAAA,EAAAA,UAAU,KACC,SAAA,iBAAiB,YAAaI,CAAoB,EAClD,SAAA,iBAAiB,UAAWD,CAAkB,EAC9C,SAAA,iBAAiB,aAAcA,CAAkB,EACnD,IAAM,CACF,SAAA,oBAAoB,YAAaC,CAAoB,EACrD,SAAA,oBAAoB,UAAWD,CAAkB,EACjD,SAAA,oBAAoB,aAAcA,CAAkB,CAAA,GAE9D,CAACC,EAAsBD,CAAkB,CAAC,EAEtCjC,EACLuC,EAACzD,EAAA,CACE,GAAG0D,EAAiBnD,EAAIC,EAAWC,EAAWE,CAAI,EAEnD,WAACT,EACC,CAAA,SAAA,CAAAuD,EAACtD,EAAM,CAAA,IAAKS,EAAU,QAASsB,EAAkB,EACjDuB,EAACrD,EAAA,CACC,MAAO,CACL,OAAQW,EACR,IAAKK,CACP,EACA,IAAKN,EACL,YAAaoC,CAAA,CACf,CAAA,EACF,CAAA,CAEA,EAAA,IACN,EAEA7C,EAAU,YAAc,YCtLxB,KAAM,CAAE,MAAAT,EAAO,QAAA+D,EAAS,eAAAC,EAAA,EAAmB7D,EAErC8D,GAA4B5D,EAAO;AAAA,8BACXL,EAAM;AAAA;AAAA;AAAA;AAAA,aAIvBgE,GAAe;AAAA,EAOtBE,GAAU7D,EAAO;AAAA,YACX,CAAC,CAAE,OAAA8D,CAAa,IAAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAMTJ,EAAQ;AAAA;AAAA,kBAETK;AAAAA;AAAAA;AAAAA;AAAAA,eAIHC,EAAa;AAAA,sBACNA,EAAa;AAAA;AAAA,EAYtBC,GAAuB5D,GAAoC,CAChE,KAAA,CACJ,SAAA6D,EACA,GAAA5D,EACA,UAAAC,EACA,cAAAsC,EAAgB,OAChB,UAAArC,EACA,GAAGE,CACD,EAAAL,EACEwB,EAAMjB,SAAuB,IAAI,EAGrC,OAAAuD,EAACP,GAAA,CACE,GAAGH,EAAiBnD,EAAIC,EAAWC,EAAWE,CAAI,EAEnD,SAAA,CAAA8C,EAACK,IAAQ,OAAQhB,EAAe,IAAAhB,EAAU,SAAU,EACjD,SAAAqC,EACH,EACAV,EAACpD,EAAU,CAAA,WAAYyB,CAAK,CAAA,CAAA,CAAA,CAAA,CAGlC,EAEAoC,GAAoB,YAAc"}