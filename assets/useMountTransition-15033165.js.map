{"version":3,"file":"useMountTransition-15033165.js","sources":["../../../../packages/components/src/utils/getFocusableElements.ts","../../../../packages/components/src/hooks/useMountTransition.tsx"],"sourcesContent":["import { RefObject } from 'react';\n\nexport function getFocusableElements<T extends HTMLElement>(\n  elementRef: RefObject<T>\n): NodeListOf<HTMLElement> | [] {\n  return elementRef && elementRef.current\n    ? elementRef.current.querySelectorAll(\n        'a[href], button:not([disabled]), textarea:not([disabled]), input:not([disabled]), select:not([disabled]), [tabindex]:not([tabindex=\"-1\"])'\n      )\n    : [];\n}\n","import { useEffect, useState } from 'react';\n\n/**\n * Tillater effekter og animasjoner å bli gjennomført like etter et element blir lagt til eller like før det blir fjernet fra DOM.\n * Typisk bruk:\n * ```\n * // CSS\n * .component {\n *  transition: opacity 0.2s;\n *  opacity: 0;\n * }\n *\n * .transitionedIn.mounted {\n *  opacity: 1;\n * }\n *\n * const MyComponent = (props) => {\n *\n * const hasTransitionedIn = useMountTransition(props.isMounted, 500);\n *\n *  return props.isMounted || hasTransitionedIn ? (\n *  <div\n *  className={`component ${hasTransitionedIn && 'transitionedIn'} ${props.isMounted && 'mounted'}`}\n *  >\n *    innhold\n *  </div>)\n * : null;\n *\n * }\n * ```\n * @param isMounted om elementet er mounted.\n * @param unmountDelay hvor lenge transition skal vare før unmount.\n * @returns om transition er ferdig.\n */\n\nexport const useMountTransition = (\n  isMounted: boolean,\n  unmountDelay: number\n) => {\n  const [hasTransitionedIn, setHasTransitionedIn] = useState(false);\n\n  useEffect(() => {\n    let timeoutId: ReturnType<typeof setTimeout>;\n    if (isMounted && !hasTransitionedIn) setHasTransitionedIn(true);\n    else if (!isMounted && hasTransitionedIn) {\n      timeoutId = setTimeout(() => setHasTransitionedIn(false), unmountDelay);\n    }\n    return () => {\n      clearTimeout(timeoutId);\n    };\n  }, [unmountDelay, isMounted, hasTransitionedIn]);\n  return hasTransitionedIn;\n};\n"],"names":["getFocusableElements","elementRef","useMountTransition","isMounted","unmountDelay","hasTransitionedIn","setHasTransitionedIn","useState","useEffect","timeoutId"],"mappings":"wCAEO,SAASA,EACdC,EAC8B,CAC9B,OAAOA,GAAcA,EAAW,QAC5BA,EAAW,QAAQ,iBACjB,6IAEF,EACN,CCyBa,MAAAC,EAAqB,CAChCC,EACAC,IACG,CACH,KAAM,CAACC,EAAmBC,CAAoB,EAAIC,WAAS,EAAK,EAEhEC,OAAAA,EAAAA,UAAU,IAAM,CACV,IAAAC,EACJ,OAAIN,GAAa,CAACE,EAAmBC,EAAqB,EAAI,EACrD,CAACH,GAAaE,IACrBI,EAAY,WAAW,IAAMH,EAAqB,EAAK,EAAGF,CAAY,GAEjE,IAAM,CACX,aAAaK,CAAS,CAAA,CAEvB,EAAA,CAACL,EAAcD,EAAWE,CAAiB,CAAC,EACxCA,CACT"}