{"version":3,"file":"ToggleButtonGroup-93297d84.js","sources":["../../../../packages/components/src/components/ToggleButton/ToggleButtonGroup.tsx"],"sourcesContent":["import { useId } from 'react';\nimport styled, { css } from 'styled-components';\nimport {\n  BaseComponentPropsWithChildren,\n  getBaseHTMLProps,\n} from '@norges-domstoler/dds-core';\nimport { Typography } from '@norges-domstoler/dds-typography';\nimport { toggleButtonTokens as tokens } from './ToggleButton.tokens';\n\ninterface GroupProps {\n  direction?: Direction;\n}\n\nconst Group = styled.div<GroupProps>`\n  gap: ${tokens.group.gap};\n  display: flex;\n  flex-wrap: wrap;\n  ${({ direction }) => css`\n    flex-direction: ${direction};\n  `}\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${tokens.container.gap};\n`;\n\ntype Direction = 'row' | 'column';\n\nexport type ToggleButtonGroupProps = BaseComponentPropsWithChildren<\n  HTMLDivElement,\n  {\n    /** Ledetekst for gruppen. */\n    label?: string;\n    /**Retningen barna legger seg i. */\n    direction?: Direction;\n    /** Custom `id` for ledetekst. Blir generert som default for Ã¥ knytte ledetekst til gruppen.  */\n    labelId?: string;\n  }\n>;\n\nexport const ToggleButtonGroup = (props: ToggleButtonGroupProps) => {\n  const {\n    children,\n    direction = 'row',\n    label,\n    labelId,\n    id,\n    className,\n    htmlProps,\n    ...rest\n  } = props;\n\n  const generatedId = useId();\n  const uniqueLabelId = labelId ?? `${generatedId}-ToggleButtonGroupLabel`;\n  const groupProps = {\n    direction,\n  };\n\n  const containerProps = {\n    ...getBaseHTMLProps(id, className, htmlProps, rest),\n    role: 'group',\n    'aria-labelledby': label ? uniqueLabelId : undefined,\n  };\n\n  return (\n    <Container {...containerProps}>\n      {!!label && (\n        <Typography\n          as=\"span\"\n          typographyType=\"supportingStyleLabel01\"\n          id={uniqueLabelId}\n        >\n          {label}\n        </Typography>\n      )}\n      <Group {...groupProps}>{children}</Group>\n    </Container>\n  );\n};\n\nToggleButtonGroup.displayName = 'ToggleButtonGroup';\n"],"names":["Group","styled","tokens","direction","css","Container","ToggleButtonGroup","props","children","label","labelId","id","className","htmlProps","rest","generatedId","useId","uniqueLabelId","groupProps","containerProps","getBaseHTMLProps","jsxs","jsx","Typography"],"mappings":"ggBAaA,MAAAA,EAAAC,EAAA;AAAA,SAAqBC,EAAA,MAAA,GAAA;AAAA;AAAA;AAAA,IACI,CAAA,CAAA,UAAAC,CAAA,IAAAC;AAAAA,sBAGFD,CAAA;AAAA,GACQ;AAAA,EAI/BE,EAAAJ,EAAA;AAAA;AAAA;AAAA,SAAyBC,EAAA,UAAA,GAAA;AAAA,EAoBlBI,EAAAC,GAAA,CACL,KAAA,CAAM,SAAAC,EACJ,UAAAL,EAAA,MACY,MAAAM,EACZ,QAAAC,EACA,GAAAC,EACA,UAAAC,EACA,UAAAC,EACA,GAAAC,CACG,EAAAP,EAGLQ,EAAAC,EAAAA,QACAC,EAAAP,GAAA,GAAAK,CAAA,0BACAG,EAAA,CAAmB,UAAAf,CACjB,EAGFgB,EAAA,CAAuB,GAAAC,EAAAT,EAAAC,EAAAC,EAAAC,CAAA,EAC6B,KAAA,QAC5C,kBAAAL,EAAAQ,EAAA,MACqC,EAG7C,OAAAI,EAAAhB,EAAA,CAAA,GAAAc,EAAA,SAAA,CAEK,CAAA,CAAAV,GAAAa,EACCC,EAAC,CAAA,GAAA,OACI,eAAA,yBACY,GAAAN,EACX,SAAAR,CAEH,CAAA,EACHa,EAAAtB,EAAA,CAAA,GAAAkB,EAAA,SAAAV,CAAA,CAAA,CAE+B,CAAA,CAAA,CAGvC,EAEAF,EAAA,YAAA"}